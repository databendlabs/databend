// Copyright 2022 Datafuse Labs.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

syntax = "proto3";

package databend_proto;

import "config.proto";

message CatalogMeta {
  uint64 ver = 100;
  uint64 min_reader_ver = 101;

  // Catalog options
  CatalogOption option = 2;

  // The time catalog created.
  string created_on = 20;
}

message CatalogOption {
  oneof catalog_option {
    HiveCatalogOption hive = 2;
    IcebergCatalogOption iceberg = 3;
    ShareCatalogOption share = 4;
  }
}

message HiveCatalogOption {
  uint64 ver = 100;
  uint64 min_reader_ver = 101;

  // Hive metastore thrift uri
  string address = 1;
  StorageConfig storage_params = 2;
}

message IcebergCatalogOption {
  uint64 ver = 100;
  uint64 min_reader_ver = 101;

  // We don't need to StorageConfig in iceberg catalog anymore.
  // StorageConfig storage_params = 1;
  reserved 1;

  oneof iceberg_catalog_option {
    IcebergRestCatalogOption rest_catalog = 2;
    IcebergHmsCatalogOption hms_catalog = 3;
    IcebergGlueCatalogOption glue_catalog = 4;
    IcebergStorageCatalogOption storage_catalog = 5;
  }
}

message IcebergRestCatalogOption {
  uint64 ver = 100;
  uint64 min_reader_ver = 101;

  string uri = 1;
  string warehouse = 2;
  map<string, string> props = 3;
}

message IcebergHmsCatalogOption {
  uint64 ver = 100;
  uint64 min_reader_ver = 101;

  string address = 1;
  string warehouse = 2;
  map<string, string> props = 3;
}

message IcebergGlueCatalogOption {
  uint64 ver = 100;
  uint64 min_reader_ver = 101;

  string warehouse = 1;
  map<string, string> props = 2;
  string address = 3;
}

message IcebergStorageCatalogOption {
  uint64 ver = 100;
  uint64 min_reader_ver = 101;

  string address = 1;
  string table_bucket_arn = 2;
  map<string, string> props = 3;
}

message ShareCatalogOption {
  uint64 ver = 100;
  uint64 min_reader_ver = 101;

  string provider = 1;
  string share_name = 2;
  string share_endpoint = 3;
}