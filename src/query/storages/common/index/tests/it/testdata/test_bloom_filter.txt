+-----------+----------------------+---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| Column ID | Type                 | Column Data                                                                                                                                                                                                                                                                                                               |
+-----------+----------------------+---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| 0         | UInt8                | Column(UInt8([1, 1, 2, 3]))                                                                                                                                                                                                                                                                                               |
| 1         | String               | Column(StringColumn[a, a, b, c])                                                                                                                                                                                                                                                                                          |
| 2         | Map(UInt8, String)   | Column(ArrayColumn { values: Tuple([UInt8([1, 2, 1, 2, 1, 2, 3]), StringColumn[a, b, a, b, b, c, d]]), offsets: [0, 2, 4, 6, 7] })                                                                                                                                                                                        |
| 3         | Map(String, Variant) | Column(ArrayColumn { values: Tuple([StringColumn[a, b, a, b, b, c, d], BinaryColumn { data: 0x20000000100000036162632000000020000002506420000000100000036162632000000020000002506420000000100000036465662000000040000000200000001000000378797a, offsets: [0, 11, 21, 32, 42, 53, 61, 72] }]), offsets: [0, 2, 4, 6, 7] }) |
+-----------+----------------------+---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
expr     : eq<UInt8, UInt8>(0, 0_u8)
filter   : __bloom_column_0_1
domains  : {"0": Number(UInt8(SimpleDomain { min: 1, max: 3 })), "__bloom_column_0_1": Boolean(BooleanDomain { has_false: true, has_true: false })}
result   : MustFalse


+-----------+----------------------+---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| Column ID | Type                 | Column Data                                                                                                                                                                                                                                                                                                               |
+-----------+----------------------+---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| 0         | UInt8                | Column(UInt8([1, 1, 2, 3]))                                                                                                                                                                                                                                                                                               |
| 1         | String               | Column(StringColumn[a, a, b, c])                                                                                                                                                                                                                                                                                          |
| 2         | Map(UInt8, String)   | Column(ArrayColumn { values: Tuple([UInt8([1, 2, 1, 2, 1, 2, 3]), StringColumn[a, b, a, b, b, c, d]]), offsets: [0, 2, 4, 6, 7] })                                                                                                                                                                                        |
| 3         | Map(String, Variant) | Column(ArrayColumn { values: Tuple([StringColumn[a, b, a, b, b, c, d], BinaryColumn { data: 0x20000000100000036162632000000020000002506420000000100000036162632000000020000002506420000000100000036465662000000040000000200000001000000378797a, offsets: [0, 11, 21, 32, 42, 53, 61, 72] }]), offsets: [0, 2, 4, 6, 7] }) |
+-----------+----------------------+---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
expr     : eq<UInt8, UInt8>(0, 1_u8)
filter   : eq<UInt8, UInt8>(0, 1_u8)
domains  : {"0": Number(UInt8(SimpleDomain { min: 1, max: 3 }))}
result   : Uncertain


+-----------+----------------------+---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| Column ID | Type                 | Column Data                                                                                                                                                                                                                                                                                                               |
+-----------+----------------------+---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| 0         | UInt8                | Column(UInt8([1, 1, 2, 3]))                                                                                                                                                                                                                                                                                               |
| 1         | String               | Column(StringColumn[a, a, b, c])                                                                                                                                                                                                                                                                                          |
| 2         | Map(UInt8, String)   | Column(ArrayColumn { values: Tuple([UInt8([1, 2, 1, 2, 1, 2, 3]), StringColumn[a, b, a, b, b, c, d]]), offsets: [0, 2, 4, 6, 7] })                                                                                                                                                                                        |
| 3         | Map(String, Variant) | Column(ArrayColumn { values: Tuple([StringColumn[a, b, a, b, b, c, d], BinaryColumn { data: 0x20000000100000036162632000000020000002506420000000100000036162632000000020000002506420000000100000036465662000000040000000200000001000000378797a, offsets: [0, 11, 21, 32, 42, 53, 61, 72] }]), offsets: [0, 2, 4, 6, 7] }) |
+-----------+----------------------+---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
expr     : eq<UInt8, UInt8>(0, 2_u8)
filter   : eq<UInt8, UInt8>(0, 2_u8)
domains  : {"0": Number(UInt8(SimpleDomain { min: 1, max: 3 }))}
result   : Uncertain


+-----------+----------------------+---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| Column ID | Type                 | Column Data                                                                                                                                                                                                                                                                                                               |
+-----------+----------------------+---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| 0         | UInt8                | Column(UInt8([1, 1, 2, 3]))                                                                                                                                                                                                                                                                                               |
| 1         | String               | Column(StringColumn[a, a, b, c])                                                                                                                                                                                                                                                                                          |
| 2         | Map(UInt8, String)   | Column(ArrayColumn { values: Tuple([UInt8([1, 2, 1, 2, 1, 2, 3]), StringColumn[a, b, a, b, b, c, d]]), offsets: [0, 2, 4, 6, 7] })                                                                                                                                                                                        |
| 3         | Map(String, Variant) | Column(ArrayColumn { values: Tuple([StringColumn[a, b, a, b, b, c, d], BinaryColumn { data: 0x20000000100000036162632000000020000002506420000000100000036162632000000020000002506420000000100000036465662000000040000000200000001000000378797a, offsets: [0, 11, 21, 32, 42, 53, 61, 72] }]), offsets: [0, 2, 4, 6, 7] }) |
+-----------+----------------------+---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
expr     : eq<String, String>(1, "a")
filter   : eq<String, String>(1, "a")
domains  : {"1": String(StringDomain { min: "a", max: Some("c") })}
result   : Uncertain


+-----------+----------------------+---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| Column ID | Type                 | Column Data                                                                                                                                                                                                                                                                                                               |
+-----------+----------------------+---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| 0         | UInt8                | Column(UInt8([1, 1, 2, 3]))                                                                                                                                                                                                                                                                                               |
| 1         | String               | Column(StringColumn[a, a, b, c])                                                                                                                                                                                                                                                                                          |
| 2         | Map(UInt8, String)   | Column(ArrayColumn { values: Tuple([UInt8([1, 2, 1, 2, 1, 2, 3]), StringColumn[a, b, a, b, b, c, d]]), offsets: [0, 2, 4, 6, 7] })                                                                                                                                                                                        |
| 3         | Map(String, Variant) | Column(ArrayColumn { values: Tuple([StringColumn[a, b, a, b, b, c, d], BinaryColumn { data: 0x20000000100000036162632000000020000002506420000000100000036162632000000020000002506420000000100000036465662000000040000000200000001000000378797a, offsets: [0, 11, 21, 32, 42, 53, 61, 72] }]), offsets: [0, 2, 4, 6, 7] }) |
+-----------+----------------------+---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
expr     : eq<String, String>(1, "b")
filter   : eq<String, String>(1, "b")
domains  : {"1": String(StringDomain { min: "a", max: Some("c") })}
result   : Uncertain


+-----------+----------------------+---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| Column ID | Type                 | Column Data                                                                                                                                                                                                                                                                                                               |
+-----------+----------------------+---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| 0         | UInt8                | Column(UInt8([1, 1, 2, 3]))                                                                                                                                                                                                                                                                                               |
| 1         | String               | Column(StringColumn[a, a, b, c])                                                                                                                                                                                                                                                                                          |
| 2         | Map(UInt8, String)   | Column(ArrayColumn { values: Tuple([UInt8([1, 2, 1, 2, 1, 2, 3]), StringColumn[a, b, a, b, b, c, d]]), offsets: [0, 2, 4, 6, 7] })                                                                                                                                                                                        |
| 3         | Map(String, Variant) | Column(ArrayColumn { values: Tuple([StringColumn[a, b, a, b, b, c, d], BinaryColumn { data: 0x20000000100000036162632000000020000002506420000000100000036162632000000020000002506420000000100000036465662000000040000000200000001000000378797a, offsets: [0, 11, 21, 32, 42, 53, 61, 72] }]), offsets: [0, 2, 4, 6, 7] }) |
+-----------+----------------------+---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
expr     : eq<String, String>(1, "d")
filter   : __bloom_column_1_1
domains  : {"1": String(StringDomain { min: "a", max: Some("c") }), "__bloom_column_1_1": Boolean(BooleanDomain { has_false: true, has_true: false })}
result   : MustFalse


+-----------+----------------------+---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| Column ID | Type                 | Column Data                                                                                                                                                                                                                                                                                                               |
+-----------+----------------------+---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| 0         | UInt8                | Column(UInt8([1, 1, 2, 3]))                                                                                                                                                                                                                                                                                               |
| 1         | String               | Column(StringColumn[a, a, b, c])                                                                                                                                                                                                                                                                                          |
| 2         | Map(UInt8, String)   | Column(ArrayColumn { values: Tuple([UInt8([1, 2, 1, 2, 1, 2, 3]), StringColumn[a, b, a, b, b, c, d]]), offsets: [0, 2, 4, 6, 7] })                                                                                                                                                                                        |
| 3         | Map(String, Variant) | Column(ArrayColumn { values: Tuple([StringColumn[a, b, a, b, b, c, d], BinaryColumn { data: 0x20000000100000036162632000000020000002506420000000100000036162632000000020000002506420000000100000036465662000000040000000200000001000000378797a, offsets: [0, 11, 21, 32, 42, 53, 61, 72] }]), offsets: [0, 2, 4, 6, 7] }) |
+-----------+----------------------+---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
expr     : is_true<Boolean NULL>(eq<String NULL, String NULL>(get<T0=UInt8, T1=String><Map(T0, T1 NULL), T0>(CAST(2 AS Map(UInt8, String NULL)), 1_u8), CAST("a" AS String NULL)))
fold_expr: is_true<Boolean NULL>(eq<String NULL, String NULL>(get<T0=UInt8, T1=String><Map(T0, T1 NULL), T0>(CAST(2 AS Map(UInt8, String NULL)), 1_u8), "a"))
filter   : is_true<Boolean NULL>(eq<String NULL, String NULL>(get<T0=UInt8, T1=String><Map(T0, T1 NULL), T0>(CAST(2 AS Map(UInt8, String NULL)), 1_u8), "a"))
domains  : {"2": Map(Some(Tuple([Number(UInt8(SimpleDomain { min: 0, max: 255 })), String(StringDomain { min: "", max: None })])))}
result   : Uncertain


+-----------+----------------------+---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| Column ID | Type                 | Column Data                                                                                                                                                                                                                                                                                                               |
+-----------+----------------------+---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| 0         | UInt8                | Column(UInt8([1, 1, 2, 3]))                                                                                                                                                                                                                                                                                               |
| 1         | String               | Column(StringColumn[a, a, b, c])                                                                                                                                                                                                                                                                                          |
| 2         | Map(UInt8, String)   | Column(ArrayColumn { values: Tuple([UInt8([1, 2, 1, 2, 1, 2, 3]), StringColumn[a, b, a, b, b, c, d]]), offsets: [0, 2, 4, 6, 7] })                                                                                                                                                                                        |
| 3         | Map(String, Variant) | Column(ArrayColumn { values: Tuple([StringColumn[a, b, a, b, b, c, d], BinaryColumn { data: 0x20000000100000036162632000000020000002506420000000100000036162632000000020000002506420000000100000036465662000000040000000200000001000000378797a, offsets: [0, 11, 21, 32, 42, 53, 61, 72] }]), offsets: [0, 2, 4, 6, 7] }) |
+-----------+----------------------+---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
expr     : is_true<Boolean NULL>(eq<String NULL, String NULL>(get<T0=UInt8, T1=String><Map(T0, T1 NULL), T0>(CAST(2 AS Map(UInt8, String NULL)), 2_u8), CAST("b" AS String NULL)))
fold_expr: is_true<Boolean NULL>(eq<String NULL, String NULL>(get<T0=UInt8, T1=String><Map(T0, T1 NULL), T0>(CAST(2 AS Map(UInt8, String NULL)), 2_u8), "b"))
filter   : is_true<Boolean NULL>(eq<String NULL, String NULL>(get<T0=UInt8, T1=String><Map(T0, T1 NULL), T0>(CAST(2 AS Map(UInt8, String NULL)), 2_u8), "b"))
domains  : {"2": Map(Some(Tuple([Number(UInt8(SimpleDomain { min: 0, max: 255 })), String(StringDomain { min: "", max: None })])))}
result   : Uncertain


+-----------+----------------------+---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| Column ID | Type                 | Column Data                                                                                                                                                                                                                                                                                                               |
+-----------+----------------------+---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| 0         | UInt8                | Column(UInt8([1, 1, 2, 3]))                                                                                                                                                                                                                                                                                               |
| 1         | String               | Column(StringColumn[a, a, b, c])                                                                                                                                                                                                                                                                                          |
| 2         | Map(UInt8, String)   | Column(ArrayColumn { values: Tuple([UInt8([1, 2, 1, 2, 1, 2, 3]), StringColumn[a, b, a, b, b, c, d]]), offsets: [0, 2, 4, 6, 7] })                                                                                                                                                                                        |
| 3         | Map(String, Variant) | Column(ArrayColumn { values: Tuple([StringColumn[a, b, a, b, b, c, d], BinaryColumn { data: 0x20000000100000036162632000000020000002506420000000100000036162632000000020000002506420000000100000036465662000000040000000200000001000000378797a, offsets: [0, 11, 21, 32, 42, 53, 61, 72] }]), offsets: [0, 2, 4, 6, 7] }) |
+-----------+----------------------+---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
expr     : is_true<Boolean NULL>(eq<String NULL, String NULL>(get<T0=UInt8, T1=String><Map(T0, T1 NULL), T0>(CAST(2 AS Map(UInt8, String NULL)), 3_u8), CAST("x" AS String NULL)))
fold_expr: is_true<Boolean NULL>(eq<String NULL, String NULL>(get<T0=UInt8, T1=String><Map(T0, T1 NULL), T0>(CAST(2 AS Map(UInt8, String NULL)), 3_u8), "x"))
filter   : is_true<Boolean NULL>(__bloom_column_2_1)
domains  : {"2": Map(Some(Tuple([Number(UInt8(SimpleDomain { min: 0, max: 255 })), String(StringDomain { min: "", max: None })]))), "__bloom_column_2_1": Nullable(NullableDomain { has_null: false, value: Some(Boolean(BooleanDomain { has_false: true, has_true: false })) })}
result   : MustFalse


+-----------+----------------------+---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| Column ID | Type                 | Column Data                                                                                                                                                                                                                                                                                                               |
+-----------+----------------------+---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| 0         | UInt8                | Column(UInt8([1, 1, 2, 3]))                                                                                                                                                                                                                                                                                               |
| 1         | String               | Column(StringColumn[a, a, b, c])                                                                                                                                                                                                                                                                                          |
| 2         | Map(UInt8, String)   | Column(ArrayColumn { values: Tuple([UInt8([1, 2, 1, 2, 1, 2, 3]), StringColumn[a, b, a, b, b, c, d]]), offsets: [0, 2, 4, 6, 7] })                                                                                                                                                                                        |
| 3         | Map(String, Variant) | Column(ArrayColumn { values: Tuple([StringColumn[a, b, a, b, b, c, d], BinaryColumn { data: 0x20000000100000036162632000000020000002506420000000100000036162632000000020000002506420000000100000036465662000000040000000200000001000000378797a, offsets: [0, 11, 21, 32, 42, 53, 61, 72] }]), offsets: [0, 2, 4, 6, 7] }) |
+-----------+----------------------+---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
expr     : is_true<Boolean NULL>(eq<String NULL, String NULL>(TRY_CAST(get<T0=String, T1=Variant><Map(T0, T1 NULL), T0>(CAST(3 AS Map(String, Variant NULL)), "b") AS String NULL), CAST("def" AS String NULL)))
fold_expr: is_true<Boolean NULL>(eq<String NULL, String NULL>(TRY_CAST(get<T0=String, T1=Variant><Map(T0, T1 NULL), T0>(CAST(3 AS Map(String, Variant NULL)), "b") AS String NULL), "def"))
filter   : is_true<Boolean NULL>(eq<String NULL, String NULL>(TRY_CAST(get<T0=String, T1=Variant><Map(T0, T1 NULL), T0>(CAST(3 AS Map(String, Variant NULL)), "b") AS String NULL), "def"))
domains  : {"3": Map(Some(Tuple([String(StringDomain { min: "", max: None }), Undefined])))}
result   : Uncertain


+-----------+----------------------+---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| Column ID | Type                 | Column Data                                                                                                                                                                                                                                                                                                               |
+-----------+----------------------+---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| 0         | UInt8                | Column(UInt8([1, 1, 2, 3]))                                                                                                                                                                                                                                                                                               |
| 1         | String               | Column(StringColumn[a, a, b, c])                                                                                                                                                                                                                                                                                          |
| 2         | Map(UInt8, String)   | Column(ArrayColumn { values: Tuple([UInt8([1, 2, 1, 2, 1, 2, 3]), StringColumn[a, b, a, b, b, c, d]]), offsets: [0, 2, 4, 6, 7] })                                                                                                                                                                                        |
| 3         | Map(String, Variant) | Column(ArrayColumn { values: Tuple([StringColumn[a, b, a, b, b, c, d], BinaryColumn { data: 0x20000000100000036162632000000020000002506420000000100000036162632000000020000002506420000000100000036465662000000040000000200000001000000378797a, offsets: [0, 11, 21, 32, 42, 53, 61, 72] }]), offsets: [0, 2, 4, 6, 7] }) |
+-----------+----------------------+---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
expr     : is_true<Boolean NULL>(eq<String NULL, String NULL>(TRY_CAST(get<T0=String, T1=Variant><Map(T0, T1 NULL), T0>(CAST(3 AS Map(String, Variant NULL)), "d") AS String NULL), CAST("xxx" AS String NULL)))
fold_expr: is_true<Boolean NULL>(eq<String NULL, String NULL>(TRY_CAST(get<T0=String, T1=Variant><Map(T0, T1 NULL), T0>(CAST(3 AS Map(String, Variant NULL)), "d") AS String NULL), "xxx"))
filter   : is_true<Boolean NULL>(__bloom_column_3_1)
domains  : {"3": Map(Some(Tuple([String(StringDomain { min: "", max: None }), Undefined]))), "__bloom_column_3_1": Nullable(NullableDomain { has_null: false, value: Some(Boolean(BooleanDomain { has_false: true, has_true: false })) })}
result   : MustFalse


+-----------+----------------------+---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| Column ID | Type                 | Column Data                                                                                                                                                                                                                                                                                                               |
+-----------+----------------------+---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| 0         | UInt8                | Column(UInt8([1, 1, 2, 3]))                                                                                                                                                                                                                                                                                               |
| 1         | String               | Column(StringColumn[a, a, b, c])                                                                                                                                                                                                                                                                                          |
| 2         | Map(UInt8, String)   | Column(ArrayColumn { values: Tuple([UInt8([1, 2, 1, 2, 1, 2, 3]), StringColumn[a, b, a, b, b, c, d]]), offsets: [0, 2, 4, 6, 7] })                                                                                                                                                                                        |
| 3         | Map(String, Variant) | Column(ArrayColumn { values: Tuple([StringColumn[a, b, a, b, b, c, d], BinaryColumn { data: 0x20000000100000036162632000000020000002506420000000100000036162632000000020000002506420000000100000036465662000000040000000200000001000000378797a, offsets: [0, 11, 21, 32, 42, 53, 61, 72] }]), offsets: [0, 2, 4, 6, 7] }) |
+-----------+----------------------+---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
expr     : is_true<Boolean NULL>(eq<Boolean NULL, Boolean NULL>(TRY_CAST(get<T0=String, T1=Variant><Map(T0, T1 NULL), T0>(CAST(3 AS Map(String, Variant NULL)), "c") AS Boolean NULL), CAST(true AS Boolean NULL)))
fold_expr: is_true<Boolean NULL>(eq<Boolean NULL, Boolean NULL>(TRY_CAST(get<T0=String, T1=Variant><Map(T0, T1 NULL), T0>(CAST(3 AS Map(String, Variant NULL)), "c") AS Boolean NULL), true))
filter   : is_true<Boolean NULL>(eq<Boolean NULL, Boolean NULL>(TRY_CAST(get<T0=String, T1=Variant><Map(T0, T1 NULL), T0>(CAST(3 AS Map(String, Variant NULL)), "c") AS Boolean NULL), true))
domains  : {"3": Map(Some(Tuple([String(StringDomain { min: "", max: None }), Undefined])))}
result   : Uncertain


+-----------+--------+----------------------------+
| Column ID | Type   | Column Data                |
+-----------+--------+----------------------------+
| 0         | UInt8  | Column(UInt8([1, 2]))      |
| 1         | String | Column(StringColumn[a, b]) |
+-----------+--------+----------------------------+
expr     : eq<String, String>(1, "d")
filter   : eq<String, String>(1, "d")
domains  : {"1": String(StringDomain { min: "", max: None })}
result   : Uncertain


+-----------+--------+------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| Column ID | Type   | Column Data|

| 0         | UInt8  | Column(UInt|
| 1         | String | Column(StringColumn[aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa, bc]) |

expr     : eq<String, String>(1, "ab")
filter   : eq<String, String>(1, "ab")
domains  : {"1": String(StringDomain { min: "aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa", max: Some("bc") })}
result   : Uncertain


+-----------+-------+-----------------------+
| Column ID | Type  | Column Data           |
+-----------+-------+-----------------------+
| 0         | UInt8 | Column(UInt8([1, 2])) |
+-----------+-------+-----------------------+
expr     : eq<String, String>(to_string<UInt8>(x), "5")
filter   : __bloom_column_x_1
domains  : {"__bloom_column_x_1": Boolean(BooleanDomain { has_false: true, has_true: false }), "x": Number(UInt8(SimpleDomain { min: 1, max: 2 }))}
result   : MustFalse


+-----------+------+-------------------------+
| Column ID | Type | Column Data             |
+-----------+------+-------------------------+
| 0         | Int8 | Column(Int8([0, 1, 2])) |
+-----------+------+-------------------------+
expr     : eq<Decimal(5, 0), Decimal(2, 1)>(to_decimal<Int8>(5, 0)(x), 1.2_d128(2,1))
filter   : eq<Decimal(5, 0), Decimal(2, 1)>(to_decimal<Int8>(5, 0)(x), 1.2_d128(2,1))
domains  : {"x": Number(Int8(SimpleDomain { min: 0, max: 2 }))}
result   : Uncertain


+-----------+------+----------------------+
| Column ID | Type | Column Data          |
+-----------+------+----------------------+
| 0         | Int8 | Column(Int8([0, 1])) |
+-----------+------+----------------------+
expr     : eq<Decimal(5, 0), Decimal(3, 2)>(to_decimal<Int8>(5, 0)(x), 2.00_d128(3,2))
filter   : __bloom_column_x_1
domains  : {"__bloom_column_x_1": Boolean(BooleanDomain { has_false: true, has_true: false }), "x": Number(Int8(SimpleDomain { min: 0, max: 1 }))}
result   : MustFalse


+-----------+-------+--------------------------+
| Column ID | Type  | Column Data              |
+-----------+-------+--------------------------+
| 0         | Int16 | Column(Int16([0, 1, 2])) |
+-----------+-------+--------------------------+
expr     : eq<Decimal(5, 0), Decimal(2, 1)>(to_decimal<Int16>(5, 0)(x), 1.2_d128(2,1))
filter   : eq<Decimal(5, 0), Decimal(2, 1)>(to_decimal<Int16>(5, 0)(x), 1.2_d128(2,1))
domains  : {"x": Number(Int16(SimpleDomain { min: 0, max: 2 }))}
result   : Uncertain


+-----------+-------+----------------------------+
| Column ID | Type  | Column Data                |
+-----------+-------+----------------------------+
| 0         | Int16 | Column(Int16([1, 3, 100])) |
+-----------+-------+----------------------------+
expr     : eq<String, String>(to_string<Int16>(x), "+3")
filter   : eq<String, String>(to_string<Int16>(x), "+3")
domains  : {"x": Number(Int16(SimpleDomain { min: 1, max: 100 }))}
result   : Uncertain


+-----------+-------+---------------------------+
| Column ID | Type  | Column Data               |
+-----------+-------+---------------------------+
| 0         | Int16 | Column(Int16([100, 200])) |
+-----------+-------+---------------------------+
expr     : eq<String, String>(to_string<Int16>(x), "+3")
filter   : __bloom_column_x_1
domains  : {"__bloom_column_x_1": Boolean(BooleanDomain { has_false: true, has_true: false }), "x": Number(Int16(SimpleDomain { min: 100, max: 200 }))}
result   : MustFalse


+-----------+------+----------------------+
| Column ID | Type | Column Data          |
+-----------+------+----------------------+
| 0         | Int8 | Column(Int8([0, 2])) |
+-----------+------+----------------------+
expr     : eq<Decimal(10, 0), Decimal(2, 1)>(to_decimal<Int32>(10, 0)(to_int32<Int16>(to_int16<Int8>(x))), 1.2_d128(2,1))
filter   : eq<Decimal(10, 0), Decimal(2, 1)>(to_decimal<Int32>(10, 0)(to_int32<Int16>(to_int16<Int8>(x))), 1.2_d128(2,1))
domains  : {"x": Number(Int8(SimpleDomain { min: 0, max: 2 }))}
result   : Uncertain


+-----------+-------+--------------------------+
| Column ID | Type  | Column Data              |
+-----------+-------+--------------------------+
| 0         | Int32 | Column(Int32([0, 6000])) |
+-----------+-------+--------------------------+
expr     : eq<Int8, Int8>(to_int8<Int32>(x), 10_i8)
filter   : eq<Int8, Int8>(to_int8<Int32>(x), 10_i8)
domains  : {"x": Number(Int32(SimpleDomain { min: 0, max: 6000 }))}
result   : Uncertain


+-----------+--------+----------------------------------------------------------------+
| Column ID | Type   | Column Data                                                    |
+-----------+--------+----------------------------------------------------------------+
| 0         | String | Column(StringColumn[2021-03-05 01:01:01, 2021-03-05 01:01:02]) |
+-----------+--------+----------------------------------------------------------------+
expr     : eq<Timestamp, Timestamp>(to_timestamp<String>(x), to_timestamp<String>("2021-03-05 01:01:01"))
fold_expr: eq<Timestamp, Timestamp>(to_timestamp<String>(x), 1614906061000000)
filter   : eq<Timestamp, Timestamp>(to_timestamp<String>(x), 1614906061000000)
domains  : {"x": String(StringDomain { min: "2021-03-05 01:01:01", max: Some("2021-03-05 01:01:02") })}
result   : Uncertain


+-----------+------+-------------------------------+
| Column ID | Type | Column Data                   |
+-----------+------+-------------------------------+
| 0         | Date | Column([18600, 18691, 19000]) |
+-----------+------+-------------------------------+
expr     : eq<Timestamp, Timestamp>(to_timestamp<Date>(x), to_timestamp<String>("2021-03-05 01:01:03"))
fold_expr: eq<Timestamp, Timestamp>(to_timestamp<Date>(x), 1614906063000000)
filter   : eq<Timestamp, Timestamp>(to_timestamp<Date>(x), 1614906063000000)
domains  : {"x": Date(SimpleDomain { min: 18600, max: 19000 })}
result   : Uncertain


+-----------+------+-------------------------------+
| Column ID | Type | Column Data                   |
+-----------+------+-------------------------------+
| 0         | Date | Column([18600, 18691, 19000]) |
+-----------+------+-------------------------------+
expr     : eq<Timestamp, Timestamp>(to_timestamp<Date>(x), to_timestamp<String>("2021-03-05 00:00:00"))
fold_expr: eq<Timestamp, Timestamp>(to_timestamp<Date>(x), 1614902400000000)
filter   : eq<Timestamp, Timestamp>(to_timestamp<Date>(x), 1614902400000000)
domains  : {"x": Date(SimpleDomain { min: 18600, max: 19000 })}
result   : Uncertain


+-----------+------+-------------------------------+
| Column ID | Type | Column Data                   |
+-----------+------+-------------------------------+
| 0         | Date | Column([18600, 18691, 19000]) |
+-----------+------+-------------------------------+
expr     : eq<Timestamp, Timestamp>(to_timestamp<Date>(x), to_timestamp<String>("2030-03-05 00:00:00"))
fold_expr: eq<Timestamp, Timestamp>(to_timestamp<Date>(x), 1898899200000000)
filter   : __bloom_column_x_1
domains  : {"__bloom_column_x_1": Boolean(BooleanDomain { has_false: true, has_true: false }), "x": Date(SimpleDomain { min: 18600, max: 19000 })}
result   : MustFalse


+-----------+-------+-------------------------+
| Column ID | Type  | Column Data             |
+-----------+-------+-------------------------+
| 0         | Int16 | Column(Int16([0, 300])) |
+-----------+-------+-------------------------+
expr     : eq<Decimal(3, 0), Decimal(2, 1)>(to_decimal<Int8>(3, 0)(to_int8<Int16>(x)), 1.2_d128(2,1))
filter   : eq<Decimal(3, 0), Decimal(2, 1)>(to_decimal<Int8>(3, 0)(to_int8<Int16>(x)), 1.2_d128(2,1))
domains  : {"x": Number(Int16(SimpleDomain { min: 0, max: 300 }))}
result   : Uncertain


+-----------+------------+----------------------------------------------------------------------------+
| Column ID | Type       | Column Data                                                                |
+-----------+------------+----------------------------------------------------------------------------+
| 0         | Int16 NULL | Column(NullableColumn { column: Int16([0, 100]), validity: [0b______11] }) |
+-----------+------------+----------------------------------------------------------------------------+
expr     : eq<Int16, Int16>(x, to_int16<Int8>(to_int8<UInt8>(1_u8)))
fold_expr: eq<Int16, Int16>(x, 1_i16)
filter   : __bloom_column_x_1
domains  : {"__bloom_column_x_1": Boolean(BooleanDomain { has_false: true, has_true: false }), "x": Number(Int16(SimpleDomain { min: 0, max: 100 }))}
result   : MustFalse


+-----------+------------+----------------------------------------------------------------------------+
| Column ID | Type       | Column Data                                                                |
+-----------+------------+----------------------------------------------------------------------------+
| 0         | Int16 NULL | Column(NullableColumn { column: Int16([0, 100]), validity: [0b______11] }) |
+-----------+------------+----------------------------------------------------------------------------+
expr     : eq<Int8 NULL, Int8 NULL>(CAST(x AS Int8 NULL), CAST(to_int8<UInt8>(1_u8) AS Int8 NULL))
fold_expr: eq<Int8 NULL, Int8 NULL>(CAST(x AS Int8 NULL), 1_i8)
filter   : eq<Int8 NULL, Int8 NULL>(CAST(x AS Int8 NULL), 1_i8)
domains  : {"x": Number(Int16(SimpleDomain { min: 0, max: 100 }))}
result   : Uncertain


