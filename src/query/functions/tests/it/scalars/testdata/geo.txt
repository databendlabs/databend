error: 
  --> SQL:1:1
  |
1 | geo_to_h3(37.79506683, 55.71290588, 16)
  | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ invalid resolution (got Some(16)): out of range while evaluating function `geo_to_h3(37.79506683, 55.71290588, 16)` in expr `geo_to_h3(CAST(37.79506683 AS Float64), CAST(55.71290588 AS Float64), 16)`



ast            : geo_to_h3(37.79506683, 55.71290588, 15)
raw expr       : geo_to_h3(37.79506683, 55.71290588, 15)
checked expr   : geo_to_h3<Float64, Float64, UInt8>(CAST<Decimal(10, 8)>(37.79506683_d128(10,8) AS Float64), CAST<Decimal(10, 8)>(55.71290588_d128(10,8) AS Float64), 15_u8)
optimized expr : 644325524701193974_u64
output type    : UInt64
output domain  : {644325524701193974..=644325524701193974}
output         : 644325524701193974


ast            : geo_to_h3(lon, lat, 15)
raw expr       : geo_to_h3(lon::Float64, lat::Float64, 15)
checked expr   : geo_to_h3<Float64, Float64, UInt8>(lon, lat, 15_u8)
evaluation:
+--------+-------------------------+---------------------------+----------------------------+
|        | lon                     | lat                       | Output                     |
+--------+-------------------------+---------------------------+----------------------------+
| Type   | Float64                 | Float64                   | UInt64                     |
| Domain | {37.598135..=37.660183} | {55.720762..=55.77922738} | {0..=18446744073709551615} |
| Row 0  | 37.63098076             | 55.77922738               | 644325529094369568         |
| Row 1  | 37.660183               | 55.763241                 | 644325528627451570         |
| Row 2  | 37.598135               | 55.720762                 | 644325528491955313         |
+--------+-------------------------+---------------------------+----------------------------+
evaluation (internal):
+--------+----------------------------------------------------------------------+
| Column | Data                                                                 |
+--------+----------------------------------------------------------------------+
| lon    | Float64([37.63098076, 37.660183, 37.598135])                         |
| lat    | Float64([55.77922738, 55.763241, 55.720762])                         |
| Output | UInt64([644325529094369568, 644325528627451570, 644325528491955313]) |
+--------+----------------------------------------------------------------------+


ast            : great_circle_distance(55.755831, 37.617673, -55.755831, -37.617673)
raw expr       : great_circle_distance(55.755831, 37.617673, minus(55.755831), minus(37.617673))
checked expr   : great_circle_distance<Float64, Float64, Float64, Float64>(CAST<Decimal(8, 6)>(55.755831_d128(8,6) AS Float64), CAST<Decimal(8, 6)>(37.617673_d128(8,6) AS Float64), CAST<Decimal(8, 6)>(minus<Decimal(8, 6)>(55.755831_d128(8,6)) AS Float64), CAST<Decimal(8, 6)>(minus<Decimal(8, 6)>(37.617673_d128(8,6)) AS Float64))
optimized expr : 14128353_f32
output type    : Float32
output domain  : {14128353..=14128353}
output         : 14128353


ast            : great_circle_distance(lon1, lat1, lon2, lat2)
raw expr       : great_circle_distance(lon1::Float64, lat1::Float64, lon2::Float64, lat2::Float64)
checked expr   : great_circle_distance<Float64, Float64, Float64, Float64>(lon1, lat1, lon2, lat2)
evaluation:
+--------+-------------------------+-------------------------+---------------------------+---------------------------+--------------+
|        | lon1                    | lat1                    | lon2                      | lat2                      | Output       |
+--------+-------------------------+-------------------------+---------------------------+---------------------------+--------------+
| Type   | Float64                 | Float64                 | Float64                   | Float64                   | Float32      |
| Domain | {55.755831..=57.755831} | {37.617673..=39.617673} | {-57.755831..=-55.755831} | {-39.617673..=-37.617673} | {-inf..=NaN} |
| Row 0  | 55.755831               | 37.617673               | -55.755831                | -37.617673                | 14128353     |
| Row 1  | 56.755831               | 38.617673               | -56.755831                | -38.617673                | 14374804     |
| Row 2  | 57.755831               | 39.617673               | -57.755831                | -39.617673                | 14618267     |
+--------+-------------------------+-------------------------+---------------------------+---------------------------+--------------+
evaluation (internal):
+--------+-----------------------------------------------+
| Column | Data                                          |
+--------+-----------------------------------------------+
| lon1   | Float64([55.755831, 56.755831, 57.755831])    |
| lat1   | Float64([37.617673, 38.617673, 39.617673])    |
| lon2   | Float64([-55.755831, -56.755831, -57.755831]) |
| lat2   | Float64([-37.617673, -38.617673, -39.617673]) |
| Output | Float32([14128353, 14374804, 14618267])       |
+--------+-----------------------------------------------+


ast            : geo_distance(55.755831, 37.617673, -55.755831, -37.617673)
raw expr       : geo_distance(55.755831, 37.617673, minus(55.755831), minus(37.617673))
checked expr   : geo_distance<Float64, Float64, Float64, Float64>(CAST<Decimal(8, 6)>(55.755831_d128(8,6) AS Float64), CAST<Decimal(8, 6)>(37.617673_d128(8,6) AS Float64), CAST<Decimal(8, 6)>(minus<Decimal(8, 6)>(55.755831_d128(8,6)) AS Float64), CAST<Decimal(8, 6)>(minus<Decimal(8, 6)>(37.617673_d128(8,6)) AS Float64))
optimized expr : 14128353_f32
output type    : Float32
output domain  : {14128353..=14128353}
output         : 14128353


ast            : geo_distance(lon1, lat1, lon2, lat2)
raw expr       : geo_distance(lon1::Float64, lat1::Float64, lon2::Float64, lat2::Float64)
checked expr   : geo_distance<Float64, Float64, Float64, Float64>(lon1, lat1, lon2, lat2)
evaluation:
+--------+-------------------------+-------------------------+---------------------------+---------------------------+--------------+
|        | lon1                    | lat1                    | lon2                      | lat2                      | Output       |
+--------+-------------------------+-------------------------+---------------------------+---------------------------+--------------+
| Type   | Float64                 | Float64                 | Float64                   | Float64                   | Float32      |
| Domain | {55.755831..=57.755831} | {37.617673..=39.617673} | {-57.755831..=-55.755831} | {-39.617673..=-37.617673} | {-inf..=NaN} |
| Row 0  | 55.755831               | 37.617673               | -55.755831                | -37.617673                | 14128353     |
| Row 1  | 56.755831               | 38.617673               | -56.755831                | -38.617673                | 14374804     |
| Row 2  | 57.755831               | 39.617673               | -57.755831                | -39.617673                | 14618267     |
+--------+-------------------------+-------------------------+---------------------------+---------------------------+--------------+
evaluation (internal):
+--------+-----------------------------------------------+
| Column | Data                                          |
+--------+-----------------------------------------------+
| lon1   | Float64([55.755831, 56.755831, 57.755831])    |
| lat1   | Float64([37.617673, 38.617673, 39.617673])    |
| lon2   | Float64([-55.755831, -56.755831, -57.755831]) |
| lat2   | Float64([-37.617673, -38.617673, -39.617673]) |
| Output | Float32([14128353, 14374804, 14618267])       |
+--------+-----------------------------------------------+


ast            : great_circle_angle(0, 0, 45, 0)
raw expr       : great_circle_angle(0, 0, 45, 0)
checked expr   : great_circle_angle<Float64, Float64, Float64, Float64>(CAST<UInt8>(0_u8 AS Float64), CAST<UInt8>(0_u8 AS Float64), CAST<UInt8>(45_u8 AS Float64), CAST<UInt8>(0_u8 AS Float64))
optimized expr : 44.99998_f32
output type    : Float32
output domain  : {44.99998..=44.99998}
output         : 44.99998


ast            : great_circle_angle(0, 0, a, 0)
raw expr       : great_circle_angle(0, 0, a::Float64, 0)
checked expr   : great_circle_angle<Float64, Float64, Float64, Float64>(CAST<UInt8>(0_u8 AS Float64), CAST<UInt8>(0_u8 AS Float64), a, CAST<UInt8>(0_u8 AS Float64))
optimized expr : great_circle_angle<Float64, Float64, Float64, Float64>(0_f64, 0_f64, a, 0_f64)
evaluation:
+--------+-----------+--------------+
|        | a         | Output       |
+--------+-----------+--------------+
| Type   | Float64   | Float32      |
| Domain | {45..=47} | {-inf..=NaN} |
| Row 0  | 45        | 44.99998     |
| Row 1  | 46        | 45.99966     |
| Row 2  | 47        | 46.99969     |
+--------+-----------+--------------+
evaluation (internal):
+--------+-----------------------------------------+
| Column | Data                                    |
+--------+-----------------------------------------+
| a      | Float64([45, 46, 47])                   |
| Output | Float32([44.99998, 45.99966, 46.99969]) |
+--------+-----------------------------------------+


ast            : point_in_ellipses(10., 10., 10., 9.1, 1., 0.9999)
raw expr       : point_in_ellipses(10, 10, 10, 9.1, 1, 0.9999)
checked expr   : point_in_ellipses<Float64, Float64, Float64, Float64, Float64, Float64>(CAST<UInt8>(10_u8 AS Float64), CAST<UInt8>(10_u8 AS Float64), CAST<UInt8>(10_u8 AS Float64), CAST<Decimal(2, 1)>(9.1_d128(2,1) AS Float64), CAST<UInt8>(1_u8 AS Float64), CAST<Decimal(4, 4)>(0.9999_d128(4,4) AS Float64))
optimized expr : 1_u8
output type    : UInt8
output domain  : {1..=1}
output         : 1


ast            : point_in_ellipses(10., 10., 10., 9.1, a, b)
raw expr       : point_in_ellipses(10, 10, 10, 9.1, a::Float64, b::Float64)
checked expr   : point_in_ellipses<Float64, Float64, Float64, Float64, Float64, Float64>(CAST<UInt8>(10_u8 AS Float64), CAST<UInt8>(10_u8 AS Float64), CAST<UInt8>(10_u8 AS Float64), CAST<Decimal(2, 1)>(9.1_d128(2,1) AS Float64), a, b)
optimized expr : point_in_ellipses<Float64, Float64, Float64, Float64, Float64, Float64>(10_f64, 10_f64, 10_f64, 9.1_f64, a, b)
evaluation:
+--------+-----------+-------------------+-----------+
|        | a         | b                 | Output    |
+--------+-----------+-------------------+-----------+
| Type   | Float64   | Float64           | UInt8     |
| Domain | {1..=1.2} | {0.9997..=0.9999} | {0..=255} |
| Row 0  | 1         | 0.9999            | 0         |
| Row 1  | 1.1       | 0.9998            | 0         |
| Row 2  | 1.2       | 0.9997            | 0         |
+--------+-----------+-------------------+-----------+
evaluation (internal):
+--------+-----------------------------------+
| Column | Data                              |
+--------+-----------------------------------+
| a      | Float64([1, 1.1, 1.2])            |
| b      | Float64([0.9999, 0.9998, 0.9997]) |
| Output | UInt8([0, 0, 0])                  |
+--------+-----------------------------------+


ast            : point_in_polygon((3., 3.), [(6, 0), (8, 4), (5, 8), (0, 2)])
raw expr       : point_in_polygon(tuple(3, 3), array(tuple(6, 0), tuple(8, 4), tuple(5, 8), tuple(0, 2)))
checked expr   : point_in_polygon<Tuple(Float64, Float64), Array(Tuple(Float64, Float64))>(CAST<Tuple(UInt8, UInt8)>(tuple<UInt8, UInt8>(3_u8, 3_u8) AS Tuple(Float64, Float64)), CAST<Array(Tuple(UInt8, UInt8))>(array<T0=Tuple(UInt8, UInt8)><T0, T0, T0, T0>(tuple<UInt8, UInt8>(6_u8, 0_u8), tuple<UInt8, UInt8>(8_u8, 4_u8), tuple<UInt8, UInt8>(5_u8, 8_u8), tuple<UInt8, UInt8>(0_u8, 2_u8)) AS Array(Tuple(Float64, Float64))))
optimized expr : 1_u8
output type    : UInt8
output domain  : {1..=1}
output         : 1


ast            : point_in_polygon((a, b), [(6, 0), (8, 4), (5, 8), (0, 2)])
raw expr       : point_in_polygon(tuple(a::Float64, b::Float64), array(tuple(6, 0), tuple(8, 4), tuple(5, 8), tuple(0, 2)))
checked expr   : point_in_polygon<Tuple(Float64, Float64), Array(Tuple(Float64, Float64))>(tuple<Float64, Float64>(a, b), CAST<Array(Tuple(UInt8, UInt8))>(array<T0=Tuple(UInt8, UInt8)><T0, T0, T0, T0>(tuple<UInt8, UInt8>(6_u8, 0_u8), tuple<UInt8, UInt8>(8_u8, 4_u8), tuple<UInt8, UInt8>(5_u8, 8_u8), tuple<UInt8, UInt8>(0_u8, 2_u8)) AS Array(Tuple(Float64, Float64))))
optimized expr : point_in_polygon<Tuple(Float64, Float64), Array(Tuple(Float64, Float64))>(tuple<Float64, Float64>(a, b), [(6, 0), (8, 4), (5, 8), (0, 2)])
evaluation:
+--------+-----------+-----------+-----------+
|        | a         | b         | Output    |
+--------+-----------+-----------+-----------+
| Type   | Float64   | Float64   | UInt8     |
| Domain | {3..=3.2} | {3..=3.2} | {0..=255} |
| Row 0  | 3         | 3         | 1         |
| Row 1  | 3.1       | 3.1       | 1         |
| Row 2  | 3.2       | 3.2       | 1         |
+--------+-----------+-----------+-----------+
evaluation (internal):
+--------+------------------------+
| Column | Data                   |
+--------+------------------------+
| a      | Float64([3, 3.1, 3.2]) |
| b      | Float64([3, 3.1, 3.2]) |
| Output | UInt8([1, 1, 1])       |
+--------+------------------------+


ast            : point_in_polygon((1., 1.), [[(4., 0.), (8., 4.), (4., 8.), (0., 4.)], [(3., 3.), (3., 5.), (5., 5.), (5., 3.)]])
raw expr       : point_in_polygon(tuple(1, 1), array(array(tuple(4, 0), tuple(8, 4), tuple(4, 8), tuple(0, 4)), array(tuple(3, 3), tuple(3, 5), tuple(5, 5), tuple(5, 3))))
checked expr   : point_in_polygon<Tuple(Float64, Float64), Array(Array(Tuple(Float64, Float64)))>(CAST<Tuple(UInt8, UInt8)>(tuple<UInt8, UInt8>(1_u8, 1_u8) AS Tuple(Float64, Float64)), CAST<Array(Array(Tuple(UInt8, UInt8)))>(array<T0=Array(Tuple(UInt8, UInt8))><T0, T0>(array<T0=Tuple(UInt8, UInt8)><T0, T0, T0, T0>(tuple<UInt8, UInt8>(4_u8, 0_u8), tuple<UInt8, UInt8>(8_u8, 4_u8), tuple<UInt8, UInt8>(4_u8, 8_u8), tuple<UInt8, UInt8>(0_u8, 4_u8)), array<T0=Tuple(UInt8, UInt8)><T0, T0, T0, T0>(tuple<UInt8, UInt8>(3_u8, 3_u8), tuple<UInt8, UInt8>(3_u8, 5_u8), tuple<UInt8, UInt8>(5_u8, 5_u8), tuple<UInt8, UInt8>(5_u8, 3_u8))) AS Array(Array(Tuple(Float64, Float64)))))
optimized expr : 0_u8
output type    : UInt8
output domain  : {0..=0}
output         : 0


ast            : point_in_polygon((2.5, 2.5), [[(4., 0.), (8., 4.), (4., 8.), (0., 4.)], [(3., 3.), (3., 5.), (5., 5.), (5., 3.)]])
raw expr       : point_in_polygon(tuple(2.5, 2.5), array(array(tuple(4, 0), tuple(8, 4), tuple(4, 8), tuple(0, 4)), array(tuple(3, 3), tuple(3, 5), tuple(5, 5), tuple(5, 3))))
checked expr   : point_in_polygon<Tuple(Float64, Float64), Array(Array(Tuple(Float64, Float64)))>(CAST<Tuple(Decimal(2, 1), Decimal(2, 1))>(tuple<Decimal(2, 1), Decimal(2, 1)>(2.5_d128(2,1), 2.5_d128(2,1)) AS Tuple(Float64, Float64)), CAST<Array(Array(Tuple(UInt8, UInt8)))>(array<T0=Array(Tuple(UInt8, UInt8))><T0, T0>(array<T0=Tuple(UInt8, UInt8)><T0, T0, T0, T0>(tuple<UInt8, UInt8>(4_u8, 0_u8), tuple<UInt8, UInt8>(8_u8, 4_u8), tuple<UInt8, UInt8>(4_u8, 8_u8), tuple<UInt8, UInt8>(0_u8, 4_u8)), array<T0=Tuple(UInt8, UInt8)><T0, T0, T0, T0>(tuple<UInt8, UInt8>(3_u8, 3_u8), tuple<UInt8, UInt8>(3_u8, 5_u8), tuple<UInt8, UInt8>(5_u8, 5_u8), tuple<UInt8, UInt8>(5_u8, 3_u8))) AS Array(Array(Tuple(Float64, Float64)))))
optimized expr : 1_u8
output type    : UInt8
output domain  : {1..=1}
output         : 1


ast            : point_in_polygon((2.5, 2.5), [[(4., 0.), (8., 4.), (4., 8.), (0., 4.)], [(3., 3.), (a, b), (5., 5.), (5., 3.)]])
raw expr       : point_in_polygon(tuple(2.5, 2.5), array(array(tuple(4, 0), tuple(8, 4), tuple(4, 8), tuple(0, 4)), array(tuple(3, 3), tuple(a::Float64, b::Float64), tuple(5, 5), tuple(5, 3))))
checked expr   : point_in_polygon<Tuple(Float64, Float64), Array(Array(Tuple(Float64, Float64)))>(CAST<Tuple(Decimal(2, 1), Decimal(2, 1))>(tuple<Decimal(2, 1), Decimal(2, 1)>(2.5_d128(2,1), 2.5_d128(2,1)) AS Tuple(Float64, Float64)), array<T0=Array(Tuple(Float64, Float64))><T0, T0>(CAST<Array(Tuple(UInt8, UInt8))>(array<T0=Tuple(UInt8, UInt8)><T0, T0, T0, T0>(tuple<UInt8, UInt8>(4_u8, 0_u8), tuple<UInt8, UInt8>(8_u8, 4_u8), tuple<UInt8, UInt8>(4_u8, 8_u8), tuple<UInt8, UInt8>(0_u8, 4_u8)) AS Array(Tuple(Float64, Float64))), array<T0=Tuple(Float64, Float64)><T0, T0, T0, T0>(CAST<Tuple(UInt8, UInt8)>(tuple<UInt8, UInt8>(3_u8, 3_u8) AS Tuple(Float64, Float64)), tuple<Float64, Float64>(a, b), CAST<Tuple(UInt8, UInt8)>(tuple<UInt8, UInt8>(5_u8, 5_u8) AS Tuple(Float64, Float64)), CAST<Tuple(UInt8, UInt8)>(tuple<UInt8, UInt8>(5_u8, 3_u8) AS Tuple(Float64, Float64)))))
optimized expr : point_in_polygon<Tuple(Float64, Float64), Array(Array(Tuple(Float64, Float64)))>((2.5_f64, 2.5_f64), array<T0=Array(Tuple(Float64, Float64))><T0, T0>([(4, 0), (8, 4), (4, 8), (0, 4)], array<T0=Tuple(Float64, Float64)><T0, T0, T0, T0>((3_f64, 3_f64), tuple<Float64, Float64>(a, 5_f64), (5_f64, 5_f64), (5_f64, 3_f64))))
evaluation:
+--------+-----------+---------+-----------+
|        | a         | b       | Output    |
+--------+-----------+---------+-----------+
| Type   | Float64   | Float64 | UInt8     |
| Domain | {3..=3.1} | {5..=5} | {0..=255} |
| Row 0  | 3         | 5       | 1         |
| Row 1  | 3.1       | 5       | 1         |
+--------+-----------+---------+-----------+
evaluation (internal):
+--------+-------------------+
| Column | Data              |
+--------+-------------------+
| a      | Float64([3, 3.1]) |
| b      | Float64([5, 5])   |
| Output | UInt8([1, 1])     |
+--------+-------------------+


ast            : point_in_polygon((2.5, 2.5), [(4., 0.), (8., 4.), (4., 8.), (0., 4.)], [(3., 3.), (3., 5.), (5., 5.), (5., 3.)])
raw expr       : point_in_polygon(tuple(2.5, 2.5), array(tuple(4, 0), tuple(8, 4), tuple(4, 8), tuple(0, 4)), array(tuple(3, 3), tuple(3, 5), tuple(5, 5), tuple(5, 3)))
checked expr   : point_in_polygon<Tuple(Float64, Float64), Array(Tuple(Float64, Float64)), Array(Tuple(Float64, Float64))>(CAST<Tuple(Decimal(2, 1), Decimal(2, 1))>(tuple<Decimal(2, 1), Decimal(2, 1)>(2.5_d128(2,1), 2.5_d128(2,1)) AS Tuple(Float64, Float64)), CAST<Array(Tuple(UInt8, UInt8))>(array<T0=Tuple(UInt8, UInt8)><T0, T0, T0, T0>(tuple<UInt8, UInt8>(4_u8, 0_u8), tuple<UInt8, UInt8>(8_u8, 4_u8), tuple<UInt8, UInt8>(4_u8, 8_u8), tuple<UInt8, UInt8>(0_u8, 4_u8)) AS Array(Tuple(Float64, Float64))), CAST<Array(Tuple(UInt8, UInt8))>(array<T0=Tuple(UInt8, UInt8)><T0, T0, T0, T0>(tuple<UInt8, UInt8>(3_u8, 3_u8), tuple<UInt8, UInt8>(3_u8, 5_u8), tuple<UInt8, UInt8>(5_u8, 5_u8), tuple<UInt8, UInt8>(5_u8, 3_u8)) AS Array(Tuple(Float64, Float64))))
optimized expr : 1_u8
output type    : UInt8
output domain  : {1..=1}
output         : 1


ast            : point_in_polygon((2.5, 2.5), [(4., 0.), (8., 4.), (4., 8.), (0., 4.)], [(3., 3.), (a, b), (5., 5.), (5., 3.)])
raw expr       : point_in_polygon(tuple(2.5, 2.5), array(tuple(4, 0), tuple(8, 4), tuple(4, 8), tuple(0, 4)), array(tuple(3, 3), tuple(a::Float64, b::Float64), tuple(5, 5), tuple(5, 3)))
checked expr   : point_in_polygon<Tuple(Float64, Float64), Array(Tuple(Float64, Float64)), Array(Tuple(Float64, Float64))>(CAST<Tuple(Decimal(2, 1), Decimal(2, 1))>(tuple<Decimal(2, 1), Decimal(2, 1)>(2.5_d128(2,1), 2.5_d128(2,1)) AS Tuple(Float64, Float64)), CAST<Array(Tuple(UInt8, UInt8))>(array<T0=Tuple(UInt8, UInt8)><T0, T0, T0, T0>(tuple<UInt8, UInt8>(4_u8, 0_u8), tuple<UInt8, UInt8>(8_u8, 4_u8), tuple<UInt8, UInt8>(4_u8, 8_u8), tuple<UInt8, UInt8>(0_u8, 4_u8)) AS Array(Tuple(Float64, Float64))), array<T0=Tuple(Float64, Float64)><T0, T0, T0, T0>(CAST<Tuple(UInt8, UInt8)>(tuple<UInt8, UInt8>(3_u8, 3_u8) AS Tuple(Float64, Float64)), tuple<Float64, Float64>(a, b), CAST<Tuple(UInt8, UInt8)>(tuple<UInt8, UInt8>(5_u8, 5_u8) AS Tuple(Float64, Float64)), CAST<Tuple(UInt8, UInt8)>(tuple<UInt8, UInt8>(5_u8, 3_u8) AS Tuple(Float64, Float64))))
optimized expr : 1_u8
evaluation:
+--------+---------+---------+---------+
|        | a       | b       | Output  |
+--------+---------+---------+---------+
| Type   | Float64 | Float64 | UInt8   |
| Domain | {3..=3} | {5..=5} | {1..=1} |
| Row 0  | 3       | 5       | 1       |
| Row 1  | 3       | 5       | 1       |
+--------+---------+---------+---------+
evaluation (internal):
+--------+-----------------+
| Column | Data            |
+--------+-----------------+
| a      | Float64([3, 3]) |
| b      | Float64([5, 5]) |
| Output | UInt8([1, 1])   |
+--------+-----------------+


ast            : geohash_encode(-5.60302734375, 42.593994140625)
raw expr       : geohash_encode(minus(5.60302734375), 42.593994140625)
checked expr   : geohash_encode<Float64, Float64>(CAST<Decimal(12, 11)>(minus<Decimal(12, 11)>(5.60302734375_d128(12,11)) AS Float64), CAST<Decimal(14, 12)>(42.593994140625_d128(14,12) AS Float64))
optimized expr : "ezs42d000000"
output type    : String
output domain  : {"ezs42d000000"..="ezs42d000000"}
output         : 'ezs42d000000'


ast            : geohash_encode(-5.60302734375, 42.593994140625, 11)
raw expr       : geohash_encode(minus(5.60302734375), 42.593994140625, 11)
checked expr   : geohash_encode<Float64, Float64, UInt8>(CAST<Decimal(12, 11)>(minus<Decimal(12, 11)>(5.60302734375_d128(12,11)) AS Float64), CAST<Decimal(14, 12)>(42.593994140625_d128(14,12) AS Float64), 11_u8)
optimized expr : "ezs42d00000"
output type    : String
output domain  : {"ezs42d00000"..="ezs42d00000"}
output         : 'ezs42d00000'


ast            : geohash_encode(-5.60302734375, 42.593994140625, 0)
raw expr       : geohash_encode(minus(5.60302734375), 42.593994140625, 0)
checked expr   : geohash_encode<Float64, Float64, UInt8>(CAST<Decimal(12, 11)>(minus<Decimal(12, 11)>(5.60302734375_d128(12,11)) AS Float64), CAST<Decimal(14, 12)>(42.593994140625_d128(14,12) AS Float64), 0_u8)
optimized expr : "ezs42d000000"
output type    : String
output domain  : {"ezs42d000000"..="ezs42d000000"}
output         : 'ezs42d000000'


ast            : geohash_decode('ezs42')
raw expr       : geohash_decode('ezs42')
checked expr   : geohash_decode<String>("ezs42")
optimized expr : (-5.6030273437_f64, 42.6049804687_f64)
output type    : Tuple(Float64, Float64)
output domain  : ({-5.6030273437..=-5.6030273437}, {42.6049804687..=42.6049804687})
output         : (-5.6030273437, 42.6049804687)


