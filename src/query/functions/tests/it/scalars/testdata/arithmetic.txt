ast            : a + b
raw expr       : plus(a::Int8, b::Int16)
checked expr   : plus<Int8, Int16>(a, b)
evaluation:
+--------+---------+---------+---------+
|        | a       | b       | Output  |
+--------+---------+---------+---------+
| Type   | Int8    | Int16   | Int32   |
| Domain | {1..=3} | {2..=6} | {3..=9} |
| Row 0  | 1       | 2       | 3       |
| Row 1  | 2       | 4       | 6       |
| Row 2  | 3       | 6       | 9       |
+--------+---------+---------+---------+
evaluation (internal):
+--------+------------------+
| Column | Data             |
+--------+------------------+
| a      | Int8([1, 2, 3])  |
| b      | Int16([2, 4, 6]) |
| Output | Int32([3, 6, 9]) |
+--------+------------------+


ast            : a2 + 10
raw expr       : plus(a2::UInt8 NULL, 10)
checked expr   : plus<UInt8 NULL, UInt8 NULL>(a2, CAST(10_u8 AS UInt8 NULL))
optimized expr : plus<UInt8 NULL, UInt8 NULL>(a2, 10_u8)
evaluation:
+--------+------------------+--------------------+
|        | a2               | Output             |
+--------+------------------+--------------------+
| Type   | UInt8 NULL       | UInt16 NULL        |
| Domain | {1..=2} ∪ {NULL} | {11..=12} ∪ {NULL} |
| Row 0  | 1                | 11                 |
| Row 1  | 2                | 12                 |
| Row 2  | NULL             | NULL               |
+--------+------------------+--------------------+
evaluation (internal):
+--------+-------------------------------------------------------------------------+
| Column | Data                                                                    |
+--------+-------------------------------------------------------------------------+
| a2     | NullableColumn { column: UInt8([1, 2, 3]), validity: [0b_____011] }     |
| Output | NullableColumn { column: UInt16([11, 12, 13]), validity: [0b_____011] } |
+--------+-------------------------------------------------------------------------+


ast            : a2 + c
raw expr       : plus(a2::UInt8 NULL, c::UInt32)
checked expr   : plus<UInt8 NULL, UInt32 NULL>(a2, CAST(c AS UInt32 NULL))
evaluation:
+--------+------------------+-----------+--------------------+
|        | a2               | c         | Output             |
+--------+------------------+-----------+--------------------+
| Type   | UInt8 NULL       | UInt32    | UInt64 NULL        |
| Domain | {1..=2} ∪ {NULL} | {10..=30} | {11..=32} ∪ {NULL} |
| Row 0  | 1                | 10        | 11                 |
| Row 1  | 2                | 20        | 22                 |
| Row 2  | NULL             | 30        | NULL               |
+--------+------------------+-----------+--------------------+
evaluation (internal):
+--------+-------------------------------------------------------------------------+
| Column | Data                                                                    |
+--------+-------------------------------------------------------------------------+
| a2     | NullableColumn { column: UInt8([1, 2, 3]), validity: [0b_____011] }     |
| c      | UInt32([10, 20, 30])                                                    |
| Output | NullableColumn { column: UInt64([11, 22, 33]), validity: [0b_____011] } |
+--------+-------------------------------------------------------------------------+


ast            : c + 0.5
raw expr       : plus(c::UInt32, 0.5)
checked expr   : plus<UInt32, Decimal(1, 1)>(c, 0.5_d128(1,1))
evaluation:
+--------+-----------+----------------+
|        | c         | Output         |
+--------+-----------+----------------+
| Type   | UInt32    | Decimal(12, 1) |
| Domain | {10..=30} | {10.5..=30.5}  |
| Row 0  | 10        | 10.5           |
| Row 1  | 20        | 20.5           |
| Row 2  | 30        | 30.5           |
+--------+-----------+----------------+
evaluation (internal):
+--------+--------------------------------+
| Column | Data                           |
+--------+--------------------------------+
| c      | UInt32([10, 20, 30])           |
| Output | Decimal128([10.5, 20.5, 30.5]) |
+--------+--------------------------------+


ast            : c + b
raw expr       : plus(c::UInt32, b::Int16)
checked expr   : plus<UInt32, Int16>(c, b)
evaluation:
+--------+---------+-----------+-----------+
|        | b       | c         | Output    |
+--------+---------+-----------+-----------+
| Type   | Int16   | UInt32    | Int64     |
| Domain | {2..=6} | {10..=30} | {12..=36} |
| Row 0  | 2       | 10        | 12        |
| Row 1  | 4       | 20        | 24        |
| Row 2  | 6       | 30        | 36        |
+--------+---------+-----------+-----------+
evaluation (internal):
+--------+----------------------+
| Column | Data                 |
+--------+----------------------+
| b      | Int16([2, 4, 6])     |
| c      | UInt32([10, 20, 30]) |
| Output | Int64([12, 24, 36])  |
+--------+----------------------+


ast            : c + d
raw expr       : plus(c::UInt32, d::Float64)
checked expr   : plus<UInt32, Float64>(c, d)
evaluation:
+--------+-----------+------------+------------+
|        | c         | d          | Output     |
+--------+-----------+------------+------------+
| Type   | UInt32    | Float64    | Float64    |
| Domain | {10..=30} | {-20..=30} | {-10..=60} |
| Row 0  | 10        | 10         | 20         |
| Row 1  | 20        | -20        | 0          |
| Row 2  | 30        | 30         | 60         |
+--------+-----------+------------+------------+
evaluation (internal):
+--------+------------------------+
| Column | Data                   |
+--------+------------------------+
| c      | UInt32([10, 20, 30])   |
| d      | Float64([10, -20, 30]) |
| Output | Float64([20, 0, 60])   |
+--------+------------------------+


ast            : c + e
raw expr       : plus(c::UInt32, e::Decimal(10, 1))
checked expr   : plus<UInt32, Decimal(10, 1)>(c, e)
evaluation:
+--------+-----------+----------------+----------------+
|        | c         | e              | Output         |
+--------+-----------+----------------+----------------+
| Type   | UInt32    | Decimal(10, 1) | Decimal(12, 1) |
| Domain | {10..=30} | {3.1..=188.8}  | {13.1..=218.8} |
| Row 0  | 10        | 3.1            | 13.1           |
| Row 1  | 20        | 33.5           | 53.5           |
| Row 2  | 30        | 188.8          | 218.8          |
+--------+-----------+----------------+----------------+
evaluation (internal):
+--------+---------------------------------+
| Column | Data                            |
+--------+---------------------------------+
| c      | UInt32([10, 20, 30])            |
| e      | Decimal128([3.1, 33.5, 188.8])  |
| Output | Decimal128([13.1, 53.5, 218.8]) |
+--------+---------------------------------+


ast            : d + e
raw expr       : plus(d::Float64, e::Decimal(10, 1))
checked expr   : plus<Float64, Float64>(d, to_float64<Decimal(10, 1)>(e))
evaluation:
+--------+------------+----------------+-----------------+
|        | d          | e              | Output          |
+--------+------------+----------------+-----------------+
| Type   | Float64    | Decimal(10, 1) | Float64         |
| Domain | {-20..=30} | {3.1..=188.8}  | {-16.9..=218.8} |
| Row 0  | 10         | 3.1            | 13.1            |
| Row 1  | -20        | 33.5           | 13.5            |
| Row 2  | 30         | 188.8          | 218.8           |
+--------+------------+----------------+-----------------+
evaluation (internal):
+--------+--------------------------------+
| Column | Data                           |
+--------+--------------------------------+
| d      | Float64([10, -20, 30])         |
| e      | Decimal128([3.1, 33.5, 188.8]) |
| Output | Float64([13.1, 13.5, 218.8])   |
+--------+--------------------------------+


ast            : d2 + e
raw expr       : plus(d2::UInt8 NULL, e::Decimal(10, 1))
checked expr   : plus<UInt8 NULL, Decimal(10, 1) NULL>(d2, CAST(e AS Decimal(10, 1) NULL))
evaluation:
+--------+------------------+----------------+------------------------+
|        | d2               | e              | Output                 |
+--------+------------------+----------------+------------------------+
| Type   | UInt8 NULL       | Decimal(10, 1) | Decimal(11, 1) NULL    |
| Domain | {1..=3} ∪ {NULL} | {3.1..=188.8}  | {4.1..=191.8} ∪ {NULL} |
| Row 0  | 1                | 3.1            | 4.1                    |
| Row 1  | NULL             | 33.5           | NULL                   |
| Row 2  | 3                | 188.8          | 191.8                  |
+--------+------------------+----------------+------------------------+
evaluation (internal):
+--------+-----------------------------------------------------------------------------------+
| Column | Data                                                                              |
+--------+-----------------------------------------------------------------------------------+
| d2     | NullableColumn { column: UInt8([1, 0, 3]), validity: [0b_____101] }               |
| e      | Decimal128([3.1, 33.5, 188.8])                                                    |
| Output | NullableColumn { column: Decimal128([4.1, 33.5, 191.8]), validity: [0b_____101] } |
+--------+-----------------------------------------------------------------------------------+


ast            : d2 + f
raw expr       : plus(d2::UInt8 NULL, f::Decimal(76, 2))
checked expr   : plus<UInt8 NULL, Decimal(76, 2) NULL>(d2, CAST(f AS Decimal(76, 2) NULL))
evaluation:
+--------+------------------+----------------+-------------------------+
|        | d2               | f              | Output                  |
+--------+------------------+----------------+-------------------------+
| Type   | UInt8 NULL       | Decimal(76, 2) | Decimal(76, 2) NULL     |
| Domain | {1..=3} ∪ {NULL} | {0.50..=12.34} | {1.50..=15.34} ∪ {NULL} |
| Row 0  | 1                | 0.50           | 1.50                    |
| Row 1  | NULL             | 0.92           | NULL                    |
| Row 2  | 3                | 12.34          | 15.34                   |
+--------+------------------+----------------+-------------------------+
evaluation (internal):
+--------+------------------------------------------------------------------------------------+
| Column | Data                                                                               |
+--------+------------------------------------------------------------------------------------+
| d2     | NullableColumn { column: UInt8([1, 0, 3]), validity: [0b_____101] }                |
| f      | Decimal256([0.50, 0.92, 12.34])                                                    |
| Output | NullableColumn { column: Decimal256([1.50, 0.92, 15.34]), validity: [0b_____101] } |
+--------+------------------------------------------------------------------------------------+


ast            : e + f
raw expr       : plus(e::Decimal(10, 1), f::Decimal(76, 2))
checked expr   : plus<Decimal(10, 1), Decimal(76, 2)>(e, f)
evaluation:
+--------+----------------+----------------+-----------------+
|        | e              | f              | Output          |
+--------+----------------+----------------+-----------------+
| Type   | Decimal(10, 1) | Decimal(76, 2) | Decimal(76, 2)  |
| Domain | {3.1..=188.8}  | {0.50..=12.34} | {3.60..=201.14} |
| Row 0  | 3.1            | 0.50           | 3.60            |
| Row 1  | 33.5           | 0.92           | 34.42           |
| Row 2  | 188.8          | 12.34          | 201.14          |
+--------+----------------+----------------+-----------------+
evaluation (internal):
+--------+-----------------------------------+
| Column | Data                              |
+--------+-----------------------------------+
| e      | Decimal128([3.1, 33.5, 188.8])    |
| f      | Decimal256([0.50, 0.92, 12.34])   |
| Output | Decimal256([3.60, 34.42, 201.14]) |
+--------+-----------------------------------+


ast            : a - b
raw expr       : minus(a::Int8, b::Int16)
checked expr   : minus<Int8, Int16>(a, b)
evaluation:
+--------+---------+---------+----------+
|        | a       | b       | Output   |
+--------+---------+---------+----------+
| Type   | Int8    | Int16   | Int32    |
| Domain | {1..=3} | {2..=6} | {-5..=1} |
| Row 0  | 1       | 2       | -1       |
| Row 1  | 2       | 4       | -2       |
| Row 2  | 3       | 6       | -3       |
+--------+---------+---------+----------+
evaluation (internal):
+--------+---------------------+
| Column | Data                |
+--------+---------------------+
| a      | Int8([1, 2, 3])     |
| b      | Int16([2, 4, 6])    |
| Output | Int32([-1, -2, -3]) |
+--------+---------------------+


ast            : a2 - 10
raw expr       : minus(a2::UInt8 NULL, 10)
checked expr   : minus<UInt8 NULL, UInt8 NULL>(a2, CAST(10_u8 AS UInt8 NULL))
optimized expr : minus<UInt8 NULL, UInt8 NULL>(a2, 10_u8)
evaluation:
+--------+------------------+--------------------+
|        | a2               | Output             |
+--------+------------------+--------------------+
| Type   | UInt8 NULL       | Int16 NULL         |
| Domain | {1..=2} ∪ {NULL} | {-9..=-8} ∪ {NULL} |
| Row 0  | 1                | -9                 |
| Row 1  | 2                | -8                 |
| Row 2  | NULL             | NULL               |
+--------+------------------+--------------------+
evaluation (internal):
+--------+------------------------------------------------------------------------+
| Column | Data                                                                   |
+--------+------------------------------------------------------------------------+
| a2     | NullableColumn { column: UInt8([1, 2, 3]), validity: [0b_____011] }    |
| Output | NullableColumn { column: Int16([-9, -8, -7]), validity: [0b_____011] } |
+--------+------------------------------------------------------------------------+


ast            : a2 - c
raw expr       : minus(a2::UInt8 NULL, c::UInt32)
checked expr   : minus<UInt8 NULL, UInt32 NULL>(a2, CAST(c AS UInt32 NULL))
evaluation:
+--------+------------------+-----------+---------------------+
|        | a2               | c         | Output              |
+--------+------------------+-----------+---------------------+
| Type   | UInt8 NULL       | UInt32    | Int64 NULL          |
| Domain | {1..=2} ∪ {NULL} | {10..=30} | {-29..=-8} ∪ {NULL} |
| Row 0  | 1                | 10        | -9                  |
| Row 1  | 2                | 20        | -18                 |
| Row 2  | NULL             | 30        | NULL                |
+--------+------------------+-----------+---------------------+
evaluation (internal):
+--------+--------------------------------------------------------------------------+
| Column | Data                                                                     |
+--------+--------------------------------------------------------------------------+
| a2     | NullableColumn { column: UInt8([1, 2, 3]), validity: [0b_____011] }      |
| c      | UInt32([10, 20, 30])                                                     |
| Output | NullableColumn { column: Int64([-9, -18, -27]), validity: [0b_____011] } |
+--------+--------------------------------------------------------------------------+


ast            : c - 0.5
raw expr       : minus(c::UInt32, 0.5)
checked expr   : minus<UInt32, Decimal(1, 1)>(c, 0.5_d128(1,1))
evaluation:
+--------+-----------+----------------+
|        | c         | Output         |
+--------+-----------+----------------+
| Type   | UInt32    | Decimal(12, 1) |
| Domain | {10..=30} | {9.5..=29.5}   |
| Row 0  | 10        | 9.5            |
| Row 1  | 20        | 19.5           |
| Row 2  | 30        | 29.5           |
+--------+-----------+----------------+
evaluation (internal):
+--------+-------------------------------+
| Column | Data                          |
+--------+-------------------------------+
| c      | UInt32([10, 20, 30])          |
| Output | Decimal128([9.5, 19.5, 29.5]) |
+--------+-------------------------------+


ast            : c - b
raw expr       : minus(c::UInt32, b::Int16)
checked expr   : minus<UInt32, Int16>(c, b)
evaluation:
+--------+---------+-----------+----------+
|        | b       | c         | Output   |
+--------+---------+-----------+----------+
| Type   | Int16   | UInt32    | Int64    |
| Domain | {2..=6} | {10..=30} | {4..=28} |
| Row 0  | 2       | 10        | 8        |
| Row 1  | 4       | 20        | 16       |
| Row 2  | 6       | 30        | 24       |
+--------+---------+-----------+----------+
evaluation (internal):
+--------+----------------------+
| Column | Data                 |
+--------+----------------------+
| b      | Int16([2, 4, 6])     |
| c      | UInt32([10, 20, 30]) |
| Output | Int64([8, 16, 24])   |
+--------+----------------------+


ast            : c - d
raw expr       : minus(c::UInt32, d::Float64)
checked expr   : minus<UInt32, Float64>(c, d)
evaluation:
+--------+-----------+------------+------------+
|        | c         | d          | Output     |
+--------+-----------+------------+------------+
| Type   | UInt32    | Float64    | Float64    |
| Domain | {10..=30} | {-20..=30} | {-20..=50} |
| Row 0  | 10        | 10         | 0          |
| Row 1  | 20        | -20        | 40         |
| Row 2  | 30        | 30         | 0          |
+--------+-----------+------------+------------+
evaluation (internal):
+--------+------------------------+
| Column | Data                   |
+--------+------------------------+
| c      | UInt32([10, 20, 30])   |
| d      | Float64([10, -20, 30]) |
| Output | Float64([0, 40, 0])    |
+--------+------------------------+


ast            : c - e
raw expr       : minus(c::UInt32, e::Decimal(10, 1))
checked expr   : minus<UInt32, Decimal(10, 1)>(c, e)
evaluation:
+--------+-----------+----------------+-----------------+
|        | c         | e              | Output          |
+--------+-----------+----------------+-----------------+
| Type   | UInt32    | Decimal(10, 1) | Decimal(12, 1)  |
| Domain | {10..=30} | {3.1..=188.8}  | {-178.8..=26.9} |
| Row 0  | 10        | 3.1            | 6.9             |
| Row 1  | 20        | 33.5           | -13.5           |
| Row 2  | 30        | 188.8          | -158.8          |
+--------+-----------+----------------+-----------------+
evaluation (internal):
+--------+----------------------------------+
| Column | Data                             |
+--------+----------------------------------+
| c      | UInt32([10, 20, 30])             |
| e      | Decimal128([3.1, 33.5, 188.8])   |
| Output | Decimal128([6.9, -13.5, -158.8]) |
+--------+----------------------------------+


ast            : d - e
raw expr       : minus(d::Float64, e::Decimal(10, 1))
checked expr   : minus<Float64, Float64>(d, to_float64<Decimal(10, 1)>(e))
evaluation:
+--------+------------+----------------+-----------------+
|        | d          | e              | Output          |
+--------+------------+----------------+-----------------+
| Type   | Float64    | Decimal(10, 1) | Float64         |
| Domain | {-20..=30} | {3.1..=188.8}  | {-208.8..=26.9} |
| Row 0  | 10         | 3.1            | 6.9             |
| Row 1  | -20        | 33.5           | -53.5           |
| Row 2  | 30         | 188.8          | -158.8          |
+--------+------------+----------------+-----------------+
evaluation (internal):
+--------+--------------------------------+
| Column | Data                           |
+--------+--------------------------------+
| d      | Float64([10, -20, 30])         |
| e      | Decimal128([3.1, 33.5, 188.8]) |
| Output | Float64([6.9, -53.5, -158.8])  |
+--------+--------------------------------+


ast            : d2 - e
raw expr       : minus(d2::UInt8 NULL, e::Decimal(10, 1))
checked expr   : minus<UInt8 NULL, Decimal(10, 1) NULL>(d2, CAST(e AS Decimal(10, 1) NULL))
evaluation:
+--------+------------------+----------------+--------------------------+
|        | d2               | e              | Output                   |
+--------+------------------+----------------+--------------------------+
| Type   | UInt8 NULL       | Decimal(10, 1) | Decimal(11, 1) NULL      |
| Domain | {1..=3} ∪ {NULL} | {3.1..=188.8}  | {-187.8..=-0.1} ∪ {NULL} |
| Row 0  | 1                | 3.1            | -2.1                     |
| Row 1  | NULL             | 33.5           | NULL                     |
| Row 2  | 3                | 188.8          | -185.8                   |
+--------+------------------+----------------+--------------------------+
evaluation (internal):
+--------+--------------------------------------------------------------------------------------+
| Column | Data                                                                                 |
+--------+--------------------------------------------------------------------------------------+
| d2     | NullableColumn { column: UInt8([1, 0, 3]), validity: [0b_____101] }                  |
| e      | Decimal128([3.1, 33.5, 188.8])                                                       |
| Output | NullableColumn { column: Decimal128([-2.1, -33.5, -185.8]), validity: [0b_____101] } |
+--------+--------------------------------------------------------------------------------------+


ast            : d2 - f
raw expr       : minus(d2::UInt8 NULL, f::Decimal(76, 2))
checked expr   : minus<UInt8 NULL, Decimal(76, 2) NULL>(d2, CAST(f AS Decimal(76, 2) NULL))
evaluation:
+--------+------------------+----------------+--------------------------+
|        | d2               | f              | Output                   |
+--------+------------------+----------------+--------------------------+
| Type   | UInt8 NULL       | Decimal(76, 2) | Decimal(76, 2) NULL      |
| Domain | {1..=3} ∪ {NULL} | {0.50..=12.34} | {-11.34..=2.50} ∪ {NULL} |
| Row 0  | 1                | 0.50           | 0.50                     |
| Row 1  | NULL             | 0.92           | NULL                     |
| Row 2  | 3                | 12.34          | -9.34                    |
+--------+------------------+----------------+--------------------------+
evaluation (internal):
+--------+-------------------------------------------------------------------------------------+
| Column | Data                                                                                |
+--------+-------------------------------------------------------------------------------------+
| d2     | NullableColumn { column: UInt8([1, 0, 3]), validity: [0b_____101] }                 |
| f      | Decimal256([0.50, 0.92, 12.34])                                                     |
| Output | NullableColumn { column: Decimal256([0.50, -0.92, -9.34]), validity: [0b_____101] } |
+--------+-------------------------------------------------------------------------------------+


ast            : e - f
raw expr       : minus(e::Decimal(10, 1), f::Decimal(76, 2))
checked expr   : minus<Decimal(10, 1), Decimal(76, 2)>(e, f)
evaluation:
+--------+----------------+----------------+------------------+
|        | e              | f              | Output           |
+--------+----------------+----------------+------------------+
| Type   | Decimal(10, 1) | Decimal(76, 2) | Decimal(76, 2)   |
| Domain | {3.1..=188.8}  | {0.50..=12.34} | {-9.24..=188.30} |
| Row 0  | 3.1            | 0.50           | 2.60             |
| Row 1  | 33.5           | 0.92           | 32.58            |
| Row 2  | 188.8          | 12.34          | 176.46           |
+--------+----------------+----------------+------------------+
evaluation (internal):
+--------+-----------------------------------+
| Column | Data                              |
+--------+-----------------------------------+
| e      | Decimal128([3.1, 33.5, 188.8])    |
| f      | Decimal256([0.50, 0.92, 12.34])   |
| Output | Decimal256([2.60, 32.58, 176.46]) |
+--------+-----------------------------------+


ast            : -a
raw expr       : minus(a::Int8)
checked expr   : minus<Int8>(a)
evaluation:
+--------+---------+-----------+
|        | a       | Output    |
+--------+---------+-----------+
| Type   | Int8    | Int16     |
| Domain | {1..=3} | {-3..=-1} |
| Row 0  | 1       | -1        |
| Row 1  | 2       | -2        |
| Row 2  | 3       | -3        |
+--------+---------+-----------+
evaluation (internal):
+--------+---------------------+
| Column | Data                |
+--------+---------------------+
| a      | Int8([1, 2, 3])     |
| Output | Int16([-1, -2, -3]) |
+--------+---------------------+


ast            : -a2
raw expr       : minus(a2::UInt8 NULL)
checked expr   : minus<UInt8 NULL>(a2)
evaluation:
+--------+------------------+--------------------+
|        | a2               | Output             |
+--------+------------------+--------------------+
| Type   | UInt8 NULL       | Int16 NULL         |
| Domain | {1..=2} ∪ {NULL} | {-2..=-1} ∪ {NULL} |
| Row 0  | 1                | -1                 |
| Row 1  | 2                | -2                 |
| Row 2  | NULL             | NULL               |
+--------+------------------+--------------------+
evaluation (internal):
+--------+------------------------------------------------------------------------+
| Column | Data                                                                   |
+--------+------------------------------------------------------------------------+
| a2     | NullableColumn { column: UInt8([1, 2, 3]), validity: [0b_____011] }    |
| Output | NullableColumn { column: Int16([-1, -2, -3]), validity: [0b_____011] } |
+--------+------------------------------------------------------------------------+


ast            : -b
raw expr       : minus(b::Int16)
checked expr   : minus<Int16>(b)
evaluation:
+--------+---------+-----------+
|        | b       | Output    |
+--------+---------+-----------+
| Type   | Int16   | Int32     |
| Domain | {2..=6} | {-6..=-2} |
| Row 0  | 2       | -2        |
| Row 1  | 4       | -4        |
| Row 2  | 6       | -6        |
+--------+---------+-----------+
evaluation (internal):
+--------+---------------------+
| Column | Data                |
+--------+---------------------+
| b      | Int16([2, 4, 6])    |
| Output | Int32([-2, -4, -6]) |
+--------+---------------------+


ast            : -c
raw expr       : minus(c::UInt32)
checked expr   : minus<UInt32>(c)
evaluation:
+--------+-----------+-------------+
|        | c         | Output      |
+--------+-----------+-------------+
| Type   | UInt32    | Int64       |
| Domain | {10..=30} | {-30..=-10} |
| Row 0  | 10        | -10         |
| Row 1  | 20        | -20         |
| Row 2  | 30        | -30         |
+--------+-----------+-------------+
evaluation (internal):
+--------+------------------------+
| Column | Data                   |
+--------+------------------------+
| c      | UInt32([10, 20, 30])   |
| Output | Int64([-10, -20, -30]) |
+--------+------------------------+


ast            : -d
raw expr       : minus(d::Float64)
checked expr   : minus<Float64>(d)
evaluation:
+--------+------------+------------+
|        | d          | Output     |
+--------+------------+------------+
| Type   | Float64    | Float64    |
| Domain | {-20..=30} | {-30..=20} |
| Row 0  | 10         | -10        |
| Row 1  | -20        | 20         |
| Row 2  | 30         | -30        |
+--------+------------+------------+
evaluation (internal):
+--------+-------------------------+
| Column | Data                    |
+--------+-------------------------+
| d      | Float64([10, -20, 30])  |
| Output | Float64([-10, 20, -30]) |
+--------+-------------------------+


ast            : -d2
raw expr       : minus(d2::UInt8 NULL)
checked expr   : minus<UInt8 NULL>(d2)
evaluation:
+--------+------------------+--------------------+
|        | d2               | Output             |
+--------+------------------+--------------------+
| Type   | UInt8 NULL       | Int16 NULL         |
| Domain | {1..=3} ∪ {NULL} | {-3..=-1} ∪ {NULL} |
| Row 0  | 1                | -1                 |
| Row 1  | NULL             | NULL               |
| Row 2  | 3                | -3                 |
+--------+------------------+--------------------+
evaluation (internal):
+--------+-----------------------------------------------------------------------+
| Column | Data                                                                  |
+--------+-----------------------------------------------------------------------+
| d2     | NullableColumn { column: UInt8([1, 0, 3]), validity: [0b_____101] }   |
| Output | NullableColumn { column: Int16([-1, 0, -3]), validity: [0b_____101] } |
+--------+-----------------------------------------------------------------------+


ast            : -e
raw expr       : minus(e::Decimal(10, 1))
checked expr   : minus<Decimal(10, 1)>(e)
evaluation:
+--------+----------------+-----------------+
|        | e              | Output          |
+--------+----------------+-----------------+
| Type   | Decimal(10, 1) | Decimal(10, 1)  |
| Domain | {3.1..=188.8}  | {-188.8..=-3.1} |
| Row 0  | 3.1            | -3.1            |
| Row 1  | 33.5           | -33.5           |
| Row 2  | 188.8          | -188.8          |
+--------+----------------+-----------------+
evaluation (internal):
+--------+-----------------------------------+
| Column | Data                              |
+--------+-----------------------------------+
| e      | Decimal128([3.1, 33.5, 188.8])    |
| Output | Decimal128([-3.1, -33.5, -188.8]) |
+--------+-----------------------------------+


ast            : -f
raw expr       : minus(f::Decimal(76, 2))
checked expr   : minus<Decimal(76, 2)>(f)
evaluation:
+--------+----------------+------------------+
|        | f              | Output           |
+--------+----------------+------------------+
| Type   | Decimal(76, 2) | Decimal(76, 2)   |
| Domain | {0.50..=12.34} | {-12.34..=-0.50} |
| Row 0  | 0.50           | -0.50            |
| Row 1  | 0.92           | -0.92            |
| Row 2  | 12.34          | -12.34           |
+--------+----------------+------------------+
evaluation (internal):
+--------+------------------------------------+
| Column | Data                               |
+--------+------------------------------------+
| f      | Decimal256([0.50, 0.92, 12.34])    |
| Output | Decimal256([-0.50, -0.92, -12.34]) |
+--------+------------------------------------+


error: 
  --> SQL:1:1
  |
1 | -g
  | ^ number overflowed while evaluating function `minus(-9223372036854775808)` in expr `- g`



ast            : a  * b
raw expr       : multiply(a::Int8, b::Int16)
checked expr   : multiply<Int8, Int16>(a, b)
evaluation:
+--------+---------+---------+----------+
|        | a       | b       | Output   |
+--------+---------+---------+----------+
| Type   | Int8    | Int16   | Int32    |
| Domain | {1..=3} | {2..=6} | {2..=18} |
| Row 0  | 1       | 2       | 2        |
| Row 1  | 2       | 4       | 8        |
| Row 2  | 3       | 6       | 18       |
+--------+---------+---------+----------+
evaluation (internal):
+--------+-------------------+
| Column | Data              |
+--------+-------------------+
| a      | Int8([1, 2, 3])   |
| b      | Int16([2, 4, 6])  |
| Output | Int32([2, 8, 18]) |
+--------+-------------------+


ast            : a2 * 10
raw expr       : multiply(a2::UInt8 NULL, 10)
checked expr   : multiply<UInt8 NULL, UInt8 NULL>(a2, CAST(10_u8 AS UInt8 NULL))
optimized expr : multiply<UInt8 NULL, UInt8 NULL>(a2, 10_u8)
evaluation:
+--------+------------------+--------------------+
|        | a2               | Output             |
+--------+------------------+--------------------+
| Type   | UInt8 NULL       | UInt16 NULL        |
| Domain | {1..=2} ∪ {NULL} | {10..=20} ∪ {NULL} |
| Row 0  | 1                | 10                 |
| Row 1  | 2                | 20                 |
| Row 2  | NULL             | NULL               |
+--------+------------------+--------------------+
evaluation (internal):
+--------+-------------------------------------------------------------------------+
| Column | Data                                                                    |
+--------+-------------------------------------------------------------------------+
| a2     | NullableColumn { column: UInt8([1, 2, 3]), validity: [0b_____011] }     |
| Output | NullableColumn { column: UInt16([10, 20, 30]), validity: [0b_____011] } |
+--------+-------------------------------------------------------------------------+


ast            : a2 * c
raw expr       : multiply(a2::UInt8 NULL, c::UInt32)
checked expr   : multiply<UInt8 NULL, UInt32 NULL>(a2, CAST(c AS UInt32 NULL))
evaluation:
+--------+------------------+-----------+--------------------+
|        | a2               | c         | Output             |
+--------+------------------+-----------+--------------------+
| Type   | UInt8 NULL       | UInt32    | UInt64 NULL        |
| Domain | {1..=2} ∪ {NULL} | {10..=30} | {10..=60} ∪ {NULL} |
| Row 0  | 1                | 10        | 10                 |
| Row 1  | 2                | 20        | 40                 |
| Row 2  | NULL             | 30        | NULL               |
+--------+------------------+-----------+--------------------+
evaluation (internal):
+--------+-------------------------------------------------------------------------+
| Column | Data                                                                    |
+--------+-------------------------------------------------------------------------+
| a2     | NullableColumn { column: UInt8([1, 2, 3]), validity: [0b_____011] }     |
| c      | UInt32([10, 20, 30])                                                    |
| Output | NullableColumn { column: UInt64([10, 40, 90]), validity: [0b_____011] } |
+--------+-------------------------------------------------------------------------+


ast            : c * 0.5
raw expr       : multiply(c::UInt32, 0.5)
checked expr   : multiply<UInt32, Decimal(1, 1)>(c, 0.5_d128(1,1))
evaluation:
+--------+-----------+----------------+
|        | c         | Output         |
+--------+-----------+----------------+
| Type   | UInt32    | Decimal(11, 1) |
| Domain | {10..=30} | {5.0..=15.0}   |
| Row 0  | 10        | 5.0            |
| Row 1  | 20        | 10.0           |
| Row 2  | 30        | 15.0           |
+--------+-----------+----------------+
evaluation (internal):
+--------+-------------------------------+
| Column | Data                          |
+--------+-------------------------------+
| c      | UInt32([10, 20, 30])          |
| Output | Decimal128([5.0, 10.0, 15.0]) |
+--------+-------------------------------+


ast            : c * b
raw expr       : multiply(c::UInt32, b::Int16)
checked expr   : multiply<UInt32, Int16>(c, b)
evaluation:
+--------+---------+-----------+------------+
|        | b       | c         | Output     |
+--------+---------+-----------+------------+
| Type   | Int16   | UInt32    | Int64      |
| Domain | {2..=6} | {10..=30} | {20..=180} |
| Row 0  | 2       | 10        | 20         |
| Row 1  | 4       | 20        | 80         |
| Row 2  | 6       | 30        | 180        |
+--------+---------+-----------+------------+
evaluation (internal):
+--------+----------------------+
| Column | Data                 |
+--------+----------------------+
| b      | Int16([2, 4, 6])     |
| c      | UInt32([10, 20, 30]) |
| Output | Int64([20, 80, 180]) |
+--------+----------------------+


ast            : c * d
raw expr       : multiply(c::UInt32, d::Float64)
checked expr   : multiply<UInt32, Float64>(c, d)
evaluation:
+--------+-----------+------------+--------------+
|        | c         | d          | Output       |
+--------+-----------+------------+--------------+
| Type   | UInt32    | Float64    | Float64      |
| Domain | {10..=30} | {-20..=30} | {-600..=900} |
| Row 0  | 10        | 10         | 100          |
| Row 1  | 20        | -20        | -400         |
| Row 2  | 30        | 30         | 900          |
+--------+-----------+------------+--------------+
evaluation (internal):
+--------+---------------------------+
| Column | Data                      |
+--------+---------------------------+
| c      | UInt32([10, 20, 30])      |
| d      | Float64([10, -20, 30])    |
| Output | Float64([100, -400, 900]) |
+--------+---------------------------+


ast            : c * e
raw expr       : multiply(c::UInt32, e::Decimal(10, 1))
checked expr   : multiply<UInt32, Decimal(10, 1)>(c, e)
evaluation:
+--------+-----------+----------------+-----------------+
|        | c         | e              | Output          |
+--------+-----------+----------------+-----------------+
| Type   | UInt32    | Decimal(10, 1) | Decimal(20, 1)  |
| Domain | {10..=30} | {3.1..=188.8}  | {31.0..=5664.0} |
| Row 0  | 10        | 3.1            | 31.0            |
| Row 1  | 20        | 33.5           | 670.0           |
| Row 2  | 30        | 188.8          | 5664.0          |
+--------+-----------+----------------+-----------------+
evaluation (internal):
+--------+-----------------------------------+
| Column | Data                              |
+--------+-----------------------------------+
| c      | UInt32([10, 20, 30])              |
| e      | Decimal128([3.1, 33.5, 188.8])    |
| Output | Decimal128([31.0, 670.0, 5664.0]) |
+--------+-----------------------------------+


ast            : d * e
raw expr       : multiply(d::Float64, e::Decimal(10, 1))
checked expr   : multiply<Float64, Float64>(d, to_float64<Decimal(10, 1)>(e))
evaluation:
+--------+------------+----------------+----------------+
|        | d          | e              | Output         |
+--------+------------+----------------+----------------+
| Type   | Float64    | Decimal(10, 1) | Float64        |
| Domain | {-20..=30} | {3.1..=188.8}  | {-3776..=5664} |
| Row 0  | 10         | 3.1            | 31             |
| Row 1  | -20        | 33.5           | -670           |
| Row 2  | 30         | 188.8          | 5664           |
+--------+------------+----------------+----------------+
evaluation (internal):
+--------+--------------------------------+
| Column | Data                           |
+--------+--------------------------------+
| d      | Float64([10, -20, 30])         |
| e      | Decimal128([3.1, 33.5, 188.8]) |
| Output | Float64([31, -670, 5664])      |
+--------+--------------------------------+


ast            : d2 * e
raw expr       : multiply(d2::UInt8 NULL, e::Decimal(10, 1))
checked expr   : multiply<UInt8 NULL, Decimal(10, 1) NULL>(d2, CAST(e AS Decimal(10, 1) NULL))
evaluation:
+--------+------------------+----------------+------------------------+
|        | d2               | e              | Output                 |
+--------+------------------+----------------+------------------------+
| Type   | UInt8 NULL       | Decimal(10, 1) | Decimal(13, 1) NULL    |
| Domain | {1..=3} ∪ {NULL} | {3.1..=188.8}  | {3.1..=566.4} ∪ {NULL} |
| Row 0  | 1                | 3.1            | 3.1                    |
| Row 1  | NULL             | 33.5           | NULL                   |
| Row 2  | 3                | 188.8          | 566.4                  |
+--------+------------------+----------------+------------------------+
evaluation (internal):
+--------+----------------------------------------------------------------------------------+
| Column | Data                                                                             |
+--------+----------------------------------------------------------------------------------+
| d2     | NullableColumn { column: UInt8([1, 0, 3]), validity: [0b_____101] }              |
| e      | Decimal128([3.1, 33.5, 188.8])                                                   |
| Output | NullableColumn { column: Decimal128([3.1, 0.0, 566.4]), validity: [0b_____101] } |
+--------+----------------------------------------------------------------------------------+


ast            : d2 * f
raw expr       : multiply(d2::UInt8 NULL, f::Decimal(76, 2))
checked expr   : multiply<UInt8 NULL, Decimal(76, 2) NULL>(d2, CAST(f AS Decimal(76, 2) NULL))
evaluation:
+--------+------------------+----------------+-------------------------+
|        | d2               | f              | Output                  |
+--------+------------------+----------------+-------------------------+
| Type   | UInt8 NULL       | Decimal(76, 2) | Decimal(76, 2) NULL     |
| Domain | {1..=3} ∪ {NULL} | {0.50..=12.34} | {0.50..=37.02} ∪ {NULL} |
| Row 0  | 1                | 0.50           | 0.50                    |
| Row 1  | NULL             | 0.92           | NULL                    |
| Row 2  | 3                | 12.34          | 37.02                   |
+--------+------------------+----------------+-------------------------+
evaluation (internal):
+--------+------------------------------------------------------------------------------------+
| Column | Data                                                                               |
+--------+------------------------------------------------------------------------------------+
| d2     | NullableColumn { column: UInt8([1, 0, 3]), validity: [0b_____101] }                |
| f      | Decimal256([0.50, 0.92, 12.34])                                                    |
| Output | NullableColumn { column: Decimal256([0.50, 0.00, 37.02]), validity: [0b_____101] } |
+--------+------------------------------------------------------------------------------------+


ast            : e * f
raw expr       : multiply(e::Decimal(10, 1), f::Decimal(76, 2))
checked expr   : multiply<Decimal(10, 1), Decimal(76, 2)>(e, f)
evaluation:
+--------+----------------+----------------+--------------------+
|        | e              | f              | Output             |
+--------+----------------+----------------+--------------------+
| Type   | Decimal(10, 1) | Decimal(76, 2) | Decimal(76, 3)     |
| Domain | {3.1..=188.8}  | {0.50..=12.34} | {1.550..=2329.792} |
| Row 0  | 3.1            | 0.50           | 1.550              |
| Row 1  | 33.5           | 0.92           | 30.820             |
| Row 2  | 188.8          | 12.34          | 2329.792           |
+--------+----------------+----------------+--------------------+
evaluation (internal):
+--------+---------------------------------------+
| Column | Data                                  |
+--------+---------------------------------------+
| e      | Decimal128([3.1, 33.5, 188.8])        |
| f      | Decimal256([0.50, 0.92, 12.34])       |
| Output | Decimal256([1.550, 30.820, 2329.792]) |
+--------+---------------------------------------+


ast            : e * e
raw expr       : multiply(e::Decimal(10, 1), e::Decimal(10, 1))
checked expr   : multiply<Decimal(10, 1), Decimal(10, 1)>(e, e)
evaluation:
+--------+----------------+-------------------+
|        | e              | Output            |
+--------+----------------+-------------------+
| Type   | Decimal(10, 1) | Decimal(20, 2)    |
| Domain | {3.1..=188.8}  | {9.61..=35645.44} |
| Row 0  | 3.1            | 9.61              |
| Row 1  | 33.5           | 1122.25           |
| Row 2  | 188.8          | 35645.44          |
+--------+----------------+-------------------+
evaluation (internal):
+--------+---------------------------------------+
| Column | Data                                  |
+--------+---------------------------------------+
| e      | Decimal128([3.1, 33.5, 188.8])        |
| Output | Decimal128([9.61, 1122.25, 35645.44]) |
+--------+---------------------------------------+


ast            : f * f
raw expr       : multiply(f::Decimal(76, 2), f::Decimal(76, 2))
checked expr   : multiply<Decimal(76, 2), Decimal(76, 2)>(f, f)
evaluation:
+--------+----------------+---------------------+
|        | f              | Output              |
+--------+----------------+---------------------+
| Type   | Decimal(76, 2) | Decimal(76, 4)      |
| Domain | {0.50..=12.34} | {0.2500..=152.2756} |
| Row 0  | 0.50           | 0.2500              |
| Row 1  | 0.92           | 0.8464              |
| Row 2  | 12.34          | 152.2756            |
+--------+----------------+---------------------+
evaluation (internal):
+--------+----------------------------------------+
| Column | Data                                   |
+--------+----------------------------------------+
| f      | Decimal256([0.50, 0.92, 12.34])        |
| Output | Decimal256([0.2500, 0.8464, 152.2756]) |
+--------+----------------------------------------+


ast            : e * 0.5
raw expr       : multiply(e::Decimal(10, 1), 0.5)
checked expr   : multiply<Decimal(10, 1), Decimal(1, 1)>(e, 0.5_d128(1,1))
evaluation:
+--------+----------------+----------------+
|        | e              | Output         |
+--------+----------------+----------------+
| Type   | Decimal(10, 1) | Decimal(11, 2) |
| Domain | {3.1..=188.8}  | {1.55..=94.40} |
| Row 0  | 3.1            | 1.55           |
| Row 1  | 33.5           | 16.75          |
| Row 2  | 188.8          | 94.40          |
+--------+----------------+----------------+
evaluation (internal):
+--------+----------------------------------+
| Column | Data                             |
+--------+----------------------------------+
| e      | Decimal128([3.1, 33.5, 188.8])   |
| Output | Decimal128([1.55, 16.75, 94.40]) |
+--------+----------------------------------+


ast            : a / b
raw expr       : divide(a::Int8, b::Int16)
checked expr   : divide<Int8, Int16>(a, b)
evaluation:
+--------+---------+---------+---------+
|        | a       | b       | Output  |
+--------+---------+---------+---------+
| Type   | Int8    | Int16   | Float64 |
| Domain | {1..=3} | {2..=6} | Unknown |
| Row 0  | 1       | 2       | 0.5     |
| Row 1  | 2       | 4       | 0.5     |
| Row 2  | 3       | 6       | 0.5     |
+--------+---------+---------+---------+
evaluation (internal):
+--------+--------------------------+
| Column | Data                     |
+--------+--------------------------+
| a      | Int8([1, 2, 3])          |
| b      | Int16([2, 4, 6])         |
| Output | Float64([0.5, 0.5, 0.5]) |
+--------+--------------------------+


ast            : a2 / 10
raw expr       : divide(a2::UInt8 NULL, 10)
checked expr   : divide<UInt8 NULL, UInt8 NULL>(a2, CAST(10_u8 AS UInt8 NULL))
optimized expr : divide<UInt8 NULL, UInt8 NULL>(a2, 10_u8)
evaluation:
+--------+------------------+--------------+
|        | a2               | Output       |
+--------+------------------+--------------+
| Type   | UInt8 NULL       | Float64 NULL |
| Domain | {1..=2} ∪ {NULL} | Unknown      |
| Row 0  | 1                | 0.1          |
| Row 1  | 2                | 0.2          |
| Row 2  | NULL             | NULL         |
+--------+------------------+--------------+
evaluation (internal):
+--------+-----------------------------------------------------------------------------+
| Column | Data                                                                        |
+--------+-----------------------------------------------------------------------------+
| a2     | NullableColumn { column: UInt8([1, 2, 3]), validity: [0b_____011] }         |
| Output | NullableColumn { column: Float64([0.1, 0.2, 0.3]), validity: [0b_____011] } |
+--------+-----------------------------------------------------------------------------+


ast            : a2 / c
raw expr       : divide(a2::UInt8 NULL, c::UInt32)
checked expr   : divide<UInt8 NULL, UInt32 NULL>(a2, CAST(c AS UInt32 NULL))
evaluation:
+--------+------------------+-----------+--------------+
|        | a2               | c         | Output       |
+--------+------------------+-----------+--------------+
| Type   | UInt8 NULL       | UInt32    | Float64 NULL |
| Domain | {1..=2} ∪ {NULL} | {10..=30} | Unknown      |
| Row 0  | 1                | 10        | 0.1          |
| Row 1  | 2                | 20        | 0.1          |
| Row 2  | NULL             | 30        | NULL         |
+--------+------------------+-----------+--------------+
evaluation (internal):
+--------+-----------------------------------------------------------------------------+
| Column | Data                                                                        |
+--------+-----------------------------------------------------------------------------+
| a2     | NullableColumn { column: UInt8([1, 2, 3]), validity: [0b_____011] }         |
| c      | UInt32([10, 20, 30])                                                        |
| Output | NullableColumn { column: Float64([0.1, 0.1, 0.1]), validity: [0b_____011] } |
+--------+-----------------------------------------------------------------------------+


ast            : c / 0.5
raw expr       : divide(c::UInt32, 0.5)
checked expr   : divide<UInt32, Decimal(1, 1)>(c, 0.5_d128(1,1))
evaluation:
+--------+-----------+----------------+
|        | c         | Output         |
+--------+-----------+----------------+
| Type   | UInt32    | Decimal(17, 6) |
| Domain | {10..=30} | Unknown        |
| Row 0  | 10        | 20.000000      |
| Row 1  | 20        | 40.000000      |
| Row 2  | 30        | 60.000000      |
+--------+-----------+----------------+
evaluation (internal):
+--------+-----------------------------------------------+
| Column | Data                                          |
+--------+-----------------------------------------------+
| c      | UInt32([10, 20, 30])                          |
| Output | Decimal128([20.000000, 40.000000, 60.000000]) |
+--------+-----------------------------------------------+


ast            : divide(c, b)
raw expr       : divide(c::UInt32, b::Int16)
checked expr   : divide<UInt32, Int16>(c, b)
evaluation:
+--------+---------+-----------+---------+
|        | b       | c         | Output  |
+--------+---------+-----------+---------+
| Type   | Int16   | UInt32    | Float64 |
| Domain | {2..=6} | {10..=30} | Unknown |
| Row 0  | 2       | 10        | 5       |
| Row 1  | 4       | 20        | 5       |
| Row 2  | 6       | 30        | 5       |
+--------+---------+-----------+---------+
evaluation (internal):
+--------+----------------------+
| Column | Data                 |
+--------+----------------------+
| b      | Int16([2, 4, 6])     |
| c      | UInt32([10, 20, 30]) |
| Output | Float64([5, 5, 5])   |
+--------+----------------------+


ast            : c / d
raw expr       : divide(c::UInt32, d::Float64)
checked expr   : divide<UInt32, Float64>(c, d)
evaluation:
+--------+-----------+------------+---------+
|        | c         | d          | Output  |
+--------+-----------+------------+---------+
| Type   | UInt32    | Float64    | Float64 |
| Domain | {10..=30} | {-20..=30} | Unknown |
| Row 0  | 10        | 10         | 1       |
| Row 1  | 20        | -20        | -1      |
| Row 2  | 30        | 30         | 1       |
+--------+-----------+------------+---------+
evaluation (internal):
+--------+------------------------+
| Column | Data                   |
+--------+------------------------+
| c      | UInt32([10, 20, 30])   |
| d      | Float64([10, -20, 30]) |
| Output | Float64([1, -1, 1])    |
+--------+------------------------+


ast            : b / d2
raw expr       : divide(b::Int16, d2::UInt8 NULL)
checked expr   : divide<Int16 NULL, UInt8 NULL>(CAST(b AS Int16 NULL), d2)
evaluation:
+--------+---------+------------------+--------------+
|        | b       | d2               | Output       |
+--------+---------+------------------+--------------+
| Type   | Int16   | UInt8 NULL       | Float64 NULL |
| Domain | {2..=6} | {1..=3} ∪ {NULL} | Unknown      |
| Row 0  | 2       | 1                | 2            |
| Row 1  | 4       | NULL             | NULL         |
| Row 2  | 6       | 3                | 2            |
+--------+---------+------------------+--------------+
evaluation (internal):
+--------+-----------------------------------------------------------------------+
| Column | Data                                                                  |
+--------+-----------------------------------------------------------------------+
| b      | Int16([2, 4, 6])                                                      |
| d2     | NullableColumn { column: UInt8([1, 0, 3]), validity: [0b_____101] }   |
| Output | NullableColumn { column: Float64([2, 0, 2]), validity: [0b_____101] } |
+--------+-----------------------------------------------------------------------+


error: 
  --> SQL:1:5
  |
1 | 2.0 / 0
  |     ^ divided by zero while evaluating function `divide(2.0, 0)` in expr `2.0 / 0`



ast            : c / e
raw expr       : divide(c::UInt32, e::Decimal(10, 1))
checked expr   : divide<UInt32, Decimal(10, 1)>(c, e)
evaluation:
+--------+-----------+----------------+----------------+
|        | c         | e              | Output         |
+--------+-----------+----------------+----------------+
| Type   | UInt32    | Decimal(10, 1) | Decimal(17, 6) |
| Domain | {10..=30} | {3.1..=188.8}  | Unknown        |
| Row 0  | 10        | 3.1            | 3.225806       |
| Row 1  | 20        | 33.5           | 0.597015       |
| Row 2  | 30        | 188.8          | 0.158898       |
+--------+-----------+----------------+----------------+
evaluation (internal):
+--------+--------------------------------------------+
| Column | Data                                       |
+--------+--------------------------------------------+
| c      | UInt32([10, 20, 30])                       |
| e      | Decimal128([3.1, 33.5, 188.8])             |
| Output | Decimal128([3.225806, 0.597015, 0.158898]) |
+--------+--------------------------------------------+


ast            : d / e
raw expr       : divide(d::Float64, e::Decimal(10, 1))
checked expr   : divide<Float64, Float64>(d, to_float64<Decimal(10, 1)>(e))
evaluation:
+--------+------------+----------------+---------------+
|        | d          | e              | Output        |
+--------+------------+----------------+---------------+
| Type   | Float64    | Decimal(10, 1) | Float64       |
| Domain | {-20..=30} | {3.1..=188.8}  | Unknown       |
| Row 0  | 10         | 3.1            | 3.2258064516  |
| Row 1  | -20        | 33.5           | -0.5970149253 |
| Row 2  | 30         | 188.8          | 0.158898305   |
+--------+------------+----------------+---------------+
evaluation (internal):
+--------+-----------------------------------------------------+
| Column | Data                                                |
+--------+-----------------------------------------------------+
| d      | Float64([10, -20, 30])                              |
| e      | Decimal128([3.1, 33.5, 188.8])                      |
| Output | Float64([3.2258064516, -0.5970149253, 0.158898305]) |
+--------+-----------------------------------------------------+


ast            : d2 / e
raw expr       : divide(d2::UInt8 NULL, e::Decimal(10, 1))
checked expr   : divide<UInt8 NULL, Decimal(10, 1) NULL>(d2, CAST(e AS Decimal(10, 1) NULL))
evaluation:
+--------+------------------+----------------+---------------------+
|        | d2               | e              | Output              |
+--------+------------------+----------------+---------------------+
| Type   | UInt8 NULL       | Decimal(10, 1) | Decimal(10, 6) NULL |
| Domain | {1..=3} ∪ {NULL} | {3.1..=188.8}  | Unknown             |
| Row 0  | 1                | 3.1            | 0.322581            |
| Row 1  | NULL             | 33.5           | NULL                |
| Row 2  | 3                | 188.8          | 0.015890            |
+--------+------------------+----------------+---------------------+
evaluation (internal):
+--------+-----------------------------------------------------------------------------------------------+
| Column | Data                                                                                          |
+--------+-----------------------------------------------------------------------------------------------+
| d2     | NullableColumn { column: UInt8([1, 0, 3]), validity: [0b_____101] }                           |
| e      | Decimal128([3.1, 33.5, 188.8])                                                                |
| Output | NullableColumn { column: Decimal128([0.322581, 0.000000, 0.015890]), validity: [0b_____101] } |
+--------+-----------------------------------------------------------------------------------------------+


ast            : d2 / f
raw expr       : divide(d2::UInt8 NULL, f::Decimal(76, 2))
checked expr   : divide<UInt8 NULL, Decimal(76, 2) NULL>(d2, CAST(f AS Decimal(76, 2) NULL))
evaluation:
+--------+------------------+----------------+---------------------+
|        | d2               | f              | Output              |
+--------+------------------+----------------+---------------------+
| Type   | UInt8 NULL       | Decimal(76, 2) | Decimal(39, 6) NULL |
| Domain | {1..=3} ∪ {NULL} | {0.50..=12.34} | Unknown             |
| Row 0  | 1                | 0.50           | 2.000000            |
| Row 1  | NULL             | 0.92           | NULL                |
| Row 2  | 3                | 12.34          | 0.243112            |
+--------+------------------+----------------+---------------------+
evaluation (internal):
+--------+-----------------------------------------------------------------------------------------------+
| Column | Data                                                                                          |
+--------+-----------------------------------------------------------------------------------------------+
| d2     | NullableColumn { column: UInt8([1, 0, 3]), validity: [0b_____101] }                           |
| f      | Decimal256([0.50, 0.92, 12.34])                                                               |
| Output | NullableColumn { column: Decimal256([2.000000, 0.000000, 0.243112]), validity: [0b_____101] } |
+--------+-----------------------------------------------------------------------------------------------+


ast            : e / f
raw expr       : divide(e::Decimal(10, 1), f::Decimal(76, 2))
checked expr   : divide<Decimal(10, 1), Decimal(76, 2)>(e, f)
evaluation:
+--------+----------------+----------------+----------------+
|        | e              | f              | Output         |
+--------+----------------+----------------+----------------+
| Type   | Decimal(10, 1) | Decimal(76, 2) | Decimal(39, 7) |
| Domain | {3.1..=188.8}  | {0.50..=12.34} | Unknown        |
| Row 0  | 3.1            | 0.50           | 6.2000000      |
| Row 1  | 33.5           | 0.92           | 36.4130435     |
| Row 2  | 188.8          | 12.34          | 15.2998379     |
+--------+----------------+----------------+----------------+
evaluation (internal):
+--------+-------------------------------------------------+
| Column | Data                                            |
+--------+-------------------------------------------------+
| e      | Decimal128([3.1, 33.5, 188.8])                  |
| f      | Decimal256([0.50, 0.92, 12.34])                 |
| Output | Decimal256([6.2000000, 36.4130435, 15.2998379]) |
+--------+-------------------------------------------------+


ast            : a  div b
raw expr       : div(a::Int8, b::Int16)
checked expr   : div<Int8, Int16>(a, b)
evaluation:
+--------+---------+---------+---------+
|        | a       | b       | Output  |
+--------+---------+---------+---------+
| Type   | Int8    | Int16   | Int16   |
| Domain | {1..=3} | {2..=6} | Unknown |
| Row 0  | 1       | 2       | 0       |
| Row 1  | 2       | 4       | 0       |
| Row 2  | 3       | 6       | 0       |
+--------+---------+---------+---------+
evaluation (internal):
+--------+------------------+
| Column | Data             |
+--------+------------------+
| a      | Int8([1, 2, 3])  |
| b      | Int16([2, 4, 6]) |
| Output | Int16([0, 0, 0]) |
+--------+------------------+


ast            : a2 div 10
raw expr       : div(a2::UInt8 NULL, 10)
checked expr   : div<UInt8 NULL, UInt8 NULL>(a2, CAST(10_u8 AS UInt8 NULL))
optimized expr : div<UInt8 NULL, UInt8 NULL>(a2, 10_u8)
evaluation:
+--------+------------------+------------+
|        | a2               | Output     |
+--------+------------------+------------+
| Type   | UInt8 NULL       | UInt8 NULL |
| Domain | {1..=2} ∪ {NULL} | Unknown    |
| Row 0  | 1                | 0          |
| Row 1  | 2                | 0          |
| Row 2  | NULL             | NULL       |
+--------+------------------+------------+
evaluation (internal):
+--------+---------------------------------------------------------------------+
| Column | Data                                                                |
+--------+---------------------------------------------------------------------+
| a2     | NullableColumn { column: UInt8([1, 2, 3]), validity: [0b_____011] } |
| Output | NullableColumn { column: UInt8([0, 0, 0]), validity: [0b_____011] } |
+--------+---------------------------------------------------------------------+


ast            : a2 div c
raw expr       : div(a2::UInt8 NULL, c::UInt32)
checked expr   : div<UInt8 NULL, UInt32 NULL>(a2, CAST(c AS UInt32 NULL))
evaluation:
+--------+------------------+-----------+-------------+
|        | a2               | c         | Output      |
+--------+------------------+-----------+-------------+
| Type   | UInt8 NULL       | UInt32    | UInt32 NULL |
| Domain | {1..=2} ∪ {NULL} | {10..=30} | Unknown     |
| Row 0  | 1                | 10        | 0           |
| Row 1  | 2                | 20        | 0           |
| Row 2  | NULL             | 30        | NULL        |
+--------+------------------+-----------+-------------+
evaluation (internal):
+--------+----------------------------------------------------------------------+
| Column | Data                                                                 |
+--------+----------------------------------------------------------------------+
| a2     | NullableColumn { column: UInt8([1, 2, 3]), validity: [0b_____011] }  |
| c      | UInt32([10, 20, 30])                                                 |
| Output | NullableColumn { column: UInt32([0, 0, 0]), validity: [0b_____011] } |
+--------+----------------------------------------------------------------------+


ast            : c div 0.5
raw expr       : div(c::UInt32, 0.5)
checked expr   : div<UInt32, Float64>(c, to_float64<Decimal(1, 1)>(0.5_d128(1,1)))
optimized expr : div<UInt32, Float64>(c, 0.5_f64)
evaluation:
+--------+-----------+---------+
|        | c         | Output  |
+--------+-----------+---------+
| Type   | UInt32    | Int64   |
| Domain | {10..=30} | Unknown |
| Row 0  | 10        | 20      |
| Row 1  | 20        | 40      |
| Row 2  | 30        | 60      |
+--------+-----------+---------+
evaluation (internal):
+--------+----------------------+
| Column | Data                 |
+--------+----------------------+
| c      | UInt32([10, 20, 30]) |
| Output | Int64([20, 40, 60])  |
+--------+----------------------+


ast            : c div b
raw expr       : div(c::UInt32, b::Int16)
checked expr   : div<UInt32, Int16>(c, b)
evaluation:
+--------+---------+-----------+---------+
|        | b       | c         | Output  |
+--------+---------+-----------+---------+
| Type   | Int16   | UInt32    | Int32   |
| Domain | {2..=6} | {10..=30} | Unknown |
| Row 0  | 2       | 10        | 5       |
| Row 1  | 4       | 20        | 5       |
| Row 2  | 6       | 30        | 5       |
+--------+---------+-----------+---------+
evaluation (internal):
+--------+----------------------+
| Column | Data                 |
+--------+----------------------+
| b      | Int16([2, 4, 6])     |
| c      | UInt32([10, 20, 30]) |
| Output | Int32([5, 5, 5])     |
+--------+----------------------+


ast            : c div d
raw expr       : div(c::UInt32, d::Float64)
checked expr   : div<UInt32, Float64>(c, d)
evaluation:
+--------+-----------+------------+---------+
|        | c         | d          | Output  |
+--------+-----------+------------+---------+
| Type   | UInt32    | Float64    | Int64   |
| Domain | {10..=30} | {-20..=30} | Unknown |
| Row 0  | 10        | 10         | 1       |
| Row 1  | 20        | -20        | -1      |
| Row 2  | 30        | 30         | 1       |
+--------+-----------+------------+---------+
evaluation (internal):
+--------+------------------------+
| Column | Data                   |
+--------+------------------------+
| c      | UInt32([10, 20, 30])   |
| d      | Float64([10, -20, 30]) |
| Output | Int64([1, -1, 1])      |
+--------+------------------------+


ast            : c div d2
raw expr       : div(c::UInt32, d2::UInt8 NULL)
checked expr   : div<UInt32 NULL, UInt8 NULL>(CAST(c AS UInt32 NULL), d2)
evaluation:
+--------+-----------+------------------+-------------+
|        | c         | d2               | Output      |
+--------+-----------+------------------+-------------+
| Type   | UInt32    | UInt8 NULL       | UInt32 NULL |
| Domain | {10..=30} | {1..=3} ∪ {NULL} | Unknown     |
| Row 0  | 10        | 1                | 10          |
| Row 1  | 20        | NULL             | NULL        |
| Row 2  | 30        | 3                | 10          |
+--------+-----------+------------------+-------------+
evaluation (internal):
+--------+------------------------------------------------------------------------+
| Column | Data                                                                   |
+--------+------------------------------------------------------------------------+
| c      | UInt32([10, 20, 30])                                                   |
| d2     | NullableColumn { column: UInt8([1, 0, 3]), validity: [0b_____101] }    |
| Output | NullableColumn { column: UInt32([10, 0, 10]), validity: [0b_____101] } |
+--------+------------------------------------------------------------------------+


error: 
  --> SQL:1:3
  |
1 | c div 0
  |   ^^^ divided by zero while evaluating function `div(10, 0)` in expr `c DIV 0`



ast            : (a + 3)  % b
raw expr       : modulo(plus(a::Int8, 3), b::Int16)
checked expr   : modulo<Int16, Int16>(plus<Int8, UInt8>(a, 3_u8), b)
evaluation:
+--------+---------+---------+---------+
|        | a       | b       | Output  |
+--------+---------+---------+---------+
| Type   | Int8    | Int16   | Int32   |
| Domain | {1..=3} | {2..=6} | Unknown |
| Row 0  | 1       | 2       | 0       |
| Row 1  | 2       | 4       | 1       |
| Row 2  | 3       | 6       | 0       |
+--------+---------+---------+---------+
evaluation (internal):
+--------+------------------+
| Column | Data             |
+--------+------------------+
| a      | Int8([1, 2, 3])  |
| b      | Int16([2, 4, 6]) |
| Output | Int32([0, 1, 0]) |
+--------+------------------+


ast            : a2 % 4
raw expr       : modulo(a2::UInt8 NULL, 4)
checked expr   : modulo<UInt8 NULL, UInt8 NULL>(a2, CAST(4_u8 AS UInt8 NULL))
optimized expr : modulo<UInt8 NULL, UInt8 NULL>(a2, 4_u8)
evaluation:
+--------+------------------+------------+
|        | a2               | Output     |
+--------+------------------+------------+
| Type   | UInt8 NULL       | UInt8 NULL |
| Domain | {1..=2} ∪ {NULL} | Unknown    |
| Row 0  | 1                | 1          |
| Row 1  | 2                | 2          |
| Row 2  | NULL             | NULL       |
+--------+------------------+------------+
evaluation (internal):
+--------+---------------------------------------------------------------------+
| Column | Data                                                                |
+--------+---------------------------------------------------------------------+
| a2     | NullableColumn { column: UInt8([1, 2, 3]), validity: [0b_____011] } |
| Output | NullableColumn { column: UInt8([1, 2, 3]), validity: [0b_____011] } |
+--------+---------------------------------------------------------------------+


ast            : (a2 + 4) % c
raw expr       : modulo(plus(a2::UInt8 NULL, 4), c::UInt32)
checked expr   : modulo<UInt16 NULL, UInt32 NULL>(plus<UInt8 NULL, UInt8 NULL>(a2, CAST(4_u8 AS UInt8 NULL)), CAST(c AS UInt32 NULL))
optimized expr : modulo<UInt16 NULL, UInt32 NULL>(plus<UInt8 NULL, UInt8 NULL>(a2, 4_u8), CAST(c AS UInt32 NULL))
evaluation:
+--------+------------------+-----------+-------------+
|        | a2               | c         | Output      |
+--------+------------------+-----------+-------------+
| Type   | UInt8 NULL       | UInt32    | UInt32 NULL |
| Domain | {1..=2} ∪ {NULL} | {10..=30} | Unknown     |
| Row 0  | 1                | 10        | 5           |
| Row 1  | 2                | 20        | 6           |
| Row 2  | NULL             | 30        | NULL        |
+--------+------------------+-----------+-------------+
evaluation (internal):
+--------+----------------------------------------------------------------------+
| Column | Data                                                                 |
+--------+----------------------------------------------------------------------+
| a2     | NullableColumn { column: UInt8([1, 2, 3]), validity: [0b_____011] }  |
| c      | UInt32([10, 20, 30])                                                 |
| Output | NullableColumn { column: UInt32([5, 6, 7]), validity: [0b_____011] } |
+--------+----------------------------------------------------------------------+


ast            : c % (b + 3)
raw expr       : modulo(c::UInt32, plus(b::Int16, 3))
checked expr   : modulo<UInt32, Int32>(c, plus<Int16, UInt8>(b, 3_u8))
evaluation:
+--------+---------+-----------+---------+
|        | b       | c         | Output  |
+--------+---------+-----------+---------+
| Type   | Int16   | UInt32    | UInt32  |
| Domain | {2..=6} | {10..=30} | Unknown |
| Row 0  | 2       | 10        | 0       |
| Row 1  | 4       | 20        | 6       |
| Row 2  | 6       | 30        | 3       |
+--------+---------+-----------+---------+
evaluation (internal):
+--------+----------------------+
| Column | Data                 |
+--------+----------------------+
| b      | Int16([2, 4, 6])     |
| c      | UInt32([10, 20, 30]) |
| Output | UInt32([0, 6, 3])    |
+--------+----------------------+


ast            : c % (d - 3)
raw expr       : modulo(c::UInt32, minus(d::Float64, 3))
checked expr   : modulo<UInt32, Float64>(c, minus<Float64, UInt8>(d, 3_u8))
evaluation:
+--------+-----------+------------+---------+
|        | c         | d          | Output  |
+--------+-----------+------------+---------+
| Type   | UInt32    | Float64    | Float64 |
| Domain | {10..=30} | {-20..=30} | Unknown |
| Row 0  | 10        | 10         | 3       |
| Row 1  | 20        | -20        | 20      |
| Row 2  | 30        | 30         | 3       |
+--------+-----------+------------+---------+
evaluation (internal):
+--------+------------------------+
| Column | Data                   |
+--------+------------------------+
| c      | UInt32([10, 20, 30])   |
| d      | Float64([10, -20, 30]) |
| Output | Float64([3, 20, 3])    |
+--------+------------------------+


error: 
  --> SQL:1:3
  |
1 | c % 0
  |   ^ Division by zero while evaluating function `modulo(10, 0)` in expr `c % 0`



ast            : c % d2
raw expr       : modulo(c::UInt32, d2::UInt8 NULL)
checked expr   : modulo<UInt32 NULL, UInt8 NULL>(CAST(c AS UInt32 NULL), d2)
evaluation:
+--------+-----------+------------------+------------+
|        | c         | d2               | Output     |
+--------+-----------+------------------+------------+
| Type   | UInt32    | UInt8 NULL       | UInt8 NULL |
| Domain | {10..=30} | {1..=3} ∪ {NULL} | Unknown    |
| Row 0  | 10        | 1                | 0          |
| Row 1  | 20        | NULL             | NULL       |
| Row 2  | 30        | 3                | 0          |
+--------+-----------+------------------+------------+
evaluation (internal):
+--------+---------------------------------------------------------------------+
| Column | Data                                                                |
+--------+---------------------------------------------------------------------+
| c      | UInt32([10, 20, 30])                                                |
| d2     | NullableColumn { column: UInt8([1, 0, 3]), validity: [0b_____101] } |
| Output | NullableColumn { column: UInt8([0, 0, 0]), validity: [0b_____101] } |
+--------+---------------------------------------------------------------------+


ast            : to_string(a)
raw expr       : to_string(a::Int8)
checked expr   : to_string<Int8>(a)
evaluation:
+--------+---------+--------+
|        | a       | Output |
+--------+---------+--------+
| Type   | Int8    | String |
| Domain | {1..=3} | {""..} |
| Row 0  | 1       | '1'    |
| Row 1  | 2       | '2'    |
| Row 2  | 3       | '3'    |
+--------+---------+--------+
evaluation (internal):
+--------+-----------------------+
| Column | Data                  |
+--------+-----------------------+
| a      | Int8([1, 2, 3])       |
| Output | StringColumn[1, 2, 3] |
+--------+-----------------------+


ast            : to_string(a2)
raw expr       : to_string(a2::UInt8 NULL)
checked expr   : to_string<UInt8 NULL>(a2)
evaluation:
+--------+------------------+-----------------+
|        | a2               | Output          |
+--------+------------------+-----------------+
| Type   | UInt8 NULL       | String NULL     |
| Domain | {1..=2} ∪ {NULL} | {""..} ∪ {NULL} |
| Row 0  | 1                | '1'             |
| Row 1  | 2                | '2'             |
| Row 2  | NULL             | NULL            |
+--------+------------------+-----------------+
evaluation (internal):
+--------+--------------------------------------------------------------------------+
| Column | Data                                                                     |
+--------+--------------------------------------------------------------------------+
| a2     | NullableColumn { column: UInt8([1, 2, 3]), validity: [0b_____011] }      |
| Output | NullableColumn { column: StringColumn[1, 2, 3], validity: [0b_____011] } |
+--------+--------------------------------------------------------------------------+


ast            : to_string(b)
raw expr       : to_string(b::Int16)
checked expr   : to_string<Int16>(b)
evaluation:
+--------+---------+--------+
|        | b       | Output |
+--------+---------+--------+
| Type   | Int16   | String |
| Domain | {2..=6} | {""..} |
| Row 0  | 2       | '2'    |
| Row 1  | 4       | '4'    |
| Row 2  | 6       | '6'    |
+--------+---------+--------+
evaluation (internal):
+--------+-----------------------+
| Column | Data                  |
+--------+-----------------------+
| b      | Int16([2, 4, 6])      |
| Output | StringColumn[2, 4, 6] |
+--------+-----------------------+


ast            : to_string(c)
raw expr       : to_string(c::UInt32)
checked expr   : to_string<UInt32>(c)
evaluation:
+--------+-----------+--------+
|        | c         | Output |
+--------+-----------+--------+
| Type   | UInt32    | String |
| Domain | {10..=30} | {""..} |
| Row 0  | 10        | '10'   |
| Row 1  | 20        | '20'   |
| Row 2  | 30        | '30'   |
+--------+-----------+--------+
evaluation (internal):
+--------+--------------------------+
| Column | Data                     |
+--------+--------------------------+
| c      | UInt32([10, 20, 30])     |
| Output | StringColumn[10, 20, 30] |
+--------+--------------------------+


ast            : to_string(d)
raw expr       : to_string(d::Float64)
checked expr   : to_string<Float64>(d)
evaluation:
+--------+------------+--------+
|        | d          | Output |
+--------+------------+--------+
| Type   | Float64    | String |
| Domain | {-20..=30} | {""..} |
| Row 0  | 10         | '10'   |
| Row 1  | -20        | '-20'  |
| Row 2  | 30         | '30'   |
+--------+------------+--------+
evaluation (internal):
+--------+---------------------------+
| Column | Data                      |
+--------+---------------------------+
| d      | Float64([10, -20, 30])    |
| Output | StringColumn[10, -20, 30] |
+--------+---------------------------+


ast            : to_string(d2)
raw expr       : to_string(d2::UInt8 NULL)
checked expr   : to_string<UInt8 NULL>(d2)
evaluation:
+--------+------------------+-----------------+
|        | d2               | Output          |
+--------+------------------+-----------------+
| Type   | UInt8 NULL       | String NULL     |
| Domain | {1..=3} ∪ {NULL} | {""..} ∪ {NULL} |
| Row 0  | 1                | '1'             |
| Row 1  | NULL             | NULL            |
| Row 2  | 3                | '3'             |
+--------+------------------+-----------------+
evaluation (internal):
+--------+--------------------------------------------------------------------------+
| Column | Data                                                                     |
+--------+--------------------------------------------------------------------------+
| d2     | NullableColumn { column: UInt8([1, 0, 3]), validity: [0b_____101] }      |
| Output | NullableColumn { column: StringColumn[1, 0, 3], validity: [0b_____101] } |
+--------+--------------------------------------------------------------------------+


ast            : to_string(e)
raw expr       : to_string(e::Decimal(10, 1))
checked expr   : to_string<Decimal(10, 1)>(e)
evaluation:
+--------+----------------+---------+
|        | e              | Output  |
+--------+----------------+---------+
| Type   | Decimal(10, 1) | String  |
| Domain | {3.1..=188.8}  | {""..}  |
| Row 0  | 3.1            | '3.1'   |
| Row 1  | 33.5           | '33.5'  |
| Row 2  | 188.8          | '188.8' |
+--------+----------------+---------+
evaluation (internal):
+--------+--------------------------------+
| Column | Data                           |
+--------+--------------------------------+
| e      | Decimal128([3.1, 33.5, 188.8]) |
| Output | StringColumn[3.1, 33.5, 188.8] |
+--------+--------------------------------+


ast            : to_string(f)
raw expr       : to_string(f::Decimal(76, 2))
checked expr   : to_string<Decimal(76, 2)>(f)
evaluation:
+--------+----------------+---------+
|        | f              | Output  |
+--------+----------------+---------+
| Type   | Decimal(76, 2) | String  |
| Domain | {0.50..=12.34} | {""..}  |
| Row 0  | 0.50           | '0.50'  |
| Row 1  | 0.92           | '0.92'  |
| Row 2  | 12.34          | '12.34' |
+--------+----------------+---------+
evaluation (internal):
+--------+---------------------------------+
| Column | Data                            |
+--------+---------------------------------+
| f      | Decimal256([0.50, 0.92, 12.34]) |
| Output | StringColumn[0.50, 0.92, 12.34] |
+--------+---------------------------------+


ast            : a ^ 2
raw expr       : pow(a::Int8, 2)
checked expr   : pow<Float64, Float64>(to_float64<Int8>(a), to_float64<UInt8>(2_u8))
optimized expr : pow<Float64, Float64>(to_float64<Int8>(a), 2_f64)
evaluation:
+--------+---------+--------------+
|        | a       | Output       |
+--------+---------+--------------+
| Type   | Int8    | Float64      |
| Domain | {1..=3} | {-inf..=NaN} |
| Row 0  | 1       | 1            |
| Row 1  | 2       | 4            |
| Row 2  | 3       | 9            |
+--------+---------+--------------+
evaluation (internal):
+--------+--------------------+
| Column | Data               |
+--------+--------------------+
| a      | Int8([1, 2, 3])    |
| Output | Float64([1, 4, 9]) |
+--------+--------------------+


ast            : a ^ a
raw expr       : pow(a::Int8, a::Int8)
checked expr   : pow<Float64, Float64>(to_float64<Int8>(a), to_float64<Int8>(a))
evaluation:
+--------+---------+--------------+
|        | a       | Output       |
+--------+---------+--------------+
| Type   | Int8    | Float64      |
| Domain | {1..=3} | {-inf..=NaN} |
| Row 0  | 1       | 1            |
| Row 1  | 2       | 4            |
| Row 2  | 3       | 27           |
+--------+---------+--------------+
evaluation (internal):
+--------+---------------------+
| Column | Data                |
+--------+---------------------+
| a      | Int8([1, 2, 3])     |
| Output | Float64([1, 4, 27]) |
+--------+---------------------+


ast            : a ^ a2
raw expr       : pow(a::Int8, a2::UInt8 NULL)
checked expr   : pow<Float64 NULL, Float64 NULL>(CAST(a AS Float64 NULL), CAST(a2 AS Float64 NULL))
evaluation:
+--------+---------+------------------+-----------------------+
|        | a       | a2               | Output                |
+--------+---------+------------------+-----------------------+
| Type   | Int8    | UInt8 NULL       | Float64 NULL          |
| Domain | {1..=3} | {1..=2} ∪ {NULL} | {-inf..=NaN} ∪ {NULL} |
| Row 0  | 1       | 1                | 1                     |
| Row 1  | 2       | 2                | 4                     |
| Row 2  | 3       | NULL             | NULL                  |
+--------+---------+------------------+-----------------------+
evaluation (internal):
+--------+------------------------------------------------------------------------+
| Column | Data                                                                   |
+--------+------------------------------------------------------------------------+
| a      | Int8([1, 2, 3])                                                        |
| a2     | NullableColumn { column: UInt8([1, 2, 3]), validity: [0b_____011] }    |
| Output | NullableColumn { column: Float64([1, 4, 27]), validity: [0b_____011] } |
+--------+------------------------------------------------------------------------+


ast            : c ^ 0
raw expr       : pow(c::UInt32, 0)
checked expr   : pow<Float64, Float64>(to_float64<UInt32>(c), to_float64<UInt8>(0_u8))
optimized expr : pow<Float64, Float64>(to_float64<UInt32>(c), 0_f64)
evaluation:
+--------+-----------+--------------+
|        | c         | Output       |
+--------+-----------+--------------+
| Type   | UInt32    | Float64      |
| Domain | {10..=30} | {-inf..=NaN} |
| Row 0  | 10        | 1            |
| Row 1  | 20        | 1            |
| Row 2  | 30        | 1            |
+--------+-----------+--------------+
evaluation (internal):
+--------+----------------------+
| Column | Data                 |
+--------+----------------------+
| c      | UInt32([10, 20, 30]) |
| Output | Float64([1, 1, 1])   |
+--------+----------------------+


ast            : c ^ d
raw expr       : pow(c::UInt32, d::Float64)
checked expr   : pow<Float64, Float64>(to_float64<UInt32>(c), d)
evaluation:
+--------+-----------+------------+-----------------------------------------------+
|        | c         | d          | Output                                        |
+--------+-----------+------------+-----------------------------------------------+
| Type   | UInt32    | Float64    | Float64                                       |
| Domain | {10..=30} | {-20..=30} | {-inf..=NaN}                                  |
| Row 0  | 10        | 10         | 10000000000                                   |
| Row 1  | 20        | -20        | 0                                             |
| Row 2  | 30        | 30         | 205891132094649000000000000000000000000000000 |
+--------+-----------+------------+-----------------------------------------------+
evaluation (internal):
+--------+--------------------------------------------------------------------------+
| Column | Data                                                                     |
+--------+--------------------------------------------------------------------------+
| c      | UInt32([10, 20, 30])                                                     |
| d      | Float64([10, -20, 30])                                                   |
| Output | Float64([10000000000, 0, 205891132094649000000000000000000000000000000]) |
+--------+--------------------------------------------------------------------------+


ast            : |/a
raw expr       : sqrt(a::Int8)
checked expr   : sqrt<Int8>(a)
evaluation:
+--------+---------+--------------+
|        | a       | Output       |
+--------+---------+--------------+
| Type   | Int8    | Float64      |
| Domain | {1..=3} | {-inf..=NaN} |
| Row 0  | 1       | 1            |
| Row 1  | 2       | 1.4142135623 |
| Row 2  | 3       | 1.7320508075 |
+--------+---------+--------------+
evaluation (internal):
+--------+------------------------------------------+
| Column | Data                                     |
+--------+------------------------------------------+
| a      | Int8([1, 2, 3])                          |
| Output | Float64([1, 1.4142135623, 1.7320508075]) |
+--------+------------------------------------------+


ast            : |/a2
raw expr       : sqrt(a2::UInt8 NULL)
checked expr   : sqrt<UInt8 NULL>(a2)
evaluation:
+--------+------------------+-----------------------+
|        | a2               | Output                |
+--------+------------------+-----------------------+
| Type   | UInt8 NULL       | Float64 NULL          |
| Domain | {1..=2} ∪ {NULL} | {-inf..=NaN} ∪ {NULL} |
| Row 0  | 1                | 1                     |
| Row 1  | 2                | 1.4142135623          |
| Row 2  | NULL             | NULL                  |
+--------+------------------+-----------------------+
evaluation (internal):
+--------+---------------------------------------------------------------------------------------------+
| Column | Data                                                                                        |
+--------+---------------------------------------------------------------------------------------------+
| a2     | NullableColumn { column: UInt8([1, 2, 3]), validity: [0b_____011] }                         |
| Output | NullableColumn { column: Float64([1, 1.4142135623, 1.7320508075]), validity: [0b_____011] } |
+--------+---------------------------------------------------------------------------------------------+


ast            : |/b
raw expr       : sqrt(b::Int16)
checked expr   : sqrt<Int16>(b)
evaluation:
+--------+---------+--------------+
|        | b       | Output       |
+--------+---------+--------------+
| Type   | Int16   | Float64      |
| Domain | {2..=6} | {-inf..=NaN} |
| Row 0  | 2       | 1.4142135623 |
| Row 1  | 4       | 2            |
| Row 2  | 6       | 2.4494897427 |
+--------+---------+--------------+
evaluation (internal):
+--------+------------------------------------------+
| Column | Data                                     |
+--------+------------------------------------------+
| b      | Int16([2, 4, 6])                         |
| Output | Float64([1.4142135623, 2, 2.4494897427]) |
+--------+------------------------------------------+


ast            : |/c
raw expr       : sqrt(c::UInt32)
checked expr   : sqrt<UInt32>(c)
evaluation:
+--------+-----------+--------------+
|        | c         | Output       |
+--------+-----------+--------------+
| Type   | UInt32    | Float64      |
| Domain | {10..=30} | {-inf..=NaN} |
| Row 0  | 10        | 3.1622776601 |
| Row 1  | 20        | 4.4721359549 |
| Row 2  | 30        | 5.477225575  |
+--------+-----------+--------------+
evaluation (internal):
+--------+----------------------------------------------------+
| Column | Data                                               |
+--------+----------------------------------------------------+
| c      | UInt32([10, 20, 30])                               |
| Output | Float64([3.1622776601, 4.4721359549, 5.477225575]) |
+--------+----------------------------------------------------+


ast            : |/d
raw expr       : sqrt(d::Float64)
checked expr   : sqrt<Float64>(d)
evaluation:
+--------+------------+--------------+
|        | d          | Output       |
+--------+------------+--------------+
| Type   | Float64    | Float64      |
| Domain | {-20..=30} | {-inf..=NaN} |
| Row 0  | 10         | 3.1622776601 |
| Row 1  | -20        | NaN          |
| Row 2  | 30         | 5.477225575  |
+--------+------------+--------------+
evaluation (internal):
+--------+-------------------------------------------+
| Column | Data                                      |
+--------+-------------------------------------------+
| d      | Float64([10, -20, 30])                    |
| Output | Float64([3.1622776601, NaN, 5.477225575]) |
+--------+-------------------------------------------+


ast            : |/d2
raw expr       : sqrt(d2::UInt8 NULL)
checked expr   : sqrt<UInt8 NULL>(d2)
evaluation:
+--------+------------------+-----------------------+
|        | d2               | Output                |
+--------+------------------+-----------------------+
| Type   | UInt8 NULL       | Float64 NULL          |
| Domain | {1..=3} ∪ {NULL} | {-inf..=NaN} ∪ {NULL} |
| Row 0  | 1                | 1                     |
| Row 1  | NULL             | NULL                  |
| Row 2  | 3                | 1.7320508075          |
+--------+------------------+-----------------------+
evaluation (internal):
+--------+----------------------------------------------------------------------------------+
| Column | Data                                                                             |
+--------+----------------------------------------------------------------------------------+
| d2     | NullableColumn { column: UInt8([1, 0, 3]), validity: [0b_____101] }              |
| Output | NullableColumn { column: Float64([1, 0, 1.7320508075]), validity: [0b_____101] } |
+--------+----------------------------------------------------------------------------------+


ast            : ||/a
raw expr       : cbrt(a::Int8)
checked expr   : cbrt<Int8>(a)
evaluation:
+--------+---------+--------------+
|        | a       | Output       |
+--------+---------+--------------+
| Type   | Int8    | Float64      |
| Domain | {1..=3} | {-inf..=NaN} |
| Row 0  | 1       | 1            |
| Row 1  | 2       | 1.2599210498 |
| Row 2  | 3       | 1.4422495703 |
+--------+---------+--------------+
evaluation (internal):
+--------+------------------------------------------+
| Column | Data                                     |
+--------+------------------------------------------+
| a      | Int8([1, 2, 3])                          |
| Output | Float64([1, 1.2599210498, 1.4422495703]) |
+--------+------------------------------------------+


ast            : ||/a2
raw expr       : cbrt(a2::UInt8 NULL)
checked expr   : cbrt<UInt8 NULL>(a2)
evaluation:
+--------+------------------+-----------------------+
|        | a2               | Output                |
+--------+------------------+-----------------------+
| Type   | UInt8 NULL       | Float64 NULL          |
| Domain | {1..=2} ∪ {NULL} | {-inf..=NaN} ∪ {NULL} |
| Row 0  | 1                | 1                     |
| Row 1  | 2                | 1.2599210498          |
| Row 2  | NULL             | NULL                  |
+--------+------------------+-----------------------+
evaluation (internal):
+--------+---------------------------------------------------------------------------------------------+
| Column | Data                                                                                        |
+--------+---------------------------------------------------------------------------------------------+
| a2     | NullableColumn { column: UInt8([1, 2, 3]), validity: [0b_____011] }                         |
| Output | NullableColumn { column: Float64([1, 1.2599210498, 1.4422495703]), validity: [0b_____011] } |
+--------+---------------------------------------------------------------------------------------------+


ast            : ||/b
raw expr       : cbrt(b::Int16)
checked expr   : cbrt<Int16>(b)
evaluation:
+--------+---------+--------------+
|        | b       | Output       |
+--------+---------+--------------+
| Type   | Int16   | Float64      |
| Domain | {2..=6} | {-inf..=NaN} |
| Row 0  | 2       | 1.2599210498 |
| Row 1  | 4       | 1.5874010519 |
| Row 2  | 6       | 1.8171205928 |
+--------+---------+--------------+
evaluation (internal):
+--------+-----------------------------------------------------+
| Column | Data                                                |
+--------+-----------------------------------------------------+
| b      | Int16([2, 4, 6])                                    |
| Output | Float64([1.2599210498, 1.5874010519, 1.8171205928]) |
+--------+-----------------------------------------------------+


ast            : ||/c
raw expr       : cbrt(c::UInt32)
checked expr   : cbrt<UInt32>(c)
evaluation:
+--------+-----------+--------------+
|        | c         | Output       |
+--------+-----------+--------------+
| Type   | UInt32    | Float64      |
| Domain | {10..=30} | {-inf..=NaN} |
| Row 0  | 10        | 2.15443469   |
| Row 1  | 20        | 2.7144176165 |
| Row 2  | 30        | 3.1072325059 |
+--------+-----------+--------------+
evaluation (internal):
+--------+---------------------------------------------------+
| Column | Data                                              |
+--------+---------------------------------------------------+
| c      | UInt32([10, 20, 30])                              |
| Output | Float64([2.15443469, 2.7144176165, 3.1072325059]) |
+--------+---------------------------------------------------+


ast            : ||/d
raw expr       : cbrt(d::Float64)
checked expr   : cbrt<Float64>(d)
evaluation:
+--------+------------+---------------+
|        | d          | Output        |
+--------+------------+---------------+
| Type   | Float64    | Float64       |
| Domain | {-20..=30} | {-inf..=NaN}  |
| Row 0  | 10         | 2.15443469    |
| Row 1  | -20        | -2.7144176165 |
| Row 2  | 30         | 3.1072325059  |
+--------+------------+---------------+
evaluation (internal):
+--------+----------------------------------------------------+
| Column | Data                                               |
+--------+----------------------------------------------------+
| d      | Float64([10, -20, 30])                             |
| Output | Float64([2.15443469, -2.7144176165, 3.1072325059]) |
+--------+----------------------------------------------------+


ast            : ||/d2
raw expr       : cbrt(d2::UInt8 NULL)
checked expr   : cbrt<UInt8 NULL>(d2)
evaluation:
+--------+------------------+-----------------------+
|        | d2               | Output                |
+--------+------------------+-----------------------+
| Type   | UInt8 NULL       | Float64 NULL          |
| Domain | {1..=3} ∪ {NULL} | {-inf..=NaN} ∪ {NULL} |
| Row 0  | 1                | 1                     |
| Row 1  | NULL             | NULL                  |
| Row 2  | 3                | 1.4422495703          |
+--------+------------------+-----------------------+
evaluation (internal):
+--------+----------------------------------------------------------------------------------+
| Column | Data                                                                             |
+--------+----------------------------------------------------------------------------------+
| d2     | NullableColumn { column: UInt8([1, 0, 3]), validity: [0b_____101] }              |
| Output | NullableColumn { column: Float64([1, 0, 1.4422495703]), validity: [0b_____101] } |
+--------+----------------------------------------------------------------------------------+


ast            : @ a
raw expr       : abs(a::Int8)
checked expr   : abs<Int64>(to_int64<Int8>(a))
evaluation:
+--------+---------+---------+
|        | a       | Output  |
+--------+---------+---------+
| Type   | Int8    | UInt64  |
| Domain | {1..=3} | {1..=3} |
| Row 0  | 1       | 1       |
| Row 1  | 2       | 2       |
| Row 2  | 3       | 3       |
+--------+---------+---------+
evaluation (internal):
+--------+-------------------+
| Column | Data              |
+--------+-------------------+
| a      | Int8([1, 2, 3])   |
| Output | UInt64([1, 2, 3]) |
+--------+-------------------+


ast            : @ a2
raw expr       : abs(a2::UInt8 NULL)
checked expr   : abs<UInt64 NULL>(CAST(a2 AS UInt64 NULL))
evaluation:
+--------+------------------+------------------+
|        | a2               | Output           |
+--------+------------------+------------------+
| Type   | UInt8 NULL       | UInt64 NULL      |
| Domain | {1..=2} ∪ {NULL} | {1..=2} ∪ {NULL} |
| Row 0  | 1                | 1                |
| Row 1  | 2                | 2                |
| Row 2  | NULL             | NULL             |
+--------+------------------+------------------+
evaluation (internal):
+--------+----------------------------------------------------------------------+
| Column | Data                                                                 |
+--------+----------------------------------------------------------------------+
| a2     | NullableColumn { column: UInt8([1, 2, 3]), validity: [0b_____011] }  |
| Output | NullableColumn { column: UInt64([1, 2, 3]), validity: [0b_____011] } |
+--------+----------------------------------------------------------------------+


ast            : @ b
raw expr       : abs(b::Int16)
checked expr   : abs<Int64>(to_int64<Int16>(b))
evaluation:
+--------+---------+---------+
|        | b       | Output  |
+--------+---------+---------+
| Type   | Int16   | UInt64  |
| Domain | {2..=6} | {2..=6} |
| Row 0  | 2       | 2       |
| Row 1  | 4       | 4       |
| Row 2  | 6       | 6       |
+--------+---------+---------+
evaluation (internal):
+--------+-------------------+
| Column | Data              |
+--------+-------------------+
| b      | Int16([2, 4, 6])  |
| Output | UInt64([2, 4, 6]) |
+--------+-------------------+


ast            : @ c
raw expr       : abs(c::UInt32)
checked expr   : abs<UInt64>(to_uint64<UInt32>(c))
evaluation:
+--------+-----------+-----------+
|        | c         | Output    |
+--------+-----------+-----------+
| Type   | UInt32    | UInt64    |
| Domain | {10..=30} | {10..=30} |
| Row 0  | 10        | 10        |
| Row 1  | 20        | 20        |
| Row 2  | 30        | 30        |
+--------+-----------+-----------+
evaluation (internal):
+--------+----------------------+
| Column | Data                 |
+--------+----------------------+
| c      | UInt32([10, 20, 30]) |
| Output | UInt64([10, 20, 30]) |
+--------+----------------------+


ast            : @ d
raw expr       : abs(d::Float64)
checked expr   : abs<Float64>(d)
evaluation:
+--------+------------+----------+
|        | d          | Output   |
+--------+------------+----------+
| Type   | Float64    | Float64  |
| Domain | {-20..=30} | {0..=30} |
| Row 0  | 10         | 10       |
| Row 1  | -20        | 20       |
| Row 2  | 30         | 30       |
+--------+------------+----------+
evaluation (internal):
+--------+------------------------+
| Column | Data                   |
+--------+------------------------+
| d      | Float64([10, -20, 30]) |
| Output | Float64([10, 20, 30])  |
+--------+------------------------+


ast            : @ d2
raw expr       : abs(d2::UInt8 NULL)
checked expr   : abs<UInt64 NULL>(CAST(d2 AS UInt64 NULL))
evaluation:
+--------+------------------+------------------+
|        | d2               | Output           |
+--------+------------------+------------------+
| Type   | UInt8 NULL       | UInt64 NULL      |
| Domain | {1..=3} ∪ {NULL} | {1..=3} ∪ {NULL} |
| Row 0  | 1                | 1                |
| Row 1  | NULL             | NULL             |
| Row 2  | 3                | 3                |
+--------+------------------+------------------+
evaluation (internal):
+--------+----------------------------------------------------------------------+
| Column | Data                                                                 |
+--------+----------------------------------------------------------------------+
| d2     | NullableColumn { column: UInt8([1, 0, 3]), validity: [0b_____101] }  |
| Output | NullableColumn { column: UInt64([1, 0, 3]), validity: [0b_____101] } |
+--------+----------------------------------------------------------------------+


ast            : a!
raw expr       : factorial(a::Int8)
checked expr   : factorial<Int8>(a)
evaluation:
+--------+---------+---------+
|        | a       | Output  |
+--------+---------+---------+
| Type   | Int8    | Int64   |
| Domain | {1..=3} | Unknown |
| Row 0  | 1       | 1       |
| Row 1  | 2       | 2       |
| Row 2  | 3       | 6       |
+--------+---------+---------+
evaluation (internal):
+--------+------------------+
| Column | Data             |
+--------+------------------+
| a      | Int8([1, 2, 3])  |
| Output | Int64([1, 2, 6]) |
+--------+------------------+


ast            : b!
raw expr       : factorial(b::Int16)
checked expr   : factorial<Int16>(b)
evaluation:
+--------+---------+---------+
|        | b       | Output  |
+--------+---------+---------+
| Type   | Int16   | Int64   |
| Domain | {2..=6} | Unknown |
| Row 0  | 2       | 2       |
| Row 1  | 4       | 24      |
| Row 2  | 6       | 720     |
+--------+---------+---------+
evaluation (internal):
+--------+---------------------+
| Column | Data                |
+--------+---------------------+
| b      | Int16([2, 4, 6])    |
| Output | Int64([2, 24, 720]) |
+--------+---------------------+


ast            : 12!
raw expr       : factorial(12)
checked expr   : factorial<UInt8>(12_u8)
optimized expr : 479001600_i64
output type    : Int64
output domain  : {479001600..=479001600}
output         : 479001600


error: 
  --> SQL:1:3
  |
1 | 30!
  |   ^ factorial number is out of range, max is: 20 while evaluating function `factorial(30)` in expr `factorial(30)`



ast            : a # b
raw expr       : bit_xor(a::Int8, b::Int16)
checked expr   : bit_xor<Int8, Int16>(a, b)
evaluation:
+--------+---------+---------+----------------------------------------------+
|        | a       | b       | Output                                       |
+--------+---------+---------+----------------------------------------------+
| Type   | Int8    | Int16   | Int64                                        |
| Domain | {1..=3} | {2..=6} | {-9223372036854775808..=9223372036854775807} |
| Row 0  | 1       | 2       | 3                                            |
| Row 1  | 2       | 4       | 6                                            |
| Row 2  | 3       | 6       | 5                                            |
+--------+---------+---------+----------------------------------------------+
evaluation (internal):
+--------+------------------+
| Column | Data             |
+--------+------------------+
| a      | Int8([1, 2, 3])  |
| b      | Int16([2, 4, 6]) |
| Output | Int64([3, 6, 5]) |
+--------+------------------+


ast            : a2 # 10
raw expr       : bit_xor(a2::UInt8 NULL, 10)
checked expr   : bit_xor<UInt8 NULL, UInt8 NULL>(a2, CAST(10_u8 AS UInt8 NULL))
optimized expr : bit_xor<UInt8 NULL, UInt8 NULL>(a2, 10_u8)
evaluation:
+--------+------------------+-------------------------------------------------------+
|        | a2               | Output                                                |
+--------+------------------+-------------------------------------------------------+
| Type   | UInt8 NULL       | Int64 NULL                                            |
| Domain | {1..=2} ∪ {NULL} | {-9223372036854775808..=9223372036854775807} ∪ {NULL} |
| Row 0  | 1                | 11                                                    |
| Row 1  | 2                | 8                                                     |
| Row 2  | NULL             | NULL                                                  |
+--------+------------------+-------------------------------------------------------+
evaluation (internal):
+--------+----------------------------------------------------------------------+
| Column | Data                                                                 |
+--------+----------------------------------------------------------------------+
| a2     | NullableColumn { column: UInt8([1, 2, 3]), validity: [0b_____011] }  |
| Output | NullableColumn { column: Int64([11, 8, 9]), validity: [0b_____011] } |
+--------+----------------------------------------------------------------------+


ast            : a2 # c
raw expr       : bit_xor(a2::UInt8 NULL, c::UInt32)
checked expr   : bit_xor<UInt8 NULL, UInt32 NULL>(a2, CAST(c AS UInt32 NULL))
evaluation:
+--------+------------------+-----------+-------------------------------------------------------+
|        | a2               | c         | Output                                                |
+--------+------------------+-----------+-------------------------------------------------------+
| Type   | UInt8 NULL       | UInt32    | Int64 NULL                                            |
| Domain | {1..=2} ∪ {NULL} | {10..=30} | {-9223372036854775808..=9223372036854775807} ∪ {NULL} |
| Row 0  | 1                | 10        | 11                                                    |
| Row 1  | 2                | 20        | 22                                                    |
| Row 2  | NULL             | 30        | NULL                                                  |
+--------+------------------+-----------+-------------------------------------------------------+
evaluation (internal):
+--------+------------------------------------------------------------------------+
| Column | Data                                                                   |
+--------+------------------------------------------------------------------------+
| a2     | NullableColumn { column: UInt8([1, 2, 3]), validity: [0b_____011] }    |
| c      | UInt32([10, 20, 30])                                                   |
| Output | NullableColumn { column: Int64([11, 22, 29]), validity: [0b_____011] } |
+--------+------------------------------------------------------------------------+


ast            : c # b
raw expr       : bit_xor(c::UInt32, b::Int16)
checked expr   : bit_xor<UInt32, Int16>(c, b)
evaluation:
+--------+---------+-----------+----------------------------------------------+
|        | b       | c         | Output                                       |
+--------+---------+-----------+----------------------------------------------+
| Type   | Int16   | UInt32    | Int64                                        |
| Domain | {2..=6} | {10..=30} | {-9223372036854775808..=9223372036854775807} |
| Row 0  | 2       | 10        | 8                                            |
| Row 1  | 4       | 20        | 16                                           |
| Row 2  | 6       | 30        | 24                                           |
+--------+---------+-----------+----------------------------------------------+
evaluation (internal):
+--------+----------------------+
| Column | Data                 |
+--------+----------------------+
| b      | Int16([2, 4, 6])     |
| c      | UInt32([10, 20, 30]) |
| Output | Int64([8, 16, 24])   |
+--------+----------------------+


ast            : a & b
raw expr       : bit_and(a::Int8, b::Int16)
checked expr   : bit_and<Int8, Int16>(a, b)
evaluation:
+--------+---------+---------+----------------------------------------------+
|        | a       | b       | Output                                       |
+--------+---------+---------+----------------------------------------------+
| Type   | Int8    | Int16   | Int64                                        |
| Domain | {1..=3} | {2..=6} | {-9223372036854775808..=9223372036854775807} |
| Row 0  | 1       | 2       | 0                                            |
| Row 1  | 2       | 4       | 0                                            |
| Row 2  | 3       | 6       | 2                                            |
+--------+---------+---------+----------------------------------------------+
evaluation (internal):
+--------+------------------+
| Column | Data             |
+--------+------------------+
| a      | Int8([1, 2, 3])  |
| b      | Int16([2, 4, 6]) |
| Output | Int64([0, 0, 2]) |
+--------+------------------+


ast            : a2 & 10
raw expr       : bit_and(a2::UInt8 NULL, 10)
checked expr   : bit_and<UInt8 NULL, UInt8 NULL>(a2, CAST(10_u8 AS UInt8 NULL))
optimized expr : bit_and<UInt8 NULL, UInt8 NULL>(a2, 10_u8)
evaluation:
+--------+------------------+-------------------------------------------------------+
|        | a2               | Output                                                |
+--------+------------------+-------------------------------------------------------+
| Type   | UInt8 NULL       | Int64 NULL                                            |
| Domain | {1..=2} ∪ {NULL} | {-9223372036854775808..=9223372036854775807} ∪ {NULL} |
| Row 0  | 1                | 0                                                     |
| Row 1  | 2                | 2                                                     |
| Row 2  | NULL             | NULL                                                  |
+--------+------------------+-------------------------------------------------------+
evaluation (internal):
+--------+---------------------------------------------------------------------+
| Column | Data                                                                |
+--------+---------------------------------------------------------------------+
| a2     | NullableColumn { column: UInt8([1, 2, 3]), validity: [0b_____011] } |
| Output | NullableColumn { column: Int64([0, 2, 2]), validity: [0b_____011] } |
+--------+---------------------------------------------------------------------+


ast            : a2 & c
raw expr       : bit_and(a2::UInt8 NULL, c::UInt32)
checked expr   : bit_and<UInt8 NULL, UInt32 NULL>(a2, CAST(c AS UInt32 NULL))
evaluation:
+--------+------------------+-----------+-------------------------------------------------------+
|        | a2               | c         | Output                                                |
+--------+------------------+-----------+-------------------------------------------------------+
| Type   | UInt8 NULL       | UInt32    | Int64 NULL                                            |
| Domain | {1..=2} ∪ {NULL} | {10..=30} | {-9223372036854775808..=9223372036854775807} ∪ {NULL} |
| Row 0  | 1                | 10        | 0                                                     |
| Row 1  | 2                | 20        | 0                                                     |
| Row 2  | NULL             | 30        | NULL                                                  |
+--------+------------------+-----------+-------------------------------------------------------+
evaluation (internal):
+--------+---------------------------------------------------------------------+
| Column | Data                                                                |
+--------+---------------------------------------------------------------------+
| a2     | NullableColumn { column: UInt8([1, 2, 3]), validity: [0b_____011] } |
| c      | UInt32([10, 20, 30])                                                |
| Output | NullableColumn { column: Int64([0, 0, 2]), validity: [0b_____011] } |
+--------+---------------------------------------------------------------------+


ast            : c & b
raw expr       : bit_and(c::UInt32, b::Int16)
checked expr   : bit_and<UInt32, Int16>(c, b)
evaluation:
+--------+---------+-----------+----------------------------------------------+
|        | b       | c         | Output                                       |
+--------+---------+-----------+----------------------------------------------+
| Type   | Int16   | UInt32    | Int64                                        |
| Domain | {2..=6} | {10..=30} | {-9223372036854775808..=9223372036854775807} |
| Row 0  | 2       | 10        | 2                                            |
| Row 1  | 4       | 20        | 4                                            |
| Row 2  | 6       | 30        | 6                                            |
+--------+---------+-----------+----------------------------------------------+
evaluation (internal):
+--------+----------------------+
| Column | Data                 |
+--------+----------------------+
| b      | Int16([2, 4, 6])     |
| c      | UInt32([10, 20, 30]) |
| Output | Int64([2, 4, 6])     |
+--------+----------------------+


ast            : a | b
raw expr       : bit_or(a::Int8, b::Int16)
checked expr   : bit_or<Int8, Int16>(a, b)
evaluation:
+--------+---------+---------+----------------------------------------------+
|        | a       | b       | Output                                       |
+--------+---------+---------+----------------------------------------------+
| Type   | Int8    | Int16   | Int64                                        |
| Domain | {1..=3} | {2..=6} | {-9223372036854775808..=9223372036854775807} |
| Row 0  | 1       | 2       | 3                                            |
| Row 1  | 2       | 4       | 6                                            |
| Row 2  | 3       | 6       | 7                                            |
+--------+---------+---------+----------------------------------------------+
evaluation (internal):
+--------+------------------+
| Column | Data             |
+--------+------------------+
| a      | Int8([1, 2, 3])  |
| b      | Int16([2, 4, 6]) |
| Output | Int64([3, 6, 7]) |
+--------+------------------+


ast            : a2 | 10
raw expr       : bit_or(a2::UInt8 NULL, 10)
checked expr   : bit_or<UInt8 NULL, UInt8 NULL>(a2, CAST(10_u8 AS UInt8 NULL))
optimized expr : bit_or<UInt8 NULL, UInt8 NULL>(a2, 10_u8)
evaluation:
+--------+------------------+-------------------------------------------------------+
|        | a2               | Output                                                |
+--------+------------------+-------------------------------------------------------+
| Type   | UInt8 NULL       | Int64 NULL                                            |
| Domain | {1..=2} ∪ {NULL} | {-9223372036854775808..=9223372036854775807} ∪ {NULL} |
| Row 0  | 1                | 11                                                    |
| Row 1  | 2                | 10                                                    |
| Row 2  | NULL             | NULL                                                  |
+--------+------------------+-------------------------------------------------------+
evaluation (internal):
+--------+------------------------------------------------------------------------+
| Column | Data                                                                   |
+--------+------------------------------------------------------------------------+
| a2     | NullableColumn { column: UInt8([1, 2, 3]), validity: [0b_____011] }    |
| Output | NullableColumn { column: Int64([11, 10, 11]), validity: [0b_____011] } |
+--------+------------------------------------------------------------------------+


ast            : a2 | c
raw expr       : bit_or(a2::UInt8 NULL, c::UInt32)
checked expr   : bit_or<UInt8 NULL, UInt32 NULL>(a2, CAST(c AS UInt32 NULL))
evaluation:
+--------+------------------+-----------+-------------------------------------------------------+
|        | a2               | c         | Output                                                |
+--------+------------------+-----------+-------------------------------------------------------+
| Type   | UInt8 NULL       | UInt32    | Int64 NULL                                            |
| Domain | {1..=2} ∪ {NULL} | {10..=30} | {-9223372036854775808..=9223372036854775807} ∪ {NULL} |
| Row 0  | 1                | 10        | 11                                                    |
| Row 1  | 2                | 20        | 22                                                    |
| Row 2  | NULL             | 30        | NULL                                                  |
+--------+------------------+-----------+-------------------------------------------------------+
evaluation (internal):
+--------+------------------------------------------------------------------------+
| Column | Data                                                                   |
+--------+------------------------------------------------------------------------+
| a2     | NullableColumn { column: UInt8([1, 2, 3]), validity: [0b_____011] }    |
| c      | UInt32([10, 20, 30])                                                   |
| Output | NullableColumn { column: Int64([11, 22, 31]), validity: [0b_____011] } |
+--------+------------------------------------------------------------------------+


ast            : c | b
raw expr       : bit_or(c::UInt32, b::Int16)
checked expr   : bit_or<UInt32, Int16>(c, b)
evaluation:
+--------+---------+-----------+----------------------------------------------+
|        | b       | c         | Output                                       |
+--------+---------+-----------+----------------------------------------------+
| Type   | Int16   | UInt32    | Int64                                        |
| Domain | {2..=6} | {10..=30} | {-9223372036854775808..=9223372036854775807} |
| Row 0  | 2       | 10        | 10                                           |
| Row 1  | 4       | 20        | 20                                           |
| Row 2  | 6       | 30        | 30                                           |
+--------+---------+-----------+----------------------------------------------+
evaluation (internal):
+--------+----------------------+
| Column | Data                 |
+--------+----------------------+
| b      | Int16([2, 4, 6])     |
| c      | UInt32([10, 20, 30]) |
| Output | Int64([10, 20, 30])  |
+--------+----------------------+


ast            : ~a
raw expr       : bit_not(a::Int8)
checked expr   : bit_not<Int8>(a)
evaluation:
+--------+---------+----------------------------------------------+
|        | a       | Output                                       |
+--------+---------+----------------------------------------------+
| Type   | Int8    | Int64                                        |
| Domain | {1..=3} | {-9223372036854775808..=9223372036854775807} |
| Row 0  | 1       | -2                                           |
| Row 1  | 2       | -3                                           |
| Row 2  | 3       | -4                                           |
+--------+---------+----------------------------------------------+
evaluation (internal):
+--------+---------------------+
| Column | Data                |
+--------+---------------------+
| a      | Int8([1, 2, 3])     |
| Output | Int64([-2, -3, -4]) |
+--------+---------------------+


ast            : ~a2
raw expr       : bit_not(a2::UInt8 NULL)
checked expr   : bit_not<UInt8 NULL>(a2)
evaluation:
+--------+------------------+-------------------------------------------------------+
|        | a2               | Output                                                |
+--------+------------------+-------------------------------------------------------+
| Type   | UInt8 NULL       | Int64 NULL                                            |
| Domain | {1..=2} ∪ {NULL} | {-9223372036854775808..=9223372036854775807} ∪ {NULL} |
| Row 0  | 1                | -2                                                    |
| Row 1  | 2                | -3                                                    |
| Row 2  | NULL             | NULL                                                  |
+--------+------------------+-------------------------------------------------------+
evaluation (internal):
+--------+------------------------------------------------------------------------+
| Column | Data                                                                   |
+--------+------------------------------------------------------------------------+
| a2     | NullableColumn { column: UInt8([1, 2, 3]), validity: [0b_____011] }    |
| Output | NullableColumn { column: Int64([-2, -3, -4]), validity: [0b_____011] } |
+--------+------------------------------------------------------------------------+


ast            : ~b
raw expr       : bit_not(b::Int16)
checked expr   : bit_not<Int16>(b)
evaluation:
+--------+---------+----------------------------------------------+
|        | b       | Output                                       |
+--------+---------+----------------------------------------------+
| Type   | Int16   | Int64                                        |
| Domain | {2..=6} | {-9223372036854775808..=9223372036854775807} |
| Row 0  | 2       | -3                                           |
| Row 1  | 4       | -5                                           |
| Row 2  | 6       | -7                                           |
+--------+---------+----------------------------------------------+
evaluation (internal):
+--------+---------------------+
| Column | Data                |
+--------+---------------------+
| b      | Int16([2, 4, 6])    |
| Output | Int64([-3, -5, -7]) |
+--------+---------------------+


ast            : ~c
raw expr       : bit_not(c::UInt32)
checked expr   : bit_not<UInt32>(c)
evaluation:
+--------+-----------+----------------------------------------------+
|        | c         | Output                                       |
+--------+-----------+----------------------------------------------+
| Type   | UInt32    | Int64                                        |
| Domain | {10..=30} | {-9223372036854775808..=9223372036854775807} |
| Row 0  | 10        | -11                                          |
| Row 1  | 20        | -21                                          |
| Row 2  | 30        | -31                                          |
+--------+-----------+----------------------------------------------+
evaluation (internal):
+--------+------------------------+
| Column | Data                   |
+--------+------------------------+
| c      | UInt32([10, 20, 30])   |
| Output | Int64([-11, -21, -31]) |
+--------+------------------------+


ast            : a << 4
raw expr       : bit_shift_left(a::Int8, 4)
checked expr   : bit_shift_left<Int8, UInt8>(a, 4_u8)
evaluation:
+--------+---------+----------------------------------------------+
|        | a       | Output                                       |
+--------+---------+----------------------------------------------+
| Type   | Int8    | Int64                                        |
| Domain | {1..=3} | {-9223372036854775808..=9223372036854775807} |
| Row 0  | 1       | 16                                           |
| Row 1  | 2       | 32                                           |
| Row 2  | 3       | 48                                           |
+--------+---------+----------------------------------------------+
evaluation (internal):
+--------+---------------------+
| Column | Data                |
+--------+---------------------+
| a      | Int8([1, 2, 3])     |
| Output | Int64([16, 32, 48]) |
+--------+---------------------+


ast            : a2 << 2
raw expr       : bit_shift_left(a2::UInt8 NULL, 2)
checked expr   : bit_shift_left<UInt8 NULL, UInt8 NULL>(a2, CAST(2_u8 AS UInt8 NULL))
optimized expr : bit_shift_left<UInt8 NULL, UInt8 NULL>(a2, 2_u8)
evaluation:
+--------+------------------+-------------------------------------------------------+
|        | a2               | Output                                                |
+--------+------------------+-------------------------------------------------------+
| Type   | UInt8 NULL       | Int64 NULL                                            |
| Domain | {1..=2} ∪ {NULL} | {-9223372036854775808..=9223372036854775807} ∪ {NULL} |
| Row 0  | 1                | 4                                                     |
| Row 1  | 2                | 8                                                     |
| Row 2  | NULL             | NULL                                                  |
+--------+------------------+-------------------------------------------------------+
evaluation (internal):
+--------+----------------------------------------------------------------------+
| Column | Data                                                                 |
+--------+----------------------------------------------------------------------+
| a2     | NullableColumn { column: UInt8([1, 2, 3]), validity: [0b_____011] }  |
| Output | NullableColumn { column: Int64([4, 8, 12]), validity: [0b_____011] } |
+--------+----------------------------------------------------------------------+


ast            : a2 << 4
raw expr       : bit_shift_left(a2::UInt8 NULL, 4)
checked expr   : bit_shift_left<UInt8 NULL, UInt8 NULL>(a2, CAST(4_u8 AS UInt8 NULL))
optimized expr : bit_shift_left<UInt8 NULL, UInt8 NULL>(a2, 4_u8)
evaluation:
+--------+------------------+-------------------------------------------------------+
|        | a2               | Output                                                |
+--------+------------------+-------------------------------------------------------+
| Type   | UInt8 NULL       | Int64 NULL                                            |
| Domain | {1..=2} ∪ {NULL} | {-9223372036854775808..=9223372036854775807} ∪ {NULL} |
| Row 0  | 1                | 16                                                    |
| Row 1  | 2                | 32                                                    |
| Row 2  | NULL             | NULL                                                  |
+--------+------------------+-------------------------------------------------------+
evaluation (internal):
+--------+------------------------------------------------------------------------+
| Column | Data                                                                   |
+--------+------------------------------------------------------------------------+
| a2     | NullableColumn { column: UInt8([1, 2, 3]), validity: [0b_____011] }    |
| Output | NullableColumn { column: Int64([16, 32, 48]), validity: [0b_____011] } |
+--------+------------------------------------------------------------------------+


ast            : c << 2
raw expr       : bit_shift_left(c::UInt32, 2)
checked expr   : bit_shift_left<UInt32, UInt8>(c, 2_u8)
evaluation:
+--------+-----------+----------------------------------------------+
|        | c         | Output                                       |
+--------+-----------+----------------------------------------------+
| Type   | UInt32    | Int64                                        |
| Domain | {10..=30} | {-9223372036854775808..=9223372036854775807} |
| Row 0  | 10        | 40                                           |
| Row 1  | 20        | 80                                           |
| Row 2  | 30        | 120                                          |
+--------+-----------+----------------------------------------------+
evaluation (internal):
+--------+----------------------+
| Column | Data                 |
+--------+----------------------+
| c      | UInt32([10, 20, 30]) |
| Output | Int64([40, 80, 120]) |
+--------+----------------------+


ast            : a >> 1
raw expr       : bit_shift_right(a::Int8, 1)
checked expr   : bit_shift_right<Int8, UInt8>(a, 1_u8)
evaluation:
+--------+---------+----------------------------------------------+
|        | a       | Output                                       |
+--------+---------+----------------------------------------------+
| Type   | Int8    | Int64                                        |
| Domain | {1..=3} | {-9223372036854775808..=9223372036854775807} |
| Row 0  | 1       | 0                                            |
| Row 1  | 2       | 1                                            |
| Row 2  | 3       | 1                                            |
+--------+---------+----------------------------------------------+
evaluation (internal):
+--------+------------------+
| Column | Data             |
+--------+------------------+
| a      | Int8([1, 2, 3])  |
| Output | Int64([0, 1, 1]) |
+--------+------------------+


ast            : a2 >> 1
raw expr       : bit_shift_right(a2::UInt8 NULL, 1)
checked expr   : bit_shift_right<UInt8 NULL, UInt8 NULL>(a2, CAST(1_u8 AS UInt8 NULL))
optimized expr : bit_shift_right<UInt8 NULL, UInt8 NULL>(a2, 1_u8)
evaluation:
+--------+------------------+-------------------------------------------------------+
|        | a2               | Output                                                |
+--------+------------------+-------------------------------------------------------+
| Type   | UInt8 NULL       | Int64 NULL                                            |
| Domain | {1..=2} ∪ {NULL} | {-9223372036854775808..=9223372036854775807} ∪ {NULL} |
| Row 0  | 1                | 0                                                     |
| Row 1  | 2                | 1                                                     |
| Row 2  | NULL             | NULL                                                  |
+--------+------------------+-------------------------------------------------------+
evaluation (internal):
+--------+---------------------------------------------------------------------+
| Column | Data                                                                |
+--------+---------------------------------------------------------------------+
| a2     | NullableColumn { column: UInt8([1, 2, 3]), validity: [0b_____011] } |
| Output | NullableColumn { column: Int64([0, 1, 1]), validity: [0b_____011] } |
+--------+---------------------------------------------------------------------+


ast            : a2 >> 2
raw expr       : bit_shift_right(a2::UInt8 NULL, 2)
checked expr   : bit_shift_right<UInt8 NULL, UInt8 NULL>(a2, CAST(2_u8 AS UInt8 NULL))
optimized expr : bit_shift_right<UInt8 NULL, UInt8 NULL>(a2, 2_u8)
evaluation:
+--------+------------------+-------------------------------------------------------+
|        | a2               | Output                                                |
+--------+------------------+-------------------------------------------------------+
| Type   | UInt8 NULL       | Int64 NULL                                            |
| Domain | {1..=2} ∪ {NULL} | {-9223372036854775808..=9223372036854775807} ∪ {NULL} |
| Row 0  | 1                | 0                                                     |
| Row 1  | 2                | 0                                                     |
| Row 2  | NULL             | NULL                                                  |
+--------+------------------+-------------------------------------------------------+
evaluation (internal):
+--------+---------------------------------------------------------------------+
| Column | Data                                                                |
+--------+---------------------------------------------------------------------+
| a2     | NullableColumn { column: UInt8([1, 2, 3]), validity: [0b_____011] } |
| Output | NullableColumn { column: Int64([0, 0, 0]), validity: [0b_____011] } |
+--------+---------------------------------------------------------------------+


ast            : c >> 2
raw expr       : bit_shift_right(c::UInt32, 2)
checked expr   : bit_shift_right<UInt32, UInt8>(c, 2_u8)
evaluation:
+--------+-----------+----------------------------------------------+
|        | c         | Output                                       |
+--------+-----------+----------------------------------------------+
| Type   | UInt32    | Int64                                        |
| Domain | {10..=30} | {-9223372036854775808..=9223372036854775807} |
| Row 0  | 10        | 2                                            |
| Row 1  | 20        | 5                                            |
| Row 2  | 30        | 7                                            |
+--------+-----------+----------------------------------------------+
evaluation (internal):
+--------+----------------------+
| Column | Data                 |
+--------+----------------------+
| c      | UInt32([10, 20, 30]) |
| Output | Int64([2, 5, 7])     |
+--------+----------------------+


