ast            : length(to_binary('latin'))
raw expr       : length(to_binary('latin'))
checked expr   : length<Binary>(CAST<String>("latin" AS Binary))
optimized expr : 5_u64
output type    : UInt64
output domain  : {5..=5}
output         : 5


ast            : length(to_binary(NULL))
raw expr       : length(to_binary(NULL))
checked expr   : length<Binary NULL>(CAST<Variant NULL>(CAST<NULL>(NULL AS Variant NULL) AS Binary NULL))
optimized expr : NULL
output type    : UInt64 NULL
output domain  : {NULL}
output         : NULL


ast            : length(a)
raw expr       : length(a::Binary)
checked expr   : length<Binary>(a)
evaluation:
+--------+--------------------------------------+----------------------------+
|        | a                                    | Output                     |
+--------+--------------------------------------+----------------------------+
| Type   | Binary                               | UInt64                     |
| Domain | Undefined                            | {0..=18446744073709551615} |
| Row 0  | 6C6174696E                           | 5                          |
| Row 1  | D0BAD0B8D180D0B8D0BBD0BBD0B8D186D0B0 | 18                         |
| Row 2  | DEADBEEF                             | 4                          |
+--------+--------------------------------------+----------------------------+
evaluation (internal):
+--------+----------------------------------------------------------------------------+
| Column | Data                                                                       |
+--------+----------------------------------------------------------------------------+
| a      | Binary([0x6c6174696e, 0xd0bad0b8d180d0b8d0bbd0bbd0b8d186d0b0, 0xdeadbeef]) |
| Output | UInt64([5, 18, 4])                                                         |
+--------+----------------------------------------------------------------------------+


ast            : to_base64('Abc')
raw expr       : to_base64('Abc')
checked expr   : to_base64<Binary>(CAST<String>("Abc" AS Binary))
optimized expr : "QWJj"
output type    : String
output domain  : {"QWJj"..="QWJj"}
output         : 'QWJj'


ast            : to_base64('123')
raw expr       : to_base64('123')
checked expr   : to_base64<Binary>(CAST<String>("123" AS Binary))
optimized expr : "MTIz"
output type    : String
output domain  : {"MTIz"..="MTIz"}
output         : 'MTIz'


ast            : to_base64(Null)
raw expr       : to_base64(NULL)
checked expr   : to_base64<Binary NULL>(CAST<NULL>(NULL AS Binary NULL))
optimized expr : NULL
output type    : String NULL
output domain  : {NULL}
output         : NULL


ast            : to_base64(a)
raw expr       : to_base64(a::String)
checked expr   : to_base64<Binary>(CAST<String>(a AS Binary))
evaluation:
+--------+-----------------+--------+
|        | a               | Output |
+--------+-----------------+--------+
| Type   | String          | String |
| Domain | {"123"..="Abc"} | {""..} |
| Row 0  | 'Abc'           | 'QWJj' |
| Row 1  | '123'           | 'MTIz' |
+--------+-----------------+--------+
evaluation (internal):
+--------+--------------------------+
| Column | Data                     |
+--------+--------------------------+
| a      | StringColumn[Abc, 123]   |
| Output | StringColumn[QWJj, MTIz] |
+--------+--------------------------+


ast            : to_hex(to_binary('abc'))
raw expr       : to_hex(to_binary('abc'))
checked expr   : to_hex<Binary>(CAST<String>("abc" AS Binary))
optimized expr : "616263"
output type    : String
output domain  : {"616263"..="616263"}
output         : '616263'


ast            : to_hex(to_binary(a))
raw expr       : to_hex(to_binary(a::String))
checked expr   : to_hex<Binary>(CAST<String>(a AS Binary))
evaluation:
+--------+-----------------+--------------------+
|        | a               | Output             |
+--------+-----------------+--------------------+
| Type   | String          | String             |
| Domain | {"abc"..="def"} | {""..}             |
| Row 0  | 'abc'           | '616263'           |
| Row 1  | 'def'           | '646566'           |
| Row 2  | 'databend'      | '6461746162656e64' |
+--------+-----------------+--------------------+
evaluation (internal):
+--------+------------------------------------------------+
| Column | Data                                           |
+--------+------------------------------------------------+
| a      | StringColumn[abc, def, databend]               |
| Output | StringColumn[616263, 646566, 6461746162656e64] |
+--------+------------------------------------------------+


ast            : from_base64('QWJj')::String
raw expr       : CAST(from_base64('QWJj') AS String)
checked expr   : CAST<Binary>(from_base64<String>("QWJj") AS String)
optimized expr : "Abc"
output type    : String
output domain  : {"Abc"..="Abc"}
output         : 'Abc'


ast            : from_base64('MTIz')::String
raw expr       : CAST(from_base64('MTIz') AS String)
checked expr   : CAST<Binary>(from_base64<String>("MTIz") AS String)
optimized expr : "123"
output type    : String
output domain  : {"123"..="123"}
output         : '123'


ast            : from_base64(a)::String
raw expr       : CAST(from_base64(a::String) AS String)
checked expr   : CAST<Binary>(from_base64<String>(a) AS String)
evaluation:
+--------+-------------------+---------+
|        | a                 | Output  |
+--------+-------------------+---------+
| Type   | String            | String  |
| Domain | {"MTIz"..="QWJj"} | Unknown |
| Row 0  | 'QWJj'            | 'Abc'   |
| Row 1  | 'MTIz'            | '123'   |
+--------+-------------------+---------+
evaluation (internal):
+--------+--------------------------+
| Column | Data                     |
+--------+--------------------------+
| a      | StringColumn[QWJj, MTIz] |
| Output | StringColumn[Abc, 123]   |
+--------+--------------------------+


error: 
  --> SQL:1:1
  |
1 | from_base64('!@#')
  | ^^^^^^^^^^^^^^^^^^ Invalid symbol 33, offset 0. while evaluating function `from_base64('!@#')` in expr `from_base64('!@#')`



ast            : from_hex('6461746162656e64')::String
raw expr       : CAST(from_hex('6461746162656e64') AS String)
checked expr   : CAST<Binary>(from_hex<String>("6461746162656e64") AS String)
optimized expr : "databend"
output type    : String
output domain  : {"databend"..="databend"}
output         : 'databend'


error: 
  --> SQL:1:1
  |
1 | from_hex('6461746162656e6')
  | ^^^^^^^^^^^^^^^^^^^^^^^^^^^ Odd number of digits while evaluating function `from_hex('6461746162656e6')` in expr `from_hex('6461746162656e6')`



ast            : from_hex(s)::String
raw expr       : CAST(from_hex(s::String) AS String)
checked expr   : CAST<Binary>(from_hex<String>(s) AS String)
evaluation:
+--------+-----------------------+------------+
|        | s                     | Output     |
+--------+-----------------------+------------+
| Type   | String                | String     |
| Domain | {"616263"..="646566"} | Unknown    |
| Row 0  | '616263'              | 'abc'      |
| Row 1  | '646566'              | 'def'      |
| Row 2  | '6461746162656e64'    | 'databend' |
+--------+-----------------------+------------+
evaluation (internal):
+--------+------------------------------------------------+
| Column | Data                                           |
+--------+------------------------------------------------+
| s      | StringColumn[616263, 646566, 6461746162656e64] |
| Output | StringColumn[abc, def, databend]               |
+--------+------------------------------------------------+


ast            : to_binary(parse_json('{"k1":"val","k2":100}'))
raw expr       : to_binary(parse_json('{"k1":"val","k2":100}'))
checked expr   : CAST<Variant>(CAST<String>("{\"k1\":\"val\",\"k2\":100}" AS Variant) AS Binary)
optimized expr : 40000002100000021000000210000003200000026B316B3276616C5064
output type    : Binary
output domain  : Undefined
output         : 40000002100000021000000210000003200000026B316B3276616C5064


ast            : to_binary(parse_json('10'))
raw expr       : to_binary(parse_json('10'))
checked expr   : CAST<Variant>(CAST<String>("10" AS Variant) AS Binary)
optimized expr : 2000000020000002500A
output type    : Binary
output domain  : Undefined
output         : 2000000020000002500A


ast            : to_binary(parse_json('123456'))
raw expr       : to_binary(parse_json('123456'))
checked expr   : CAST<Variant>(CAST<String>("123456" AS Variant) AS Binary)
optimized expr : 2000000020000005500001E240
output type    : Binary
output domain  : Undefined
output         : 2000000020000005500001E240


ast            : to_binary(parse_json('"abcd"'))
raw expr       : to_binary(parse_json('"abcd"'))
checked expr   : CAST<Variant>(CAST<String>("\"abcd\"" AS Variant) AS Binary)
optimized expr : 200000001000000461626364
output type    : Binary
output domain  : Undefined
output         : 200000001000000461626364


ast            : to_binary(to_bitmap('1,2,3'))
raw expr       : to_binary(to_bitmap('1,2,3'))
checked expr   : CAST<Bitmap>(CAST<String>("1,2,3" AS Bitmap) AS Binary)
optimized expr : 0100000000000000000000003A300000010000000000020010000000010002000300
output type    : Binary
output domain  : Undefined
output         : 0100000000000000000000003A300000010000000000020010000000010002000300


ast            : to_binary(to_bitmap('100,25,50,700'))
raw expr       : to_binary(to_bitmap('100,25,50,700'))
checked expr   : CAST<Bitmap>(CAST<String>("100,25,50,700" AS Bitmap) AS Binary)
optimized expr : 0100000000000000000000003A300000010000000000030010000000190032006400BC02
output type    : Binary
output domain  : Undefined
output         : 0100000000000000000000003A300000010000000000030010000000190032006400BC02


ast            : to_binary(st_geometryfromwkt('SRID=4326;POINT(1.0 2.0)'))
raw expr       : to_binary(st_geometryfromwkt('SRID=4326;POINT(1.0 2.0)'))
checked expr   : CAST<Geometry>(st_geometryfromwkt<String>("SRID=4326;POINT(1.0 2.0)") AS Binary)
optimized expr : 0101000020E6100000000000000000F03F0000000000000040
output type    : Binary
output domain  : Undefined
output         : 0101000020E6100000000000000000F03F0000000000000040


ast            : to_binary(st_geometryfromwkb(unhex('0101000020797f000066666666a9cb17411f85ebc19e325641')))
raw expr       : to_binary(st_geometryfromwkb(unhex('0101000020797f000066666666a9cb17411f85ebc19e325641')))
checked expr   : CAST<Geometry>(st_geometryfromwkb<Binary>(from_hex<String>("0101000020797f000066666666a9cb17411f85ebc19e325641")) AS Binary)
optimized expr : 0101000020797F000066666666A9CB17411F85EBC19E325641
output type    : Binary
output domain  : Undefined
output         : 0101000020797F000066666666A9CB17411F85EBC19E325641


ast            : to_binary(st_geographyfromewkt('SRID=4326;POINT(-122.35 37.55)'))
raw expr       : to_binary(st_geographyfromewkt('SRID=4326;POINT(-122.35 37.55)'))
checked expr   : CAST<Geography>(st_geographyfromewkt<String>("SRID=4326;POINT(-122.35 37.55)") AS Binary)
optimized expr : 0101000020E61000006666666666965EC06666666666C64240
output type    : Binary
output domain  : Undefined
output         : 0101000020E61000006666666666965EC06666666666C64240


ast            : TRY_from_base64('QWJj')::String
raw expr       : CAST(TRY_from_base64('QWJj') AS String)
checked expr   : CAST<Binary NULL>(try_from_base64<String>("QWJj") AS String)
optimized expr : "Abc"
output type    : String
output domain  : {"Abc"..="Abc"}
output         : 'Abc'


ast            : TRY_from_base64('MTIz')::String
raw expr       : CAST(TRY_from_base64('MTIz') AS String)
checked expr   : CAST<Binary NULL>(try_from_base64<String>("MTIz") AS String)
optimized expr : "123"
output type    : String
output domain  : {"123"..="123"}
output         : '123'


ast            : TRY_from_base64(a)::String
raw expr       : CAST(TRY_from_base64(a::String) AS String)
checked expr   : CAST<Binary NULL>(try_from_base64<String>(a) AS String)
evaluation:
+--------+-------------------+---------+
|        | a                 | Output  |
+--------+-------------------+---------+
| Type   | String            | String  |
| Domain | {"MTIz"..="QWJj"} | Unknown |
| Row 0  | 'QWJj'            | 'Abc'   |
| Row 1  | 'MTIz'            | '123'   |
+--------+-------------------+---------+
evaluation (internal):
+--------+--------------------------+
| Column | Data                     |
+--------+--------------------------+
| a      | StringColumn[QWJj, MTIz] |
| Output | StringColumn[Abc, 123]   |
+--------+--------------------------+


ast            : TRY_from_base64('!@#')
raw expr       : TRY_from_base64('!@#')
checked expr   : try_from_base64<String>("!@#")
optimized expr : NULL
output type    : Binary NULL
output domain  : {NULL}
output         : NULL


ast            : TRY_from_hex('6461746162656e64')::String
raw expr       : CAST(TRY_from_hex('6461746162656e64') AS String)
checked expr   : CAST<Binary NULL>(try_from_hex<String>("6461746162656e64") AS String)
optimized expr : "databend"
output type    : String
output domain  : {"databend"..="databend"}
output         : 'databend'


ast            : TRY_from_hex('6461746162656e6')
raw expr       : TRY_from_hex('6461746162656e6')
checked expr   : try_from_hex<String>("6461746162656e6")
optimized expr : NULL
output type    : Binary NULL
output domain  : {NULL}
output         : NULL


ast            : TRY_from_hex(s)::String
raw expr       : CAST(TRY_from_hex(s::String) AS String)
checked expr   : CAST<Binary NULL>(try_from_hex<String>(s) AS String)
evaluation:
+--------+-----------------------+------------+
|        | s                     | Output     |
+--------+-----------------------+------------+
| Type   | String                | String     |
| Domain | {"616263"..="646566"} | Unknown    |
| Row 0  | '616263'              | 'abc'      |
| Row 1  | '646566'              | 'def'      |
| Row 2  | '6461746162656e64'    | 'databend' |
+--------+-----------------------+------------+
evaluation (internal):
+--------+------------------------------------------------+
| Column | Data                                           |
+--------+------------------------------------------------+
| s      | StringColumn[616263, 646566, 6461746162656e64] |
| Output | StringColumn[abc, def, databend]               |
+--------+------------------------------------------------+


ast            : TRY_to_binary(parse_json('{"k1":"val","k2":100}'))
raw expr       : TRY_to_binary(parse_json('{"k1":"val","k2":100}'))
checked expr   : TRY_CAST<Variant>(CAST<String>("{\"k1\":\"val\",\"k2\":100}" AS Variant) AS Binary NULL)
optimized expr : 40000002100000021000000210000003200000026B316B3276616C5064
output type    : Binary NULL
output domain  : Undefined
output         : 40000002100000021000000210000003200000026B316B3276616C5064


ast            : TRY_to_binary(parse_json('10'))
raw expr       : TRY_to_binary(parse_json('10'))
checked expr   : TRY_CAST<Variant>(CAST<String>("10" AS Variant) AS Binary NULL)
optimized expr : 2000000020000002500A
output type    : Binary NULL
output domain  : Undefined
output         : 2000000020000002500A


ast            : TRY_to_binary(parse_json('123456'))
raw expr       : TRY_to_binary(parse_json('123456'))
checked expr   : TRY_CAST<Variant>(CAST<String>("123456" AS Variant) AS Binary NULL)
optimized expr : 2000000020000005500001E240
output type    : Binary NULL
output domain  : Undefined
output         : 2000000020000005500001E240


ast            : TRY_to_binary(parse_json('"abcd"'))
raw expr       : TRY_to_binary(parse_json('"abcd"'))
checked expr   : TRY_CAST<Variant>(CAST<String>("\"abcd\"" AS Variant) AS Binary NULL)
optimized expr : 200000001000000461626364
output type    : Binary NULL
output domain  : Undefined
output         : 200000001000000461626364


ast            : TRY_to_binary(to_bitmap('1,2,3'))
raw expr       : TRY_to_binary(to_bitmap('1,2,3'))
checked expr   : TRY_CAST<Bitmap>(CAST<String>("1,2,3" AS Bitmap) AS Binary NULL)
optimized expr : 0100000000000000000000003A300000010000000000020010000000010002000300
output type    : Binary NULL
output domain  : Undefined
output         : 0100000000000000000000003A300000010000000000020010000000010002000300


ast            : TRY_to_binary(to_bitmap('100,25,50,700'))
raw expr       : TRY_to_binary(to_bitmap('100,25,50,700'))
checked expr   : TRY_CAST<Bitmap>(CAST<String>("100,25,50,700" AS Bitmap) AS Binary NULL)
optimized expr : 0100000000000000000000003A300000010000000000030010000000190032006400BC02
output type    : Binary NULL
output domain  : Undefined
output         : 0100000000000000000000003A300000010000000000030010000000190032006400BC02


ast            : TRY_to_binary(st_geometryfromwkt('SRID=4326;POINT(1.0 2.0)'))
raw expr       : TRY_to_binary(st_geometryfromwkt('SRID=4326;POINT(1.0 2.0)'))
checked expr   : TRY_CAST<Geometry>(st_geometryfromwkt<String>("SRID=4326;POINT(1.0 2.0)") AS Binary NULL)
optimized expr : 0101000020E6100000000000000000F03F0000000000000040
output type    : Binary NULL
output domain  : Undefined
output         : 0101000020E6100000000000000000F03F0000000000000040


ast            : TRY_to_binary(st_geometryfromwkb(unhex('0101000020797f000066666666a9cb17411f85ebc19e325641')))
raw expr       : TRY_to_binary(st_geometryfromwkb(unhex('0101000020797f000066666666a9cb17411f85ebc19e325641')))
checked expr   : TRY_CAST<Geometry>(st_geometryfromwkb<Binary>(from_hex<String>("0101000020797f000066666666a9cb17411f85ebc19e325641")) AS Binary NULL)
optimized expr : 0101000020797F000066666666A9CB17411F85EBC19E325641
output type    : Binary NULL
output domain  : Undefined
output         : 0101000020797F000066666666A9CB17411F85EBC19E325641


ast            : TRY_to_binary(st_geographyfromewkt('SRID=4326;POINT(-122.35 37.55)'))
raw expr       : TRY_to_binary(st_geographyfromewkt('SRID=4326;POINT(-122.35 37.55)'))
checked expr   : TRY_CAST<Geography>(st_geographyfromewkt<String>("SRID=4326;POINT(-122.35 37.55)") AS Binary NULL)
optimized expr : 0101000020E61000006666666666965EC06666666666C64240
output type    : Binary NULL
output domain  : Undefined
output         : 0101000020E61000006666666666965EC06666666666C64240


