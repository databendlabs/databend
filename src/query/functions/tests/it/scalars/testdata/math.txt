ast            : abs(1)
raw expr       : abs(1)
checked expr   : abs<UInt64>(CAST<UInt8>(1_u8 AS UInt64))
optimized expr : 1_u64
output type    : UInt64
output domain  : {1..=1}
output         : 1


ast            : abs(-2.3434)
raw expr       : abs(minus(2.3434))
checked expr   : abs<Decimal(5, 4)>(minus<Decimal(5, 4)>(2.3434_d128(5,4)))
optimized expr : 2.3434_d128(5,4)
output type    : Decimal(5, 4)
output domain  : {2.3434..=2.3434}
output         : 2.3434


ast            : abs(-1)
raw expr       : abs(minus(1))
checked expr   : abs<Int64>(CAST<Int16>(minus<UInt8>(1_u8) AS Int64))
optimized expr : 1_u64
output type    : UInt64
output domain  : {1..=1}
output         : 1


ast            : abs(null)
raw expr       : abs(NULL)
checked expr   : abs<UInt64 NULL>(CAST<NULL>(NULL AS UInt64 NULL))
optimized expr : NULL
output type    : UInt64 NULL
output domain  : {NULL}
output         : NULL


ast            : abs(a)
raw expr       : abs(a::Int64)
checked expr   : abs<Int64>(a)
evaluation:
+--------+--------------+------------+
|        | a            | Output     |
+--------+--------------+------------+
| Type   | Int64        | UInt64     |
| Domain | {-30..=1024} | {0..=1024} |
| Row 0  | 1            | 1          |
| Row 1  | -30          | 30         |
| Row 2  | 1024         | 1024       |
+--------+--------------+------------+
evaluation (internal):
+--------+-----------------------+
| Column | Data                  |
+--------+-----------------------+
| a      | Int64([1, -30, 1024]) |
| Output | UInt64([1, 30, 1024]) |
+--------+-----------------------+


ast            : sign(1)
raw expr       : sign(1)
checked expr   : sign<Float64>(CAST<UInt8>(1_u8 AS Float64))
optimized expr : 1_i8
output type    : Int8
output domain  : {1..=1}
output         : 1


ast            : sign(-1)
raw expr       : sign(minus(1))
checked expr   : sign<Float64>(CAST<Int16>(minus<UInt8>(1_u8) AS Float64))
optimized expr : -1_i8
output type    : Int8
output domain  : {-1..=-1}
output         : -1


ast            : sign(null)
raw expr       : sign(NULL)
checked expr   : sign<Float64 NULL>(CAST<NULL>(NULL AS Float64 NULL))
optimized expr : NULL
output type    : Int8 NULL
output domain  : {NULL}
output         : NULL


ast            : sign(a)
raw expr       : sign(a::Int64)
checked expr   : sign<Float64>(CAST<Int64>(a AS Float64))
evaluation:
+--------+--------------+----------+
|        | a            | Output   |
+--------+--------------+----------+
| Type   | Int64        | Int8     |
| Domain | {-30..=1024} | {-1..=1} |
| Row 0  | 1            | 1        |
| Row 1  | -30          | -1       |
| Row 2  | 1024         | 1        |
+--------+--------------+----------+
evaluation (internal):
+--------+-----------------------+
| Column | Data                  |
+--------+-----------------------+
| a      | Int64([1, -30, 1024]) |
| Output | Int8([1, -1, 1])      |
+--------+-----------------------+


ast            : sin(1)
raw expr       : sin(1)
checked expr   : sin<Float64>(CAST<UInt8>(1_u8 AS Float64))
optimized expr : 0.8414709848_f64
output type    : Float64
output domain  : {0.8414709848..=0.8414709848}
output         : 0.8414709848


ast            : cos(1)
raw expr       : cos(1)
checked expr   : cos<Float64>(CAST<UInt8>(1_u8 AS Float64))
optimized expr : 0.5403023058_f64
output type    : Float64
output domain  : {0.5403023058..=0.5403023058}
output         : 0.5403023058


ast            : tan(1)
raw expr       : tan(1)
checked expr   : tan<Float64>(CAST<UInt8>(1_u8 AS Float64))
optimized expr : 1.5574077246_f64
output type    : Float64
output domain  : {1.5574077246..=1.5574077246}
output         : 1.5574077246


ast            : atan(0.5)
raw expr       : atan(0.5)
checked expr   : atan<Float64>(CAST<Decimal(1, 1)>(0.5_d128(1,1) AS Float64))
optimized expr : 0.463647609_f64
output type    : Float64
output domain  : {0.463647609..=0.463647609}
output         : 0.463647609


ast            : cot(-1.0)
raw expr       : cot(minus(1.0))
checked expr   : cot<Float64>(CAST<Decimal(2, 1)>(minus<Decimal(2, 1)>(1.0_d128(2,1)) AS Float64))
optimized expr : -0.6420926159_f64
output type    : Float64
output domain  : {-0.6420926159..=-0.6420926159}
output         : -0.6420926159


ast            : asin(1)
raw expr       : asin(1)
checked expr   : asin<Float64>(CAST<UInt8>(1_u8 AS Float64))
optimized expr : 1.5707963267_f64
output type    : Float64
output domain  : {1.5707963267..=1.5707963267}
output         : 1.5707963267


ast            : acos(0)
raw expr       : acos(0)
checked expr   : acos<Float64>(CAST<UInt8>(0_u8 AS Float64))
optimized expr : 1.5707963267_f64
output type    : Float64
output domain  : {1.5707963267..=1.5707963267}
output         : 1.5707963267


ast            : atan(null)
raw expr       : atan(NULL)
checked expr   : atan<Float64 NULL>(CAST<NULL>(NULL AS Float64 NULL))
optimized expr : NULL
output type    : Float64 NULL
output domain  : {NULL}
output         : NULL


ast            : atan2(a, 4)
raw expr       : atan2(a::Int64, 4)
checked expr   : atan2<Float64, Float64>(CAST<Int64>(a AS Float64), CAST<UInt8>(4_u8 AS Float64))
optimized expr : atan2<Float64, Float64>(CAST<Int64>(a AS Float64), 4_f64)
evaluation:
+--------+-------------+--------------------------------+
|        | a           | Output                         |
+--------+-------------+--------------------------------+
| Type   | Int64       | Float64                        |
| Domain | {-1..=1024} | {-3.1415926535..=3.1415926535} |
| Row 0  | 1           | 0.2449786631                   |
| Row 1  | -1          | -0.2449786631                  |
| Row 2  | 1024        | 1.5668900966                   |
+--------+-------------+--------------------------------+
evaluation (internal):
+--------+------------------------------------------------------+
| Column | Data                                                 |
+--------+------------------------------------------------------+
| a      | Int64([1, -1, 1024])                                 |
| Output | Float64([0.2449786631, -0.2449786631, 1.5668900966]) |
+--------+------------------------------------------------------+


ast            : ceil(5)
raw expr       : ceil(5)
checked expr   : ceil<UInt8>(5_u8)
optimized expr : 5_u8
output type    : UInt8
output domain  : {5..=5}
output         : 5


ast            : ceil(5.6)
raw expr       : ceil(5.6)
checked expr   : ceil<Decimal(2, 1)>(5.6_d128(2,1))
optimized expr : 6_d128(2,0)
output type    : Decimal(2, 0)
output domain  : {6..=6}
output         : 6


ast            : ceil(a)
raw expr       : ceil(a::Float64)
checked expr   : ceil<Float64>(a)
evaluation:
+--------+----------------+--------------+
|        | a              | Output       |
+--------+----------------+--------------+
| Type   | Float64        | Float64      |
| Domain | {-1.23..=1.23} | {-inf..=NaN} |
| Row 0  | 1.23           | 2            |
| Row 1  | -1.23          | -1           |
+--------+----------------+--------------+
evaluation (internal):
+--------+------------------------+
| Column | Data                   |
+--------+------------------------+
| a      | Float64([1.23, -1.23]) |
| Output | Float64([2, -1])       |
+--------+------------------------+


ast            : exp(2)
raw expr       : exp(2)
checked expr   : exp<UInt8>(2_u8)
optimized expr : 7.3890560989_f64
output type    : Float64
output domain  : {7.3890560989..=7.3890560989}
output         : 7.3890560989


ast            : exp(-2)
raw expr       : exp(minus(2))
checked expr   : exp<Int16>(minus<UInt8>(2_u8))
optimized expr : 0.1353352832_f64
output type    : Float64
output domain  : {0.1353352832..=0.1353352832}
output         : 0.1353352832


ast            : exp(0)
raw expr       : exp(0)
checked expr   : exp<UInt8>(0_u8)
optimized expr : 1_f64
output type    : Float64
output domain  : {1..=1}
output         : 1


ast            : exp(a)
raw expr       : exp(a::Int64)
checked expr   : exp<Int64>(a)
evaluation:
+--------+-----------+------------------+
|        | a         | Output           |
+--------+-----------+------------------+
| Type   | Int64     | Float64          |
| Domain | {-2..=10} | {-inf..=NaN}     |
| Row 0  | 4         | 54.5981500331    |
| Row 1  | -2        | 0.1353352832     |
| Row 2  | 10        | 22026.4657948067 |
+--------+-----------+------------------+
evaluation (internal):
+--------+----------------------------------------------------------+
| Column | Data                                                     |
+--------+----------------------------------------------------------+
| a      | Int64([4, -2, 10])                                       |
| Output | Float64([54.5981500331, 0.1353352832, 22026.4657948067]) |
+--------+----------------------------------------------------------+


ast            : round(0)(-1.23)
raw expr       : round(0)(minus(1.23))
checked expr   : round<Decimal(3, 2)>(0)(minus<Decimal(3, 2)>(1.23_d128(3,2)))
optimized expr : -1_d128(3,0)
output type    : Decimal(3, 0)
output domain  : {-1..=-1}
output         : -1


ast            : round(1)(1.298, 1)
raw expr       : round(1)(1.298, 1)
checked expr   : round<Decimal(4, 3), UInt8>(1)(1.298_d128(4,3), 1_u8)
optimized expr : 1.3_d128(4,1)
output type    : Decimal(4, 1)
output domain  : {1.3..=1.3}
output         : 1.3


ast            : round(0)(1.298, 0)
raw expr       : round(0)(1.298, 0)
checked expr   : round<Decimal(4, 3), UInt8>(0)(1.298_d128(4,3), 0_u8)
optimized expr : 1_d128(4,0)
output type    : Decimal(4, 0)
output domain  : {1..=1}
output         : 1


ast            : round(35)(0.12345678901234567890123456789012345, 35)
raw expr       : round(35)(0.12345678901234567890123456789012345, 35)
checked expr   : round<Decimal(35, 35), UInt8>(35)(0.12345678901234567890123456789012345_d128(35,35), 35_u8)
optimized expr : 0.12345678901234567890123456789012345_d128(35,35)
output type    : Decimal(35, 35)
output domain  : {0.12345678901234567890123456789012345..=0.12345678901234567890123456789012345}
output         : 0.12345678901234567890123456789012345


ast            : round(a)
raw expr       : round(a::Float64)
checked expr   : round<Float64>(a)
evaluation:
+--------+------------------+--------------+
|        | a                | Output       |
+--------+------------------+--------------+
| Type   | Float64          | Float64      |
| Domain | {-22.23..=22.22} | {-inf..=NaN} |
| Row 0  | 22.22            | 22           |
| Row 1  | -22.23           | -22          |
| Row 2  | 10               | 10           |
+--------+------------------+--------------+
evaluation (internal):
+--------+------------------------------+
| Column | Data                         |
+--------+------------------------------+
| a      | Float64([22.22, -22.23, 10]) |
| Output | Float64([22, -22, 10])       |
+--------+------------------------------+


ast            : sqrt(4)
raw expr       : sqrt(4)
checked expr   : sqrt<UInt8>(4_u8)
optimized expr : 2_f64
output type    : Float64
output domain  : {2..=2}
output         : 2


ast            : sqrt(a)
raw expr       : sqrt(a::Int64)
checked expr   : sqrt<Int64>(a)
evaluation:
+--------+-------------+--------------+
|        | a           | Output       |
+--------+-------------+--------------+
| Type   | Int64       | Float64      |
| Domain | {10..=1024} | {-inf..=NaN} |
| Row 0  | 22          | 4.6904157598 |
| Row 1  | 1024        | 32           |
| Row 2  | 10          | 3.1622776601 |
+--------+-------------+--------------+
evaluation (internal):
+--------+-------------------------------------------+
| Column | Data                                      |
+--------+-------------------------------------------+
| a      | Int64([22, 1024, 10])                     |
| Output | Float64([4.6904157598, 32, 3.1622776601]) |
+--------+-------------------------------------------+


ast            : cbrt(8)
raw expr       : cbrt(8)
checked expr   : cbrt<UInt8>(8_u8)
optimized expr : 2_f64
output type    : Float64
output domain  : {2..=2}
output         : 2


ast            : cbrt(a)
raw expr       : cbrt(a::Int64)
checked expr   : cbrt<Int64>(a)
evaluation:
+--------+-------------+---------------+
|        | a           | Output        |
+--------+-------------+---------------+
| Type   | Int64       | Float64       |
| Domain | {10..=1024} | {-inf..=NaN}  |
| Row 0  | 22          | 2.8020393306  |
| Row 1  | 1024        | 10.0793683991 |
| Row 2  | 10          | 2.15443469    |
+--------+-------------+---------------+
evaluation (internal):
+--------+----------------------------------------------------+
| Column | Data                                               |
+--------+----------------------------------------------------+
| a      | Int64([22, 1024, 10])                              |
| Output | Float64([2.8020393306, 10.0793683991, 2.15443469]) |
+--------+----------------------------------------------------+


ast            : truncate(1)(1.223, 1)
raw expr       : truncate(1)(1.223, 1)
checked expr   : truncate<Decimal(4, 3), UInt8>(1)(1.223_d128(4,3), 1_u8)
optimized expr : 1.2_d128(4,1)
output type    : Decimal(4, 1)
output domain  : {1.2..=1.2}
output         : 1.2


ast            : truncate(0)(1.999)
raw expr       : truncate(0)(1.999)
checked expr   : truncate<Decimal(4, 3)>(0)(1.999_d128(4,3))
optimized expr : 1_d128(4,0)
output type    : Decimal(4, 0)
output domain  : {1..=1}
output         : 1


ast            : truncate(1)(1.999, 1)
raw expr       : truncate(1)(1.999, 1)
checked expr   : truncate<Decimal(4, 3), UInt8>(1)(1.999_d128(4,3), 1_u8)
optimized expr : 1.9_d128(4,1)
output type    : Decimal(4, 1)
output domain  : {1.9..=1.9}
output         : 1.9


ast            : truncate(-2)(122::DECIMAL(3))
raw expr       : truncate(-2)(CAST(122 AS Decimal(3, 0)))
checked expr   : truncate<Decimal(3, 0)>(-2)(CAST<UInt8>(122_u8 AS Decimal(3, 0)))
optimized expr : 100_d128(3,0)
output type    : Decimal(3, 0)
output domain  : {100..=100}
output         : 100


ast            : truncate(1+3-6)(122::DECIMAL(3))
raw expr       : truncate(-2)(CAST(122 AS Decimal(3, 0)))
checked expr   : truncate<Decimal(3, 0)>(-2)(CAST<UInt8>(122_u8 AS Decimal(3, 0)))
optimized expr : 100_d128(3,0)
output type    : Decimal(3, 0)
output domain  : {100..=100}
output         : 100


ast            : truncate(122, -1)
raw expr       : truncate(122, minus(1))
checked expr   : truncate<UInt8, Int64>(122_u8, CAST<Int16>(minus<UInt8>(1_u8) AS Int64))
optimized expr : 120_f64
output type    : Float64
output domain  : {120..=120}
output         : 120


ast            : truncate(0)(10.28*100, 0)
raw expr       : truncate(0)(multiply(10.28, 100), 0)
checked expr   : truncate<Decimal(7, 2), UInt8>(0)(multiply<Decimal(4, 2), UInt8>(10.28_d128(4,2), 100_u8), 0_u8)
optimized expr : 1028_d128(7,0)
output type    : Decimal(7, 0)
output domain  : {1028..=1028}
output         : 1028


ast            : truncate(a, 1)
raw expr       : truncate(a::Float64, 1)
checked expr   : truncate<Float64, Int64>(a, CAST<UInt8>(1_u8 AS Int64))
optimized expr : truncate<Float64, Int64>(a, 1_i64)
evaluation:
+--------+------------------+--------------+
|        | a                | Output       |
+--------+------------------+--------------+
| Type   | Float64          | Float64      |
| Domain | {-22.23..=22.22} | {-inf..=NaN} |
| Row 0  | 22.22            | 22.2         |
| Row 1  | -22.23           | -22.2        |
| Row 2  | 10               | 10           |
+--------+------------------+--------------+
evaluation (internal):
+--------+------------------------------+
| Column | Data                         |
+--------+------------------------------+
| a      | Float64([22.22, -22.23, 10]) |
| Output | Float64([22.2, -22.2, 10])   |
+--------+------------------------------+


ast            : log(2)
raw expr       : log(2)
checked expr   : log<UInt8>(2_u8)
optimized expr : 0.6931471805_f64
output type    : Float64
output domain  : {0.6931471805..=0.6931471805}
output         : 0.6931471805


ast            : log(2, 65536)
raw expr       : log(2, 65536)
checked expr   : log<UInt8, Float64>(2_u8, CAST<UInt32>(65536_u32 AS Float64))
optimized expr : 16_f64
output type    : Float64
output domain  : {16..=16}
output         : 16


ast            : log2(65536)
raw expr       : log2(65536)
checked expr   : log2<UInt32>(65536_u32)
optimized expr : 16_f64
output type    : Float64
output domain  : {16..=16}
output         : 16


ast            : log10(100)
raw expr       : log10(100)
checked expr   : log10<UInt8>(100_u8)
optimized expr : 2_f64
output type    : Float64
output domain  : {2..=2}
output         : 2


ast            : ln(2)
raw expr       : ln(2)
checked expr   : ln<UInt8>(2_u8)
optimized expr : 0.6931471805_f64
output type    : Float64
output domain  : {0.6931471805..=0.6931471805}
output         : 0.6931471805


ast            : round(2, a)
raw expr       : round(2, a::Int64)
checked expr   : round<UInt8, Int64>(2_u8, a)
evaluation:
+--------+--------------+--------------+
|        | a            | Output       |
+--------+--------------+--------------+
| Type   | Int64        | Float64      |
| Domain | {10..=65536} | {-inf..=NaN} |
| Row 0  | 22           | 2            |
| Row 1  | 65536        | 2            |
| Row 2  | 10           | 2            |
+--------+--------------+--------------+
evaluation (internal):
+--------+------------------------+
| Column | Data                   |
+--------+------------------------+
| a      | Int64([22, 65536, 10]) |
| Output | Float64([2, 2, 2])     |
+--------+------------------------+


ast            : factorial(5)
raw expr       : factorial(5)
checked expr   : factorial<UInt8>(5_u8)
optimized expr : 120_i64
output type    : Int64
output domain  : {120..=120}
output         : 120


error: 
  --> SQL:1:1
  |
1 | factorial(30)
  | ^^^^^^^^^^^^^ factorial number is out of range, max is: 20 while evaluating function `factorial(30)` in expr `factorial(30)`



ast            : factorial(a)
raw expr       : factorial(a::Int64)
checked expr   : factorial<Int64>(a)
evaluation:
+--------+----------+----------------+
|        | a        | Output         |
+--------+----------+----------------+
| Type   | Int64    | Int64          |
| Domain | {3..=16} | Unknown        |
| Row 0  | 3        | 6              |
| Row 1  | 12       | 479001600      |
| Row 2  | 16       | 20922789888000 |
+--------+----------+----------------+
evaluation (internal):
+--------+---------------------------------------+
| Column | Data                                  |
+--------+---------------------------------------+
| a      | Int64([3, 12, 16])                    |
| Output | Int64([6, 479001600, 20922789888000]) |
+--------+---------------------------------------+


