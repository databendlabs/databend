---------- Input ----------
LET x := y + 1;
---------- Output ----------
error: 
  --> SQL:1:10
  |
1 | LET x := y + 1;
  |          ^ `y` is not defined


---------- Input ----------
LET x RESULTSET := SELECT 1;
LET y := x;
---------- Output ----------
error: 
  --> SQL:2:10
  |
1 | LET x RESULTSET := SELECT 1;
2 | LET y := x;
  |          ^ `x` is not a scalar variable


---------- Input ----------
RETURN TABLE(x);
---------- Output ----------
error: 
  --> SQL:1:14
  |
1 | RETURN TABLE(x);
  |              ^ `x` is not defined


---------- Input ----------
LET x := 1;
RETURN TABLE(x);
---------- Output ----------
error: 
  --> SQL:2:14
  |
1 | LET x := 1;
2 | RETURN TABLE(x);
  |              ^ `x` is not a set


---------- Input ----------
LET x := 1;
LET x RESULTSET := SELECT 1;
RETURN x;
---------- Output ----------
error: 
  --> SQL:3:8
  |
1 | LET x := 1;
2 | LET x RESULTSET := SELECT 1;
3 | RETURN x;
  |        ^ `x` is not a scalar variable


---------- Input ----------
LET x := 1;
LET y := x.a;
---------- Output ----------
error: 
  --> SQL:2:10
  |
1 | LET x := 1;
2 | LET y := x.a;
  |          ^ `x` is not a row variable


---------- Input ----------
LET x := 'min';
LET y := IDENTIFIER(:x)([1,2]);
---------- Output ----------
error: 
  --> SQL:2:10
  |
1 | LET x := 'min';
2 | LET y := IDENTIFIER(:x)([1,2]);
  |          ^^^^^^^^^^^^^^ variable is not allowed in this context


---------- Input ----------
LET x := 1;
LET y := :x + 1;
---------- Output ----------
error: 
  --> SQL:2:10
  |
1 | LET x := 1;
2 | LET y := :x + 1;
  |          ^^ variable doesn't need to be quoted in this context, try removing the colon


---------- Input ----------
LET x := 1;
FOR r IN x DO
    BREAK;
END FOR;
---------- Output ----------
error: 
  --> SQL:2:10
  |
1 | LET x := 1;
2 | FOR r IN x DO
  |          ^ `x` is not a resultset or cursor


---------- Input ----------
BREAK;
---------- Output ----------
error: 
  --> SQL:1:1
  |
1 | BREAK;
  | ^^^^^ not in a loop


---------- Input ----------
CONTINUE;
---------- Output ----------
error: 
  --> SQL:1:1
  |
1 | CONTINUE;
  | ^^^^^^^^ not in a loop


---------- Input ----------
LOOP
    BREAK foo;
END LOOP bar;
---------- Output ----------
error: 
  --> SQL:2:11
  |
1 | LOOP
2 |     BREAK foo;
  |           ^^^ `foo` is not defined


---------- Input ----------
LOOP
    CONTINUE foo;
END LOOP bar;
---------- Output ----------
error: 
  --> SQL:2:14
  |
1 | LOOP
2 |     CONTINUE foo;
  |              ^^^ `foo` is not defined


---------- Input ----------
LOOP
    CONTINUE;
END LOOP;
---------- Output ----------
Execution of script has exceeded the limit of 1000 steps, which usually means you may have an infinite loop. Otherwise, You can increase the limit with `set script_max_steps = 10000;`.


---------- Input ----------
LET zero := 0;
LET y := 1 + zero / 0;
---------- Output ----------
error: 
  --> SQL:2:10
  |
1 | LET zero := 0;
2 | LET y := 1 + zero / 0;
  |          ^^^^^^^^^^^^ division by zero


---------- Input ----------
LET zero := 0;
SELECT 1 + :zero / 0;
---------- Output ----------
error: 
  --> SQL:2:1
  |
1 | LET zero := 0;
2 | SELECT 1 + :zero / 0;
  | ^^^^^^^^^^^^^^^^^^^^ division by zero


---------- Input ----------
LET zero := 0;
RETURN 1 + zero / 0;
---------- Output ----------
error: 
  --> SQL:2:8
  |
1 | LET zero := 0;
2 | RETURN 1 + zero / 0;
  |        ^^^^^^^^^^^^ division by zero


---------- Input ----------
LET zero := 0;
RETURN TABLE(SELECT 1 + :zero / 0);
---------- Output ----------
error: 
  --> SQL:2:1
  |
1 | LET zero := 0;
2 | RETURN TABLE(SELECT 1 + :zero / 0);
  | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ division by zero


---------- Input ----------
FOR x IN REVERSE 3 TO 1 DO
    RETURN;
END FOR;
---------- Output ----------
error: 
  --> SQL:1:5
  |
1 | FOR x IN REVERSE 3 TO 1 DO
  |     ^ start must be greater than or equal to end when step is negative


