Exchange(Merge)
└── EvalScalar
    ├── scalars: [a.a0d (#0) AS (#0), a.a0k (#7) AS (#7), a.a0m (#9) AS (#9), c.a5m (#144) AS (#144), sum(CASE WHEN d.a1v = '603020' THEN 1 ELSE 0 END) (#173) AS (#167), eq(t.sell_mnt (#173), 0) AS (#168)]
    └── Aggregate(Final)
        ├── group items: [a.a0d (#0) AS (#0), a.a0k (#7) AS (#7), a.a0m (#9) AS (#9), c.a5m (#144) AS (#144)]
        ├── aggregate functions: [sum(CASE WHEN d.a1v = '603020' THEN 1 ELSE 0 END) AS (#173)]
        └── Aggregate(Partial)
            ├── group items: [a.a0d (#0) AS (#0), a.a0k (#7) AS (#7), a.a0m (#9) AS (#9), c.a5m (#144) AS (#144)]
            ├── aggregate functions: [sum(CASE WHEN d.a1v = '603020' THEN 1 ELSE 0 END) AS (#173)]
            └── Exchange(Hash)
                ├── Exchange(Hash): keys: [a.a0d (#0)]
                └── Join(Inner)
                    ├── build keys: [c.a0m (#149)]
                    ├── probe keys: [a.a0m (#9)]
                    ├── other filters: []
                    ├── Aggregate(Final)
                    │   ├── group items: [a.a0d (#0) AS (#0), a.a0k (#7) AS (#7), a.a0m (#9) AS (#9)]
                    │   ├── aggregate functions: [sum(CASE WHEN d.a1v = '603020' THEN 1 ELSE 0 END) AS (#167)]
                    │   └── Aggregate(Partial)
                    │       ├── group items: [a.a0d (#0) AS (#0), a.a0k (#7) AS (#7), a.a0m (#9) AS (#9)]
                    │       ├── aggregate functions: [sum(CASE WHEN d.a1v = '603020' THEN 1 ELSE 0 END) AS (#167)]
                    │       └── Exchange(Hash)
                    │           ├── Exchange(Hash): keys: [a.a0d (#0)]
                    │           └── EvalScalar
                    │               ├── scalars: [a.a0d (#0) AS (#0), a.a0k (#7) AS (#7), a.a0m (#9) AS (#9), if(eq(d.a1v (#154), '603020'), 1, 0) AS (#166), b.a2t (#70) AS (#169), d.a5w (#156) AS (#171)]
                    │               └── Join(Inner)
                    │                   ├── build keys: [b.a0k (#48), b.a0n (#50)]
                    │                   ├── probe keys: [a.a0k (#7), a.a0n (#10)]
                    │                   ├── other filters: [lte(b.a2c (#52), a.a0d (#0)), gt(b.a2k (#61), a.a0d (#0))]
                    │                   ├── Join(Inner)
                    │                   │   ├── build keys: [d.a5t (#151)]
                    │                   │   ├── probe keys: [a.a0l (#8)]
                    │                   │   ├── other filters: []
                    │                   │   ├── Scan
                    │                   │   │   ├── table: default.a0c (#0)
                    │                   │   │   ├── filters: [gte(a0c.a0d (#0), '20240526'), lte(a0c.a0d (#0), '20250525')]
                    │                   │   │   ├── order by: []
                    │                   │   │   └── limit: NONE
                    │                   │   └── Exchange(Broadcast)
                    │                   │       └── Scan
                    │                   │           ├── table: default.a5r (#3)
                    │                   │           ├── filters: [eq(substring(a5r.a5w (#156), 1, 1), '1')]
                    │                   │           ├── order by: []
                    │                   │           └── limit: NONE
                    │                   └── Exchange(Broadcast)
                    │                       └── Scan
                    │                           ├── table: default.a1z (#1)
                    │                           ├── filters: [eq(a1z.a2t (#70), '624100')]
                    │                           ├── order by: []
                    │                           └── limit: NONE
                    └── Exchange(Broadcast)
                        └── EvalScalar
                            ├── scalars: [CAST(c.a0m (#74) AS String NULL) AS (#149)]
                            └── Scan
                                ├── table: default.a2x (#2)
                                ├── filters: [eq(substring(a2x.a4m (#118), 20, 1), '1')]
                                ├── order by: []
                                └── limit: NONE

