name: Dev

on:
  pull_request:
    types:
      - opened
      - synchronize
      - reopened
    branches:
      - main
      - backport/*

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}-${{ github.event_name }}
  cancel-in-progress: true

jobs:
  changes:
    runs-on: ubuntu-latest
    outputs:
      any_src_changed: ${{ steps.src.outputs.any_changed }}
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Check Source File Changes
        uses: tj-actions/changed-files@v46
        id: src
        with:
          files_ignore: |
            .github/**
            **.md
            benchmark/**
            docker/**
            scripts/setup/**
            scripts/distribution/**
            .devcontainer/**
      - name: Output Source File Changes
        run: |
          if [[ "${{ steps.src.outputs.any_changed }}" == "true" ]]; then
            echo "these src files changed:" >> $GITHUB_STEP_SUMMARY
            for line in ${{ steps.src.outputs.all_changed_files }}; do
              echo "- $line" >> $GITHUB_STEP_SUMMARY
            done
          else
            echo "no src file changes detected" >> $GITHUB_STEP_SUMMARY
          fi

  linux:
    needs: changes
    if: needs.changes.outputs.any_src_changed == 'true'
    uses: ./.github/workflows/reuse.linux.yml
    secrets: inherit
    with:
      build_profile: ci
      runner_provider: aws
      license_type: trial

  ready:
    if: always()
    runs-on: ubuntu-latest
    needs:
      - changes
      - linux
    steps:
      - name: Check Ready to Merge
        uses: actions/github-script@v7
        env:
          SRC_CHANGED: ${{ needs.changes.outputs.any_src_changed }}
          LINUX_BUILD_RESULT: ${{ needs.linux.result }}
        with:
          script: |
            if (process.env.SRC_CHANGED == 'false') {
              core.info('No source file changes detected, skipping');
              return;
            }
            if (process.env.LINUX_BUILD_RESULT == 'success') {
              core.info('Linux build succeeded, ready to merge');
              return;
            }
            core.setFailed('Build failed, not ready to merge');
