name: "Pack Deb"
description: "Pack releases deb"
inputs:
  arch:
    description: "Release arch"
    required: true
  version:
    description: "Release version"
    required: true

runs:
  using: "composite"
  steps:
    - name: Install nfpm@latest
      shell: bash
      run: |
        curl -sSLo nfpm.tar.gz https://github.com/goreleaser/nfpm/releases/download/v2.26.0/nfpm_2.26.0_Linux_x86_64.tar.gz
        tar xf nfpm.tar.gz
        sudo mv nfpm /usr/local/bin
        sudo chmod a+x /usr/local/bin/nfpm
        rm nfpm.tar.gz

    - name: Get target
      id: target
      shell: bash
      run: |
        echo 'target=${{ inputs.arch }}-unknown-linux-gnu' >> $GITHUB_OUTPUT

    - name: Download artifacts
      uses: ./.github/actions/artifact_download
      with:
        sha: ${{ github.sha }}
        target: ${{ steps.target.outputs.target }}
        category: default
        artifacts: metactl,meta,query,query.debug
        path: distro/bin

    - name: Prepare Package Info
      shell: bash
      id: info
      run: |
        export version="${{ inputs.version }}"
        case "${{ inputs.arch }}" in
          x86_64)
            echo "deb_arch=amd64" >> $GITHUB_OUTPUT
            ;;
          aarch64)
            echo "deb_arch=arm64" >> $GITHUB_OUTPUT
            ;;
        esac
        deb_version=${version/-/.}
        echo "deb_version=${deb_version/v/}" >> $GITHUB_OUTPUT
        mkdir -p distro/{bin,configs,systemd,scripts}
        cp ./scripts/distribution/systemd/databend-* distro/systemd/
        cp ./scripts/distribution/configs/databend-* distro/configs/
        cp ./scripts/distribution/release-readme.txt distro/readme.txt
        cp -r ./scripts/distribution/package-scripts/* distro/scripts/

    - name: Build Databend Query Package
      shell: bash
      run: |
        export path="distro"
        export version="${{ inputs.version }}"
        export deb_version="${{ steps.info.outputs.deb_version }}"
        export deb_arch="${{ steps.info.outputs.deb_arch }}"
        pkg_name="databend-query_${deb_version}_${deb_arch}.deb"
        nfpm pkg --packager deb -t "${path}/${pkg_name}" -f <(envsubst '${version} ${path} ${arch}' < scripts/distribution/nfpm-query.yaml)

    - name: Build Databend Meta Package
      shell: bash
      run: |
        export path="distro"
        export version="${{ inputs.version }}"
        export deb_version="${{ steps.info.outputs.deb_version }}"
        export deb_arch="${{ steps.info.outputs.deb_arch }}"
        pkg_name="databend-meta_${deb_version}_${deb_arch}.deb"
        nfpm pkg --packager deb -t "${path}/${pkg_name}" -f <(envsubst '${version} ${path} ${arch}' < scripts/distribution/nfpm-meta.yaml)

    - name: Build Databend Debug Package
      shell: bash
      run: |
        export path="distro"
        export version="${{ inputs.version }}"
        export deb_version="${{ steps.info.outputs.deb_version }}"
        export deb_arch="${{ steps.info.outputs.deb_arch }}"
        pkg_name="databend-query-dbg_${deb_version}_${deb_arch}.deb"
        nfpm pkg --packager deb -t "${path}/${pkg_name}" -f <(envsubst '${version} ${path} ${arch}' < scripts/distribution/nfpm-query-dbg.yaml)

    - name: Update release to github
      shell: bash
      env:
        GH_TOKEN: ${{ github.token }}
      # Reference: https://cli.github.com/manual/gh_release_upload
      run: |
        version="${{ inputs.version }}"
        # name looks like: `databend_0.8.144~nightly_amd64.deb`
        for pkg in $(ls distro/*.deb); do
          gh release upload ${version} $pkg --clobber
        done
