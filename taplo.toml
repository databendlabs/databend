## https://taplo.tamasfe.dev/configuration/file.html

include = ["**/Cargo.toml"]

[formatting]
# Align consecutive entries vertically.
align_entries = false
# Append trailing commas for multi-line arrays.
array_trailing_comma = true
# Expand arrays to multiple lines that exceed the maximum column width.
array_auto_expand = true
# Collapse arrays that don't exceed the maximum column width and don't contain comments.
array_auto_collapse = false
# Omit white space padding from single-line arrays
compact_arrays = true
# Omit white space padding from the start and end of inline tables.
compact_inline_tables = false
# Maximum column width in characters, affects array expansion and collapse, this doesn't take whitespace into account.
# Note that this is not set in stone, and works on a best-effort basis.
column_width = 120
# Indent based on tables and arrays of tables and their subtables, subtables out of order are not indented.
indent_tables = false
# The substring that is used for indentation, should be tabs or spaces (but technically can be anything).
indent_string = '    '
# Add trailing newline at the end of the file if not present.
trailing_newline = true
# Alphabetically reorder keys that are not separated by empty lines.
reorder_keys = false
# Maximum amount of allowed consecutive blank lines. This does not affect the whitespace at the end of the document, as it is always stripped.
allowed_blank_lines = 1
# Use CRLF for line endings.
crlf = false

[[rule]]
keys = ["dependencies", "dev-dependencies", "build-dependencies", "workspace.dependencies", "patch.crates-io"]
formatting = { reorder_keys = true }

# This rule is used to enforce all deps to be declared at root.
#
# All crates inside `src`, `tests` must use `workspace = true` instead.
[[rule]]
schema = { path = ".config/workspace-schema.json" }
include = ["src/**/Cargo.toml", "tests/**/Cargo.toml"]
exclude = ["src/**/fuzz/Cargo.toml", "src/bendpy/Cargo.toml"]

# The compilation artefact of databend-common-version cannot be cached, so to avoid unnecessary compilations,
# you should avoid introducing databend-common-version in the underlying crate.
#
# try GlobalConfig::version()
# also see: `cargo check -v 2>&1 1>/dev/null | grep Dirty`
[[rule]]
schema = { path = ".config/version-schema.json" }
include = ["src/**/Cargo.toml"]
exclude = [
    "src/bendpy/Cargo.toml",
    "src/bendsave/Cargo.toml",
    "src/binaries/Cargo.toml",
    "src/meta/binaries/Cargo.toml",
    "src/meta/service/Cargo.toml",
    "src/query/ee/Cargo.toml",
    "src/query/service/Cargo.toml",
]
