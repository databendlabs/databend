# TPC-H spill test
statement ok
set sandbox_tenant = 'test_tenant';

statement ok
use tpch_test;

statement ok
set force_join_data_spill = 1;

statement ok
SET force_sort_data_spill = 1;

statement ok
SET force_window_data_spill = 1;

statement ok
SET force_aggregate_data_spill = 1;

statement ok
set join_spilling_buffer_threshold_per_proc_mb = 1;

statement ok
set window_partition_spilling_to_disk_bytes_limit = 1024 * 1024 * 1024;

# TPC-H TEST
include ./queries.test

# CROSS JOIN
query I
SELECT    count(*),
          sum(p_size) -- cross join may have different order
FROM      (
          SELECT    *
          FROM      lineitem,
                    part
          LIMIT     10000000
          );
----
10000000 254271050


# INNER JOIN
query I
SELECT    c_name,
          c_custkey,
          o_orderkey,
          o_orderdate,
          o_totalprice,
          sum(l_quantity)
FROM      customer,
          orders,
          lineitem
WHERE     o_orderkey IN (
          SELECT    l_orderkey
          FROM      lineitem
          GROUP BY  l_orderkey
          HAVING    sum(l_quantity) > 300
          ) AND
          c_custkey=o_custkey AND
          o_orderkey=l_orderkey
GROUP BY  c_name,
          c_custkey,
          o_orderkey,
          o_orderdate,
          o_totalprice
ORDER BY  o_totalprice DESC,
          o_orderdate;
----
Customer#000128120 128120 4722021 1994-04-07 544089.09 323.00
Customer#000144617 144617 3043270 1997-02-12 530604.44 317.00
Customer#000013940 13940 2232932 1997-04-13 522720.61 304.00
Customer#000066790 66790 2199712 1996-09-30 515531.82 327.00
Customer#000046435 46435 4745607 1997-07-03 508047.99 309.00
Customer#000015272 15272 3883783 1993-07-28 500241.33 302.00
Customer#000146608 146608 3342468 1994-06-12 499794.58 303.00
Customer#000096103 96103 5984582 1992-03-16 494398.79 312.00
Customer#000024341 24341 1474818 1992-11-15 491348.26 302.00
Customer#000137446 137446 5489475 1997-05-23 487763.25 311.00
Customer#000107590 107590 4267751 1994-11-04 485141.38 301.00
Customer#000050008 50008 2366755 1996-12-09 483891.26 302.00
Customer#000015619 15619 3767271 1996-08-07 480083.96 318.00
Customer#000077260 77260 1436544 1992-09-12 479499.43 307.00
Customer#000109379 109379 5746311 1996-10-10 478064.11 302.00
Customer#000054602 54602 5832321 1997-02-09 471220.08 307.00
Customer#000105995 105995 2096705 1994-07-03 469692.58 307.00
Customer#000148885 148885 2942469 1992-05-31 469630.44 313.00
Customer#000114586 114586 551136 1993-05-19 469605.59 308.00
Customer#000105260 105260 5296167 1996-09-06 469360.57 303.00
Customer#000147197 147197 1263015 1997-02-02 467149.67 320.00
Customer#000064483 64483 2745894 1996-07-04 466991.35 304.00
Customer#000136573 136573 2761378 1996-05-31 461282.73 301.00
Customer#000016384 16384 502886 1994-04-12 458378.92 312.00
Customer#000117919 117919 2869152 1996-06-20 456815.92 317.00
Customer#000012251 12251 735366 1993-11-24 455107.26 309.00
Customer#000120098 120098 1971680 1995-06-14 453451.23 308.00
Customer#000066098 66098 5007490 1992-08-07 453436.16 304.00
Customer#000117076 117076 4290656 1997-02-05 449545.85 301.00
Customer#000129379 129379 4720454 1997-06-07 448665.79 303.00
Customer#000126865 126865 4702759 1994-11-07 447606.65 320.00
Customer#000088876 88876 983201 1993-12-30 446717.46 304.00
Customer#000036619 36619 4806726 1995-01-17 446704.09 328.00
Customer#000141823 141823 2806245 1996-12-29 446269.12 310.00
Customer#000053029 53029 2662214 1993-08-13 446144.49 302.00
Customer#000018188 18188 3037414 1995-01-25 443807.22 308.00
Customer#000066533 66533 29158 1995-10-21 443576.50 305.00
Customer#000037729 37729 4134341 1995-06-29 441082.97 309.00
Customer#000003566 3566 2329187 1998-01-04 439803.36 304.00
Customer#000045538 45538 4527553 1994-05-22 436275.31 305.00
Customer#000081581 81581 4739650 1995-11-04 435405.90 305.00
Customer#000119989 119989 1544643 1997-09-20 434568.25 320.00
Customer#000003680 3680 3861123 1998-07-03 433525.97 301.00
Customer#000113131 113131 967334 1995-12-15 432957.75 301.00
Customer#000141098 141098 565574 1995-09-24 430986.69 301.00
Customer#000093392 93392 5200102 1997-01-22 425487.51 304.00
Customer#000015631 15631 1845057 1994-05-12 419879.59 302.00
Customer#000112987 112987 4439686 1996-09-17 418161.49 305.00
Customer#000012599 12599 4259524 1998-02-12 415200.61 304.00
Customer#000105410 105410 4478371 1996-03-05 412754.51 302.00
Customer#000149842 149842 5156581 1994-05-30 411329.35 302.00
Customer#000010129 10129 5849444 1994-03-21 409129.85 309.00
Customer#000069904 69904 1742403 1996-10-19 408513.00 305.00
Customer#000017746 17746 6882 1997-04-09 408446.93 303.00
Customer#000013072 13072 1481925 1998-03-15 399195.47 301.00
Customer#000082441 82441 857959 1994-02-07 382579.74 305.00
Customer#000088703 88703 2995076 1994-01-30 363812.12 302.00


# LEFT OUTER JOIN
query I
SELECT
  c_count,
  count(*) AS custdist
FROM
  (
    SELECT
      c_custkey,
      count(o_orderkey) AS c_count
    FROM
      customer
      RIGHT OUTER JOIN orders ON c_custkey = o_custkey
      AND o_comment NOT LIKE '%pending%deposits%'
    GROUP BY
      c_custkey
  ) c_orders
GROUP BY
  c_count
ORDER BY
  custdist DESC,
  c_count DESC;
----
9 6623
10 6541
11 6109
8 5909
12 5524
13 5013
19 4805
7 4682
17 4555
14 4521
15 4520
20 4506
18 4491
16 4276
21 4203
22 3743
6 3266
23 3187
24 2707
25 2072
5 1948
26 1622
27 1194
4 1028
28 874
29 582
3 402
30 369
31 242
2 132
32 126
33 82
34 52
35 30
1 22
36 20
37 8
41 3
38 3
40 2
39 2
16166 1


# LEFT SEMI JOIN
query I
select
    sum(o_orderkey)
from
    orders
where
        o_orderkey in (
        select
            l_orderkey
        from
            lineitem
        where
                lineitem.l_receiptdate > lineitem.l_commitdate
        );
----
4125471796090


# LEFT ANTI JOIN
query I
select
    sum(o_orderkey)
from
    orders
where not exists
        (
        select
            *
        from
            lineitem
        where
          lineitem.l_orderkey = orders.o_orderkey and
                lineitem.l_receiptdate > lineitem.l_commitdate
        );
----
374515453910


# LEFT MARK JOIN
query I
select
    sum(l_orderkey)
from
    lineitem
where lineitem.l_receiptdate > lineitem.l_commitdate and
        l_orderkey not in (
        select
            o_orderkey
        from
            orders
            where o_orderkey % 3 != 0
        );
----
3792080571561


# RIGHT OUTER JOIN
query I
SELECT
  c_count,
  count(*) AS custdist
FROM
  (
    SELECT
      c_custkey,
      count(o_orderkey) AS c_count
    FROM
      customer
      LEFT OUTER JOIN orders ON c_custkey = o_custkey
      AND o_comment NOT LIKE '%pending%deposits%'
    GROUP BY
      c_custkey
  ) c_orders
GROUP BY
  c_count
ORDER BY
  custdist DESC,
  c_count DESC;
----
0 50004
9 6623
10 6541
11 6109
8 5909
12 5524
13 5013
19 4805
7 4682
17 4555
14 4521
15 4520
20 4506
18 4491
16 4276
21 4203
22 3743
6 3266
23 3187
24 2707
25 2072
5 1948
26 1622
27 1194
4 1028
28 874
29 582
3 402
30 369
31 242
2 132
32 126
33 82
34 52
35 30
1 22
36 20
37 8
41 3
38 3
40 2
39 2


# RIGHT SEMI JOIN
query I
select
  sum(numwait)
from
  (
    select
      s_name,
      truncate(
        count(*),
        4
      ) as numwait
    from
      supplier,
      lineitem l1,
      orders
    where
      s_suppkey = l1.l_suppkey
      and o_orderkey = l1.l_orderkey
      and o_orderstatus = 'F'
      and l1.l_receiptdate > l1.l_commitdate
      and exists (
        select
          *
        from
          lineitem l2
        where
          l2.l_orderkey = l1.l_orderkey
          and l2.l_suppkey <> l1.l_suppkey
      )
    group by
      s_name
    order by
      numwait desc,
      s_name
  );
----
1762253.0


# RIGHT ANTI JOIN
query I
select
  sum(numwait)
from
  (
    select
      s_name,
      truncate(
        count(*),
        4
      ) as numwait
    from
      supplier,
      lineitem l1,
      orders
    where
      s_suppkey = l1.l_suppkey
      and o_orderkey = l1.l_orderkey
      and o_orderstatus = 'F'
      and l1.l_receiptdate > l1.l_commitdate
      and not exists (
        select
          *
        from
          lineitem l3
        where
          l3.l_orderkey = l1.l_orderkey
          and l3.l_suppkey <> l1.l_suppkey
          and l3.l_receiptdate > l3.l_commitdate
      )
    group by
      s_name
    order by
      numwait desc,
      s_name
  );
----
165491.0


# RIGHT MARK JOIN
query I
select
    sum(o_orderkey)
from
    orders
where
        o_orderkey not in (
        select
            l_orderkey
        from
            lineitem
        where
                lineitem.l_receiptdate > lineitem.l_commitdate
        );
----
374515453910


# FULL OUTER JOIN
query I
SELECT    c_count,
          count(*) AS custdist
FROM      (
          SELECT    c_custkey,
                    count(o_orderkey) AS c_count
          FROM      customer
          FULL      OUTER JOIN orders ON c_custkey=o_custkey AND
                    o_comment NOT LIKE '%pending%deposits%'
          GROUP BY  c_custkey
          ) c_orders
GROUP BY  c_count
ORDER BY  custdist DESC,
          c_count DESC;
----
0 50004
9 6623
10 6541
11 6109
8 5909
12 5524
13 5013
19 4805
7 4682
17 4555
14 4521
15 4520
20 4506
18 4491
16 4276
21 4203
22 3743
6 3266
23 3187
24 2707
25 2072
5 1948
26 1622
27 1194
4 1028
28 874
29 582
3 402
30 369
31 242
2 132
32 126
33 82
34 52
35 30
1 22
36 20
37 8
41 3
38 3
40 2
39 2
16166 1


statement ok
UNSET force_sort_data_spill;

statement ok
UNSET force_join_data_spill;

statement ok
UNSET force_window_data_spill;

statement ok
UNSET force_aggregate_data_spill;

statement ok
set join_spilling_buffer_threshold_per_proc_mb = 512;
