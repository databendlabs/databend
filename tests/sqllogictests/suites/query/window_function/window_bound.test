statement ok
CREATE DATABASE IF NOT EXISTS test_window_bound

statement ok
USE test_window_bound

statement ok
DROP TABLE IF EXISTS tenk1

# Test cases from DuckDB test_boundary_expr.test

statement ok
CREATE TABLE tenk1 ( unique1 int, unique2 int, two int, four int, ten int, twenty int, hundred int, thousand int, twothousand int, fivethous int, tenthous int, odd int, even int, stringu1 string, stringu2 string, string4 string )

statement ok
insert into tenk1 values (4, 1621, 0, 0, 4, 4, 4, 4, 4, 4, 4, 8 ,9 ,'EAAAAA', 'JKCAAA', 'HHHHxx'), (2, 2716, 0, 2, 2, 2, 2, 2, 2, 2, 2, 4 ,5 ,'CAAAAA', 'MAEAAA', 'AAAAxx'), (1, 2838, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2 ,3 ,'BAAAAA', 'EFEAAA', 'OOOOxx'), (6, 2855, 0, 2, 6, 6, 6, 6, 6, 6, 6, 12 ,13 ,'GAAAAA', 'VFEAAA', 'VVVVxx'), (9, 4463, 1, 1, 9, 9, 9, 9, 9, 9, 9, 18 ,19 ,'JAAAAA', 'RPGAAA', 'VVVVxx'),(8, 5435, 0, 0, 8, 8, 8, 8, 8, 8, 8, 16 ,17 ,'IAAAAA', 'BBIAAA', 'VVVVxx'), (5, 5557, 1, 1, 5, 5, 5, 5, 5, 5, 5, 10 ,11,'FAAAAA', 'TFIAAA', 'HHHHxx'), (3, 5679, 1, 3, 3, 3, 3, 3, 3, 3, 3, 6 ,7 ,'DAAAAA', 'LKIAAA', 'VVVVxx'), (7, 8518, 1,3, 7, 7, 7, 7, 7, 7, 7, 14 ,15 ,'HAAAAA', 'QPMAAA', 'OOOOxx'), (0, 9998, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 ,1 ,'AAAAAA','OUOAAA', 'OOOOxx')

query R
SELECT sum(unique1) over (order by unique1 rows between 2 preceding and 2 following) su FROM tenk1 order by unique1
----
3
6
10
15
20
25
30
35
30
24

query R
SELECT sum(unique1) over (order by unique1 rows between 2 preceding and 1 preceding) su FROM tenk1 order by unique1
----
NULL
0
1
3
5
7
9
11
13
15

query R
SELECT sum(unique1) over (order by unique1 rows between 1 following and 3 following) su FROM tenk1 order by unique1
----
6
9
12
15
18
21
24
17
9
NULL

query R
SELECT sum(unique1) over (order by unique1 rows between unbounded preceding and 1 following) su FROM tenk1 order by unique1
----
1
3
6
10
15
21
28
36
45
45

query II
SELECT unique1, first_value(unique1) over (order by unique1 rows between 1 preceding and unbounded following) FROM tenk1 order by unique1
----
0 0
1 0
2 1
3 2
4 3
5 4
6 5
7 6
8 7
9 8

query III
SELECT four, ten, first_value(ten) OVER (PARTITION BY four ORDER BY ten rows between 1 preceding and 1 following) fv FROM tenk1 order by four, ten
----
0 0 0
0 4 0
0 8 4
1 1 1
1 5 1
1 9 5
2 2 2
2 6 2
3 3 3
3 7 3

query IIII
SELECT two, four, unique1, first_value(unique1) OVER (PARTITION BY two, four ORDER BY ten, twenty rows between 1 following and unbounded following) fv
    FROM tenk1 order by 1,2,3,4;
----
0 0 0 4
0 0 4 8
0 0 8 NULL
0 2 2 6
0 2 6 NULL
1 1 1 5
1 1 5 9
1 1 9 NULL
1 3 3 7
1 3 7 NULL


query II
SELECT unique1, last_value(unique1) over (order by unique1 rows between current row and unbounded following) last FROM tenk1 order by unique1
----
0 9
1 9
2 9
3 9
4 9
5 9
6 9
7 9
8 9
9 9

query III
SELECT four, ten, last_value(ten) OVER (PARTITION BY four ORDER BY ten rows between current row and 1 following) lv FROM tenk1 order by four, ten
----
0 0 4
0 4 8
0 8 8
1 1 5
1 5 9
1 9 9
2 2 6
2 6 6
3 3 7
3 7 7

query IIII
SELECT two, four, unique1, last_value(unique1) OVER 
    (PARTITION BY two, four ORDER BY ten, twenty rows between unbounded preceding and 1 preceding) lv FROM tenk1 order by 1,2,3,4;
----
0 0 0 NULL
0 0 4 0
0 0 8 4
0 2 2 NULL
0 2 6 2
1 1 1 NULL
1 1 5 1
1 1 9 5
1 3 3 NULL
1 3 7 3

statement ok
DROP TABLE IF EXISTS tenk1

# DuckDB Issue 1472
statement ok
DROP TABLE IF EXISTS duckdb_issue1472

statement ok
create table duckdb_issue1472 (permno double, date date, ret double);

statement ok
insert into duckdb_issue1472 values
    (10000.0, '1986-02-28'::date, -0.2571428716182709),
    (10000.0, '1986-03-31'::date, 0.36538460850715637),
    (10000.0, '1986-04-30'::date, -0.09859155118465424),
    (10000.0, '1986-05-30'::date, -0.22265625),
    (10000.0, '1986-06-30'::date, -0.005025125574320555)
;

query RRR
select permno,
    sum(log10(ret+1)) over (PARTITION BY permno ORDER BY date rows between 12 preceding and 2 preceding),
    ret
from duckdb_issue1472
ORDER BY permno, date;
----
10000.0 NULL -0.2571428716182709
10000.0 NULL 0.3653846085071564
10000.0 -0.12909470484217817 -0.09859155118465424
10000.0 0.006160298054551344 -0.22265625
10000.0 -0.038918077590690346 -0.005025125574320555

statement ok
DROP TABLE IF EXISTS duckdb_issue1472

# RANK for ROWS frame

statement ok
DROP TABLE IF EXISTS t1;

statement ok
CREATE TABLE t1(a INT);

statement ok
INSERT INTO t1 VALUES (1),(1),(1),(3),(3),(5),(5);

statement ok
INSERT INTO t1 VALUES (5),(5),(6),(7);

query II
SELECT a, RANK() OVER (PARTITION BY a ORDER BY a ROWS BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING) rank FROM t1 order by 1,2;
----
1 1
1 1
1 1
3 1
3 1
5 1
5 1
5 1
5 1
6 1
7 1

query II
SELECT a, RANK() OVER (ORDER BY a ROWS BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING) rank FROM t1;
----
1 1
1 1
1 1
3 4
3 4
5 6
5 6
5 6
5 6
6 10
7 11

query II
SELECT a, DENSE_RANK() OVER (PARTITION BY a ORDER BY a ROWS BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING) rank FROM t1 order by 1,2;
----
1 1
1 1
1 1
3 1
3 1
5 1
5 1
5 1
5 1
6 1
7 1

query II
SELECT a, DENSE_RANK() OVER (ORDER BY a ROWS BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING) rank FROM t1;
----
1 1
1 1
1 1
3 2
3 2
5 3
5 3
5 3
5 3
6 4
7 5

query I rowsort
SELECT DISTINCT lead((861, FALSE, FALSE), 9, (849, TRUE, TRUE)) OVER (
    PARTITION BY 15560425903542832284, 965871850213131579 
    ORDER BY 13746504519650342222, 5897530378272856518 ASC NULLS FIRST) 
FROM range(100, 12000000, 467);
----
(849,1,1)
(861,0,0)

query II rowsort
SELECT DISTINCT lead((861, FALSE, FALSE), 9, (849, TRUE, TRUE)) OVER (
    PARTITION BY 15560425903542832284, 965871850213131579 
    ORDER BY 13746504519650342222, 5897530378272856518 ASC NULLS FIRST) 
FROM range(100, 120000000, 467);
----
(849,1,1)
(861,0,0)

statement ok
DROP DATABASE test_window_bound;
