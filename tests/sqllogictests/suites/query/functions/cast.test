statement ok
use default

statement ok
drop table if exists cast_test

statement ok
create table cast_test(int_nullable int null, int_not_nullable int not null)

statement ok
insert into cast_test values(null, 1)

statement ok
select cast(null as int)

query I
select try_cast(null as int)
----
NULL

query I
select try_cast(int_not_nullable as int) from cast_test
----
1

query T
select to_string('a')
----
a

query I
select try_cast(3 as int);
----
3

query I
select int_nullable::int from cast_test
----
NULL


statement ok
drop table if exists t0

statement ok
drop table if exists t1

statement ok
CREATE TABLE t0(c0BOOLEAN BOOL NULL DEFAULT(false))

statement ok
CREATE TABLE t1(c0VARCHAR VARCHAR NULL, c1BOOLEAN BOOLEAN NULL DEFAULT(false))

statement ok
INSERT INTO t1(c1boolean, c0varchar) VALUES (true, '0')

statement ok
SELECT (false and NULL NOT IN (0.1, 0.2, 0.3,0.4)) ::BIGINT FROM t1,t0


statement ok
create table cast_array (t Array(String NULL) NULL )

statement ok
insert into cast_array values([1,2]), ([1, 555])

query T
select cast(t as Array(String) Null) from cast_array
----
['1','2']
['1','555']

# for issue #17620 https://github.com/databendlabs/databend/issues/17620

query T
select cast(t as Array(String) Null) from cast_array limit 1
----
['1','2']

statement ok
select cast(NULL as VARCHAR)

statement ok
drop table t0

statement ok
drop table cast_array

statement ok
drop table t1

# for issue #14156 https://github.com/datafuselabs/databend/issues/14156

statement ok
set numeric_cast_option = 'truncating'

query T
select CAST(10249.5500000000000000 * POW(10, 2) AS UNSIGNED), '29.55'::Int, '29.155'::Int
----
1024954 29 29

query T
select to_uint64(1024954.98046875::double)
----
1024954

statement ok
set numeric_cast_option = 'rounding'

query T
select CAST(10249.5500000000000000 * POW(10, 2) AS UNSIGNED), '29.55'::Int, '29.155'::Int
----
1024955 30 29

query T
select to_uint64(1024954.98046875::double)
----
1024955
