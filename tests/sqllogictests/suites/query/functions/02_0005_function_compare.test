query IIIBB
SELECT number ,number-1 , number*100 , 1> 100 ,1 < 10 FROM numbers_mt (10) order by number
----
0 -1 0 0 1
1 0 100 0 1
2 1 200 0 1
3 2 300 0 1
4 3 400 0 1
5 4 500 0 1
6 5 600 0 1
7 6 700 0 1
8 7 800 0 1
9 8 900 0 1


query I
select number from numbers_mt(10) where number not between 4 + 0.1  and 8 - 0.1 order by number
----
0
1
2
3
4
8
9

query III
select 1 = '1', 1::Int16 = '1', number from numbers(10) where number = '1'
----
1 1 1

query I
select number from numbers(10) where number > '5'
----
6
7
8
9

query I
select number from numbers(10) where number <= '5'
----
0
1
2
3
4
5

query I
select number from numbers(3) where number = true
----
1
2

query BBBBBB
select '3.1' = 3, '3.0' = 3, '3.1' >= 3.1, 3 = '3.1', 3 = '3.0' = 3, 3.1 >= '3.1';
----
0 1 1 0 1 1

query BBBBBB
select 10 > true, 10 >= true, 10 = true, 10 != true, 10 < true, 10 <= true;
----
0 1 1 0 0 1

query BBBBBB
select 10 > false, 10 >= false, 10 = false, 10 != false, 10 < false, 10 <= false;
----
1 1 0 1 0 0

query BBBBBB
select 0 > true, 0 >= true, 0 = true, 0 != true, 0 < true, 0 <= true;
----
0 0 0 1 1 1

query BBBBBB
select 0 > false, 0 >= false, 0 = false, 0 != false, 0 < false, 0 <= false;
----
0 1 1 0 0 1

query I
select number from numbers_mt(10) where number between 4 + 0.1  and 8 - 0.1  order by number
----
5
6
7

query T
select name from system.databases where name like '%sys%';
----
system

query T
select name from system.databases where name like '_ef_ul_';
----
default

query B
select '%' like '\%'
----
1

query B
select 'h\n' like 'h_'
----
1

query B
select 'hello\n' like 'h%'
----
1


query B
select '%' like '\\%'
----
1

query B
select '\%' not like '\%'
----
1

query B
select ('PROMO' || number::string) a, a like 'PROMO%',
	a < 'PROMO1', a > 'PROMO1',
	a <= 'PROMO1' , a >= 'PROMO1',
	a = 'PROMO1'  from numbers(3) order by a
----
PROMO0	1	1	0	1	0	0
PROMO1	1	0	0	1	1	1
PROMO2	1	0	1	0	1	0

statement ok
select * from numbers(10) where null = true

statement ok
select * from numbers(10) where null and true

query T
select '==compare_regexp=='
----
==compare_regexp==

query T
select name from system.databases where name regexp '^sys';
----
system

query T
select name from system.databases where name regexp 'ef+.ul+.';
----
default

query B
select 'foo' regexp 'FOO'
----
1

query T
select name from system.databases where name rlike '^sys';
----
system

query T
select name from system.databases where name rlike 'ef+.ul+.';
----
default

query B
select 'foo' rlike 'FOO'
----
1


query B
select 'Michael!' regexp '.*'
----
1


query B
select 'new*\n*line' regexp 'new\\*.\\*line'
----
0


query B
select 'a' regexp '^[a-d]'
----
1


query B
select 'fo\nfo' regexp '^fo$'
----
0


query B
select 'fofo' regexp '^fo'
----
1


query B
select 'fo\no' regexp '^fo\no$'
----
1


query B
select 'fo\no' regexp '^fo$'
----
0


query B
select 'fofo' regexp '^f.*$'
----
1


query B
select 'fo\r\nfo' regexp '^f.*$'
----
0


query B
select 'fo\r\nfo' regexp '(?m)^f.*$'
----
1

query B
select 'Ban' regexp '^Ba*n'
----
1


query B
select 'Baaan' regexp '^Ba*n'
----
1

query B
select 'Bn' regexp '^Ba*n'
----
1


query B
select 'Ban' regexp '^Ba+n'
----
1


query B
select 'Bn' regexp '^Ba+n'
----
0


query B
select 'Bn' regexp '^Ba?n'
----
1


query B
select 'Ban' regexp '^Ba?n'
----
1


query B
select 'Baan' regexp '^Ba?n'
----
0

query B
select 'pi' regexp 'pi|apa'
----
1


query B
select 'axe' regexp 'pi|apa'
----
0


query B
select 'apa' regexp 'pi|apa'
----
1

query B
select 'apa' regexp '^(pi|apa)$'
----
1


query B
select 'pi' regexp '^(pi|apa)$'
----
1


query B
select 'pix' regexp '^(pi|apa)$'
----
0



query B
select 'pi' regexp '^(pi)*$'
----
1



query B
select 'pip' regexp '^(pi)*$'
----
0



query B
select 'pipi' regexp '^(pi)*$'
----
1



query B
select 'abcde' regexp 'a[bcd]{2}e'
----
0



query B
select 'abcde' regexp 'a[bcd]{3}e'
----
1



query B
select 'abcde' regexp 'a[bcd]{1,10}e'
----
1



query B
select 'aXbc' regexp '[a-dXYZ]'
----
1



query B
select 'aXbc' regexp '^[a-dXYZ]$'
----
0



query B
select 'aXbc' regexp '^[a-dXYZ]+$'
----
1



query B
select 'aXbc' regexp '^[^a-dXYZ]+$'
----
0



query B
select 'gheis' regexp '^[^a-dXYZ]+$'
----
1



query B
select 'gheisa' regexp '^[^a-dXYZ]+$'
----
0



query B
select 'justalnums' regexp '[[:alnum:]]+'
----
1



query B
select '!!' regexp '[[:alnum:]]+'
----
0



query B
select '1+2' regexp '1+2'
----
0



query B
select '1+2' regexp '1\\+2'
----
1



query B
select '🍣🍣b' regexp 'b'
----
1



query B
select 'бжb' regexp 'b'
----
1



query B
select 'µå周çб' regexp '周'
----
1



query B
select '周周周周' regexp '.*'
----
1



query T
select '==compare_not_regexp=='
----
==compare_not_regexp==

query B
select 'Michael!' not regexp '.*'
----
0



query B
select 'new*\n*line' not regexp 'new\\*.\\*line'
----
1



query B
select 'a' not regexp '^[a-d]'
----
0



query B
select 'fo\nfo' not regexp '^fo$'
----
1



query B
select 'fofo' not regexp '^fo'
----
0



query B
select 'fo\no' not regexp '^fo\no$'
----
0



query B
select 'fo\no' not regexp '^fo$'
----
1



query B
select 'fofo' not regexp '^f.*$'
----
0



query B
select 'fo\r\nfo' not regexp '^f.*$'
----
1



query B
select 'fo\r\nfo' not regexp '(?m)^f.*$'
----
0



query B
select 'Ban' not regexp '^Ba*n'
----
0



query B
select 'Baaan' not regexp '^Ba*n'
----
0



query B
select 'Bn' not regexp '^Ba*n'
----
0



query B
select 'Ban' not regexp '^Ba+n'
----
0



query B
select 'Bn' not regexp '^Ba+n'
----
1



query B
select 'Bn' not regexp '^Ba?n'
----
0



query B
select 'Ban' not regexp '^Ba?n'
----
0



query B
select 'Baan' not regexp '^Ba?n'
----
1



query B
select 'pi' not regexp 'pi|apa'
----
0



query B
select 'axe' not regexp 'pi|apa'
----
1



query B
select 'apa' not regexp 'pi|apa'
----
0



query B
select 'apa' not regexp '^(pi|apa)$'
----
0



query B
select 'pi' not regexp '^(pi|apa)$'
----
0



query B
select 'pix' not regexp '^(pi|apa)$'
----
1



query B
select 'pi' not regexp '^(pi)*$'
----
0



query B
select 'pip' not regexp '^(pi)*$'
----
1



query B
select 'pipi' not regexp '^(pi)*$'
----
0



query B
select 'abcde' not regexp 'a[bcd]{2}e'
----
1



query B
select 'abcde' not regexp 'a[bcd]{3}e'
----
0



query B
select 'abcde' not regexp 'a[bcd]{1,10}e'
----
0



query B
select 'aXbc' not regexp '[a-dXYZ]'
----
0



query B
select 'aXbc' not regexp '^[a-dXYZ]$'
----
1



query B
select 'aXbc' not regexp '^[a-dXYZ]+$'
----
0



query B
select 'aXbc' not regexp '^[^a-dXYZ]+$'
----
1



query B
select 'gheis' not regexp '^[^a-dXYZ]+$'
----
0



query B
select 'gheisa' not regexp '^[^a-dXYZ]+$'
----
1



query B
select 'justalnums' not regexp '[[:alnum:]]+'
----
0



query B
select '!!' not regexp '[[:alnum:]]+'
----
1



query B
select '1+2' not regexp '1+2'
----
1



query B
select '1+2' not regexp '1\\+2'
----
0



query B
select '🍣🍣b' not regexp 'b'
----
0



query B
select 'бжb' not regexp 'b'
----
0



query B
select 'µå周çб' not regexp '周'
----
0



query B
select '周周周周' not regexp '.*'
----
0


query B
select '333' = '333'
----
1



query B
select to_varchar(1) = '1'
----
1


query B
select to_varchar(111) = '111'
----
1


query B
select to_varchar(3 + 4) = '7'
----
1



statement error 1006
select '123 ab' = 123


query B
select '7.4' = 7.4::STRING
----
1

query T
select '==compare_datetime=='
----
==compare_datetime==

query B
SELECT '2021-03-05' = to_date('2021-03-05')
----
1



query B
SELECT '2021-03-05 01:01:01' = to_datetime('2021-03-05 01:01:01')
----
1



query B
SELECT '2021-03-05 01:01:02' > to_datetime('2021-03-05 01:01:01')
----
1



query B
SELECT '2021-03-06' > to_date('2021-03-05')
----
1



query B
SELECT to_datetime('2021-03-05 00:00:00') = to_date('2021-03-05')
----
1



query B
SELECT to_datetime('2021-03-05 00:00:01') > to_date('2021-03-05')
----
1



query B
SELECT to_datetime('2021-03-04 00:00:01') < to_date('2021-03-05')
----
1



query B
SELECT to_datetime(to_date('2021-03-05')) = to_date('2021-03-05')
----
1



query T
select '==compare_variant=='
----
==compare_variant==

query B
SELECT parse_json('true') = true
----
1



query B
SELECT parse_json('false') = true
----
0



query B
SELECT parse_json('true') != true
----
0



query B
SELECT parse_json('false') != true
----
1



query B
SELECT parse_json('1') = 1
----
1



query B
SELECT parse_json('2') = 1
----
0



query B
SELECT parse_json('1') != 1
----
0



query B
SELECT parse_json('2') != 1
----
1



query B
SELECT parse_json('1') > 1
----
0



query B
SELECT parse_json('2') > 1
----
1



query B
SELECT parse_json('1') >= 1
----
1



query B
SELECT parse_json('2') >= 1
----
1



query B
SELECT parse_json('1') < 1
----
0



query B
SELECT parse_json('2') < 1
----
0



query B
SELECT parse_json('1') <= 1
----
1



query B
SELECT parse_json('2') <= 1
----
0



query B
SELECT parse_json('"ab"') = 'ab'
----
1



query B
SELECT parse_json('"cd"') = 'ab'
----
0



query B
SELECT parse_json('"ab"') != 'ab'
----
0



query B
SELECT parse_json('"cd"') != 'ab'
----
1



query B
SELECT parse_json('"ab"') > 'ab'
----
0



query B
SELECT parse_json('"cd"') > 'ab'
----
1



query B
SELECT parse_json('"ab"') >= 'ab'
----
1



query B
SELECT parse_json('"cd"') >= 'ab'
----
1



query B
SELECT parse_json('"ab"') < 'ab'
----
0



query B
SELECT parse_json('"cd"') < 'ab'
----
0



query B
SELECT parse_json('"ab"') <= 'ab'
----
1



query B
SELECT parse_json('"cd"') <= 'ab'
----
0



query B
SELECT parse_json('"ab"') like 'ab'
----
1



query B
SELECT parse_json('"cd"') like 'ab'
----
0

query B
select parse_json('{"name":"jcs.sol"}') like '%.sol%';
----
1

query B
SELECT parse_json('"ab"') not like 'ab'
----
0



query B
SELECT parse_json('"cd"') not like 'ab'
----
1

query B
select parse_json('{"name":"jcs.sol"}') not like '%.sol%';
----
0

query B
SELECT parse_json('"ab"') regexp '.*'
----
1



query B
SELECT parse_json('"cd"') regexp '.*'
----
1



query B
SELECT parse_json('"ab"') not regexp '.*'
----
0



query B
SELECT parse_json('"cd"') not regexp '.*'
----
0

query BB
SELECT parse_json('{"a":111}') = parse_json('{"a":123,"b":"xxx"}'), parse_json('{"a":123,"b":"xxx"}') = parse_json('{"a":111}')
----
0 0

statement ok
drop table if exists t

statement ok
create table t(id String)

statement ok
insert into t values('IRxxSIPD')

query T
select id from t where id not like '%_SIP'
----
IRxxSIPD
