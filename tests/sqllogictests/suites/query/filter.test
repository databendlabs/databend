# AND filter short circuit
statement ok
drop table if exists t;

statement ok
create or replace table t(a int null, b varchar null);

statement ok
insert into t(a, b) values (3, NULL), (3,'hello'), (3,'hello'), (3,'hello'), (3,'hello'), (3,'hello'), (3,'hello'), (3,'hello'), (1,'4'), (1,'4');

query I
select a, b from t where a = 1 and cast(b as int) >= 2;
----
1 4
1 4


# AND filter short circuit
statement ok
create or replace table t(a varchar);

statement ok
insert into t values('null'), ('202405');

query I
SELECT count(1) FROM t WHERE a <> 'null' AND a IS NOT NULL AND to_date(a || '01', '%Y%m%d') > add_years(today(), - 100);
----
1


statement ok
create or replace table t(a boolean, b boolean);

statement ok
insert into t values(true, true), (true, false), (false, false);

query I
select count(*) from t where a > b;
----
1

query II
select count(*) from t where a >= b;
----
3

query III
select count(*) from t where a < b;
----
0

query I?
select count(*) from t where a <= b;
----
2

query BB
select * from t where a
----
1 1
1 0

query BB
select * from t where not(a)
----
0 0

query BB
select * from t where not(not(a))
----
1 1
1 0

query BB
select * from t where not(not(not(a)))
----
0 0

statement ok
create or replace table t(a int, b varchar);

statement ok
insert into t values(1, 'databend'), (2, ' databend query'), (3, 'query databend'), (4, 'query databend, query'), (5, 'databend cloud data warehouse'), (6, 'databend%cloud data warehouse');

# LikePattern::OrdinalStr
query I
select * from t where b like 'databend';
----
1 databend

# LikePattern::StartOfPercent
query I
select * from t where b like '%databend';
----
1 databend
3 query databend

# LikePattern::EndOfPercent
query I
select * from t where b like 'databend%';
----
1 databend
5 databend cloud data warehouse
6 databend%cloud data warehouse

# LikePattern::SurroundByPercent
query I
select * from t where b like '%databend%';
----
1 databend
2  databend query
3 query databend
4 query databend, query
5 databend cloud data warehouse
6 databend%cloud data warehouse

# LikePattern::ComplexPattern
query I
select * from t where b like 'databend\\%cloud%data%warehouse';
----
6 databend%cloud data warehouse

# LikePattern::ComplexPattern
query I
select * from t where b like 'databend%cloud_data%warehouse';
----
5 databend cloud data warehouse
6 databend%cloud data warehouse

# LikePattern::SimplePattern, has_start_percent = false, has_end_percent = false
query I
select * from t where b like 'databend%cloud%data%warehouse';
----
5 databend cloud data warehouse
6 databend%cloud data warehouse

# LikePattern::SimplePattern, has_start_percent = true, has_end_percent = false
query I
select * from t where b like '%databend%cloud%data%warehouse';
----
5 databend cloud data warehouse
6 databend%cloud data warehouse

# LikePattern::SimplePattern, has_start_percent = false, has_end_percent = true
query I
select * from t where b like 'databend%cloud%data%warehouse%';
----
5 databend cloud data warehouse
6 databend%cloud data warehouse

# LikePattern::SimplePattern, has_start_percent = true, has_end_percent = true
query I
select * from t where b like '%databend%cloud%data%warehouse%';
----
5 databend cloud data warehouse
6 databend%cloud data warehouse

# LikePattern::StartOfPercent, push down not
query I
select * from t where b not like '%databend';
----
2  databend query
4 query databend, query
5 databend cloud data warehouse
6 databend%cloud data warehouse

# LikePattern::SimplePattern, has_start_percent = false, has_end_percent = false, push down not
query I
select * from t where b not like 'databend%cloud%data%warehouse';
----
1 databend
2  databend query
3 query databend
4 query databend, query

statement ok
create or replace table t(a int) change_tracking = true;

statement ok
insert into t values(1),(2);

query I
select * from t where _origin_version is null;
----
1
2


#issue 17388

statement ok
CREATE OR REPLACE TABLE t2(id int, payload variant);

statement ok
INSERT INTO t2 VALUES(1, '{"key":"val1","key2":null}'),(2, '{"key":"val2","key2":"null"}')

query IT
SELECT * FROM t2 WHERE payload:key2 = 'null';
----
2 {"key":"val2","key2":"null"}


statement ok
drop table if exists t;

statement ok
drop table if exists t2;
