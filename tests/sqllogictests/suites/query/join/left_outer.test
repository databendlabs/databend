# LEFT JOIN
statement ok
drop table if exists t1

statement ok
drop table if exists t2

statement ok
create table t1(a int, b int)

statement ok
create table t2(c int, d int)

statement ok
insert into t1 values(1, 2), (3 ,4), (7, 8)

statement ok
insert into t2 values(1, 4), (2, 3), (6, 8)

query IIII
select * from t1 right join t2 on t1.a = t2.c order by t2.c
----
1 2 1 4
NULL NULL 2 3
NULL NULL 6 8

query IIII
select * from t1 right join t2 on t1.a > t2.c order by t1.a, t1.b, t2.c, t2.d
----
3 4 1 4
3 4 2 3
7 8 1 4
7 8 2 3
7 8 6 8

query IIII
select * from t1 left join t2 on t1.a = t2.c order by t2.c
----
1 2 1 4
3 4 NULL NULL
7 8 NULL NULL


query IIII
select * from t1 left outer join t2 on t1.a = t2.c and t1.a > 3 order by a,b,c,d
----
1 2 NULL NULL
3 4 NULL NULL
7 8 NULL NULL

query IIII
select * from t1 left outer join t2 on t1.a = t2.c and t2.c > 4 order by a,b,c,d
----
1 2 NULL NULL
3 4 NULL NULL
7 8 NULL NULL

query IIII
select * from t1 left outer join t2 on t2.c > 4 and t1.a > 3 order by a,b,c,d
----
1 2 NULL NULL
3 4 NULL NULL
7 8 6 8

query IIII
select * from t1 left outer join t2 on t1.a > 3 order by a,b,c,d
----
1 2 NULL NULL
3 4 NULL NULL
7 8 1 4
7 8 2 3
7 8 6 8

query IIII
select * from t1 left outer join t2 on t2.c > 4 order by a,b,c,d
----
1 2 6 8
3 4 6 8
7 8 6 8

query IIII
select * from t1 left outer join t2 on t1.a > t2.c order by a,b,c,d
----
1 2 NULL NULL
3 4 1 4
3 4 2 3
7 8 1 4
7 8 2 3
7 8 6 8

query III
select t1.a, t2.c, t2.d from t1 left join t2 on t2.c in ( -t2.c );
----
1 NULL NULL
3 NULL NULL
7 NULL NULL

statement ok
drop table if exists t

statement ok
drop table if exists t3

statement ok
CREATE TABLE t3(c0 BIGINT NULL, c1 DOUBLE NULL)

statement ok
drop table if exists t4

statement ok
CREATE TABLE t4(c0 FLOAT NULL)

query I
SELECT SUM(count) FROM (SELECT ((false IS NOT NULL AND false) ::INT64)as count FROM t4 NATURAL LEFT JOIN t3) as res
----
NULL

statement ok
drop table if exists z0

statement ok
drop table if exists z1

statement ok
CREATE TABLE z0(c0BOOLEAN BOOLEAN NULL, c1FLOAT DOUBLE NULL)

statement ok
CREATE TABLE z1(c0BOOLEAN BOOL NULL DEFAULT(true))

statement ok
INSERT INTO z0(c1float, c0boolean) VALUES (0.27563244104385376, false), (0.7913353443145752, false)

statement ok
select * from z1 right join z0 on false limit 0

statement ok
drop table z0

statement ok
drop table z1

statement ok
drop table if exists t0;

statement ok
drop table if exists t1;

statement ok
drop table if exists t2;

statement ok
CREATE TABLE t0(c0BOOLEAN BOOLEAN NULL DEFAULT(false));

statement ok
CREATE TABLE t1(c0BOOLEAN BOOL NULL, c1FLOAT FLOAT NOT NULL DEFAULT(0.4661566913127899));

statement ok
CREATE TABLE t2(c0VARCHAR VARCHAR NULL, c1FLOAT DOUBLE NULL DEFAULT(0.954969048500061), c2VARCHAR VARCHAR NULL);

statement ok
INSERT INTO t0(c0boolean) VALUES (false), (true);

statement ok
INSERT INTO t0(c0boolean) VALUES (false), (false), (true);

statement ok
INSERT INTO t1(c1float) VALUES (0.43919482827186584);

statement ok
INSERT INTO t1(c1float) VALUES (0.2492278516292572);

statement ok
INSERT INTO t2(c1float) VALUES (0.9702655076980591);

statement ok
INSERT INTO t2(c1float, c2varchar) VALUES (0.5340723991394043, '02'), (0.4661566913127899, '1261837');

query IIR
SELECT t0.c0boolean, t1.c0boolean, t1.c1float FROM t0, t1 RIGHT JOIN t2 ON t1.c0boolean order by t0.c0boolean;
----
0 NULL NULL
0 NULL NULL
0 NULL NULL
0 NULL NULL
0 NULL NULL
0 NULL NULL
0 NULL NULL
0 NULL NULL
0 NULL NULL
1 NULL NULL
1 NULL NULL
1 NULL NULL
1 NULL NULL
1 NULL NULL
1 NULL NULL

statement ok
drop table t0;

statement ok
drop table t1;

statement ok
drop table t2;

statement ok
drop table if exists t1;

statement ok
create table t1(a int, b int)

statement ok
insert into t1 values(1, 2), (2, 4), (3, 6), (4, 8), (5, 10)

statement ok
drop table if exists t2

statement ok
create table t2(a int, b int)

statement ok
insert into t2 values(1, 2), (1, 4), (1, 6), (1, 8), (1, 10);

query I
select * from t1 left join t2 on t1.a = t2.a order by t2.b, t1.b;
----
1 2 1 2
1 2 1 4
1 2 1 6
1 2 1 8
1 2 1 10
2 4 NULL NULL
3 6 NULL NULL
4 8 NULL NULL
5 10 NULL NULL

# left join with conjunct
query II
select * from t1 left join t2 on t1.a = t2.a and t1.b > t2.b order by t1.a, t2.a
----
1 2 NULL NULL
2 4 NULL NULL
3 6 NULL NULL
4 8 NULL NULL
5 10 NULL NULL

# push down false outer join
statement ok
drop table if exists t1;

statement ok
drop table if exists t2;

statement ok
CREATE TABLE t1(i int, j int);

statement ok
CREATE TABLE t2(k int, l int);

statement ok
INSERT INTO t1 VALUES (1, 2), (2, 3), (3, 4);

statement ok
INSERT INTO t2 VALUES (1, 10), (2, 20);

query I
SELECT * FROM t1 LEFT OUTER JOIN t2 ON TRUE AND t1.i=t2.k AND FALSE order by i, j;
----
1 2	NULL NULL
2 3	NULL NULL
3 4 NULL NULL

statement ok
CREATE OR REPLACE TABLE t1(a int, b int);

statement ok
CREATE OR REPLACE TABLE t2(a int, b int);

statement ok
INSERT INTO t1 VALUES(1, 2), (2, 3), (3, 4), (4, 5), (5, 6);

statement ok
INSERT INTO t2 VALUES(2, 2), (2, 4), (2, 6), (2, 8), (2, 10);

statement ok
set max_block_size = 2;

query I
SELECT * FROM t1 LEFT JOIN t2 ON t1.a = t2.a ORDER BY t1.a, t2.b;
----
1 2 NULL NULL
2 3 2 2
2 3 2 4
2 3 2 6
2 3 2 8
2 3 2 10
3 4 NULL NULL
4 5 NULL NULL
5 6 NULL NULL


statement ok
create or replace table t1 (a string) as select number from numbers(100);

statement ok
create or replace table t2 (a string) as select number from numbers(100);

## just check it works or not
statement ok
select * from (
   select 'SN0LL' as k  from t1
) as a1  left  join (select * from t2) as a2 on a1.k = a2.a;

# https://github.com/databendlabs/databend/issues/17067
statement ok
drop table if exists t3;

statement ok
CREATE TABLE t3(id int, flag int not null, user_id json);

statement ok
INSERT INTO t3 VALUES(1, 1, '10'),(2, 2, '20');

query T
with t2 as (
  select t1.* from (
   select b.flag from t3 a left join t3 b on a.flag = b.flag where b.user_id is not null
   union all select flag from t3
  )t1
)
select distinct try_cast(flag as int) as f from t2 order by f;
----
1
2

statement ok
DROP TABLE IF EXISTS t1;

statement ok
DROP TABLE IF EXISTS t2;

statement ok
DROP TABLE IF EXISTS t3;
