## Copyright 2023 Databend Cloud
##
## Licensed under the Elastic License, Version 2.0 (the "License");
## you may not use this file except in compliance with the License.
## You may obtain a copy of the License at
##
##     https://www.elastic.co/licensing/elastic-license
##
## Unless required by applicable law or agreed to in writing, software
## distributed under the License is distributed on an "AS IS" BASIS,
## WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
## See the License for the specific language governing permissions and
## limitations under the License.

statement ok
DROP DATABASE IF EXISTS test_computed_column

statement ok
CREATE DATABASE test_computed_column

statement ok
USE test_computed_column

statement ok
drop table if exists t_stored

statement ok
create table t_stored(a string null default 'a', b string null as (concat(a, '-', c)) stored, c string null default 'c')

statement ok
insert into t_stored values ('a1', 'c1'), ('a2', 'c2')

statement ok
insert into t_stored (a) values ('a3'), ('a4')

statement ok
insert into t_stored (c) values ('c5'), ('c6')

statement error 1006
insert into t_stored (b) values ('b1'), ('b2')

statement error 1303
insert into t_stored values ('a1', 'b1', 'c1'), ('a2', 'b2', 'c2')

query SSS
select * from t_stored order by a, c
----
a a-c5 c5
a a-c6 c6
a1 a1-c1 c1
a2 a2-c2 c2
a3 a3-c c
a4 a4-c c

statement ok
update t_stored set a = 'aa', c = 'cc' where a = 'a4'

statement error 1006
update t_stored set b = 'bb', c = 'cc'

query SSS
select * from t_stored order by a, c
----
a a-c5 c5
a a-c6 c6
a1 a1-c1 c1
a2 a2-c2 c2
a3 a3-c c
aa aa-cc cc

statement ok
drop table if exists t_stored2

statement ok
create table t_stored2(a json null, b uint32 null as (a['id']::uint32) stored, c string null as (a['name']::string) stored)

statement ok
insert into t_stored2 values ('{"id":1,"name":"tom"}'), ('{"id":2,"name":"jim"}'),('{"id":3}')

query TIS
select * from t_stored2 order by b
----
{"id":1,"name":"tom"} 1 tom
{"id":2,"name":"jim"} 2 jim
{"id":3} 3 NULL

statement ok
update t_stored2 set a = '{"id":3, "name":"jack"}' where b = 3

statement error 1006
update t_stored2 set c = 'test'

query TIS
select * from t_stored2 order by b
----
{"id":1,"name":"tom"} 1 tom
{"id":2,"name":"jim"} 2 jim
{"id":3,"name":"jack"} 3 jack

statement ok
drop table if exists t_stored3

statement ok
create table t_stored3(a json null, b uint32 null as (a['id']::uint32) stored, c string null as (a['name']::string) stored) bloom_index_columns = 'b, c'

statement error 1301
alter table t_stored3 set options(bloom_index_columns = 'a, b')

statement ok
alter table t_stored3 set options(bloom_index_columns = 'b')

statement ok
drop table if exists t_virtual

statement ok
create table t_virtual(a string null default 'a', b string null as (concat(a, '-', c)) virtual, c string null default 'c')

statement ok
insert into t_virtual values ('a1', 'c1'), ('a2', 'c2')

statement ok
insert into t_virtual (a) values ('a3'), ('a4')

statement ok
insert into t_virtual (c) values ('c5'), ('c6')

statement error 1006
insert into t_virtual (b) values ('b1'), ('b2')

statement error 1303
insert into t_virtual values ('a1', 'b1', 'c1'), ('a2', 'b2', 'c2')

query SSS
select * from t_virtual order by a, c
----
a a-c5 c5
a a-c6 c6
a1 a1-c1 c1
a2 a2-c2 c2
a3 a3-c c
a4 a4-c c

statement ok
update t_virtual set a = 'aa', c = 'cc' where a = 'a4'

statement error 1006
update t_virtual set b = 'bb', c = 'cc'

query SSS
select * from t_virtual order by a, c
----
a a-c5 c5
a a-c6 c6
a1 a1-c1 c1
a2 a2-c2 c2
a3 a3-c c
aa aa-cc cc

statement error 1301
alter table t_virtual set options(bloom_index_columns = 'b, c');

statement ok
drop table if exists t_virtual2

statement ok
create table t_virtual2(a json null, b uint32 null as (a['id']::uint32) virtual, c string null as (a['name']::string) virtual)

statement ok
insert into t_virtual2 values ('{"id":1,"name":"tom"}'), ('{"id":2,"name":"jim"}'),('{"id":3}')

query TIS
select * from t_virtual2 order by b
----
{"id":1,"name":"tom"} 1 tom
{"id":2,"name":"jim"} 2 jim
{"id":3} 3 NULL

statement ok
update t_virtual2 set a = '{"id":3, "name":"jack"}' where b = 3

statement error 1006
update t_virtual2 set c = 'test'

query TIS
select * from t_virtual2 order by b
----
{"id":1,"name":"tom"} 1 tom
{"id":2,"name":"jim"} 2 jim
{"id":3,"name":"jack"} 3 jack

statement error 1301
create table t_virtual3(a json null, b uint32 null as (a['id']::uint32) virtual, c string null as (a['name']::string) virtual) bloom_index_columns = 'b, c'

## test computed columns
statement ok
drop table if exists t_stored_merge;

statement ok
drop table if exists t_source_merge;

statement ok
create table t_stored_merge(a string null default 'a', b string null as (concat(a, '-', c)) stored, c string null default 'c');

statement ok
create table t_source_merge(a string null default 'a',b string null default 'c', c string null default 'c');

statement ok
insert into t_source_merge values('a1','b1','c1'),('a2','b2','c2');

statement error 1006
merge into t_stored_merge as t1 using (select * from t_source_merge as t2) as t2 on t1.a = t2.a when not matched then insert (a,b,c) values(t2.a,t2.b,t2.c); 

statement error 1006
merge into t_stored_merge as t1 using (select * from t_source_merge as t2) as t2 on t1.a = t2.a  when matched then update set t1.b = t2.b  when not matched then insert (a,c) values(t2.a,t2.c);

statement ok
merge into t_stored_merge as t1 using (select * from t_source_merge as t2) as t2 on t1.a = t2.a when not matched then insert (a,c) values(t2.a,t2.c);

query TTT
select * from t_stored_merge order by a,b,c;
----
a1 a1-c1 c1
a2 a2-c2 c2

statement ok
truncate table t_stored_merge;

query I
select count(*) from t_stored_merge;
----
0

statement ok
insert into t_stored_merge values('a1','c3');

query TTT
select * from t_stored_merge order by a,b,c;
----
a1 a1-c3 c3

query TTT
select * from t_source_merge order by a,b,c;
----
a1 b1 c1
a2 b2 c2

statement ok
merge into t_stored_merge as t1 using (select * from t_source_merge as t2) as t2  on t1.a = t2.a  when matched then update set t1.c = t2.c  when not matched then insert (a,c) values(t2.a,t2.c);

query TTT
select * from t_stored_merge order by a,b,c;
----
a1 a1-c1 c1
a2 a2-c2 c2

statement ok
drop table if exists t_virtual;

statement ok
create table t_virtual(a string null default 'a', b string null as (concat(a, '-', c)) virtual, c string null default 'c');

statement ok
insert into t_virtual values ('a1', 'c1'), ('a2', 'c2');

statement ok
insert into t_virtual (a) values ('a3'), ('a4');

statement ok
insert into t_virtual (c) values ('c5'), ('c6');

query T
select * from t_virtual order by a, c;
----
a a-c5 c5
a a-c6 c6
a1 a1-c1 c1
a2 a2-c2 c2
a3 a3-c c
a4 a4-c c

statement ok
merge into t_virtual target using t_virtual source on target.a = source.a when matched and source.a = 'a4' then update set target.a = 'aa', target.c = 'cc'; 

query T
select * from t_virtual order by a, c;
----
a a-c5 c5
a a-c6 c6
a1 a1-c1 c1
a2 a2-c2 c2
a3 a3-c c
aa aa-cc cc

statement ok
DROP DATABASE test_computed_column
