## Copyright 2023 Databend Cloud
##
## Licensed under the Elastic License, Version 2.0 (the "License");
## you may not use this file except in compliance with the License.
## You may obtain a copy of the License at
##
##     https://www.elastic.co/licensing/elastic-license
##
## Unless required by applicable law or agreed to in writing, software
## distributed under the License is distributed on an "AS IS" BASIS,
## WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
## See the License for the specific language governing permissions and
## limitations under the License.

statement ok
create or replace database auto_vacuum;

statement ok
use auto_vacuum;

# If set retention period to zero, and enabled auto vacuum, historical table data will
# be cleaned immediately.

statement ok
set data_retention_time_in_days = 0;

statement ok
set enable_auto_vacuum = 1;

statement ok
create or replace table t (c int) 'fs:///tmp/auto_vacuum/';

# prepare data
statement ok
insert into t values(1);

statement ok
insert into t values(2);

statement ok
insert into t values(3);

statement ok
create or replace stage stage_av url = 'fs:///tmp/auto_vacuum/';

# expect there are 3 segments/blocks/snapshots
onlyif http
query I
select count() from list_stage(location=> '@stage_av') where name like '%_sg%';
----
3

# expect 3 block
onlyif http
query I
select count() from list_stage(location=> '@stage_av') where name like '%\/_b\/%';
----
3

# expect 1 snapshot, since historical snapshots are removed immediately
onlyif http
query I
select count() from list_stage(location=> '@stage_av') where name like '%_ss%';
----
1

# compact previously inserted data:
# - 3 blocks will be compacted into 1 block
# - 3 segments will be compacted into 1 segment
statement ok
optimize table t compact;

# expects that historical data will be vacuumed immediately

onlyif http
query I
select count() from list_stage(location=> '@stage_av') where name like '%_sg%';
----
1

onlyif http
query I
select count() from list_stage(location=> '@stage_av') where name like '%\/_b\/%';
----
1

onlyif http
query I
select count() from list_stage(location=> '@stage_av') where name like '%_ss%';
----
1

onlyif http
query I
select c from t order by c;
----
1
2
3

statement ok
drop table t;

# ---------------------------------------------


# Check that table retention period option has a higher priority

statement ok
set data_retention_time_in_days = 1;

statement ok
create or replace table t (c int) 'fs:///tmp/auto_vacuum_case2/';

statement ok
alter table t set options(data_retention_period_in_hours = 0);

statement ok
create or replace stage stage_av url = 'fs:///tmp/auto_vacuum_case2/';

statement ok
insert into t values(1);
statement ok
insert into t values(2);
statement ok
insert into t values(3);
statement ok
optimize table t compact;

onlyif http
query I
select count() from list_stage(location=> '@stage_av') where name like '%_sg%';
----
1

onlyif http
query I
select count() from list_stage(location=> '@stage_av') where name like '%\/_b\/%';
----
1

onlyif http
query I
select count() from list_stage(location=> '@stage_av') where name like '%_ss%';
----
1

# ---------------------------------------------

# We do not check default retention period works as expected, i.e. by default table historical data
# will be cleaned according to the retention period settings. As tests of streams will check it implicitly



statement ok
remove @stage_av;

statement ok
drop stage stage_av;

