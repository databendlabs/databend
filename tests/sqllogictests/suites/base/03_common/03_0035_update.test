statement ok
DROP DATABASE IF EXISTS db1

statement ok
CREATE DATABASE db1

statement ok
USE db1

statement ok
CREATE TABLE IF NOT EXISTS t1(a Int, b Date)

statement ok
INSERT INTO t1 VALUES(1, '2022-12-30')

statement ok
INSERT INTO t1 VALUES(2, '2023-01-01')

statement error 1065
UPDATE t1 SET b = last(to_date(911310)) OVER (PARTITION BY 'PdGqi', 'GJJ8R' ORDER BY 'gG3dk', 'o0whu' ASC NULLS FIRST ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW)

statement ok
UPDATE t1 SET a = 3 WHERE b > '2022-12-31'

query IT
SELECT * FROM t1 ORDER BY b
----
1 2022-12-30
3 2023-01-01

statement ok
UPDATE t1 SET a = 2, b = '2022-12-31' WHERE b > '2022-12-31'

query IT
SELECT * FROM t1 ORDER BY b
----
1 2022-12-30
2 2022-12-31

statement ok
UPDATE t1 SET a = 3 WHERE false

query T
select count(*) = 0 from t1 WHERE a = 3
----
1

statement ok
UPDATE t1 SET a = 3 WHERE true

query T
select count(*) = 2 from t1 WHERE a = 3
----
1

statement error 1006
UPDATE t1 SET a = 3, a = 4 WHERE b > '2022-12-31'

statement ok
CREATE TABLE IF NOT EXISTS t2(a Int, b Date)

statement ok
INSERT INTO t2 VALUES(1, '2022-12-30')

statement ok
INSERT INTO t2 VALUES(2, '2023-01-01')

statement ok
UPDATE t1 SET a = 2 WHERE a in (SELECT a FROM t2 WHERE b > '2022-12-31')

statement ok
CREATE TABLE IF NOT EXISTS t3(a Int) cluster by(abs(a))

statement ok
insert into t3 values(-5),(3),(2)

query I
select a from t3 order by a
----
-5
2
3

statement ok
UPDATE t3 SET a = 6 WHERE a = 3

query I
select a from t3 order by a
----
-5
2
6

statement ok
drop table t1 all

statement ok
drop table t2 all

statement ok
drop table t3 all

statement ok
create table t1(id1 int, val1 varchar(255));

statement ok
create table t2(id2 int, val2 varchar(255));

statement ok
insert into t1 values (1,'1'), (2, '2') ;

statement ok
insert into t2 values (1,'2'), (2, '3');

statement ok
update t1 set val1 = '3' where id1 in (select id2 from t2);

query IT
select * from t1 order by id1;
----
1 3
2 3

statement ok
update t1 set val1 = '4' where exists(select * from t2 where t1.id1 = t2.id2);

query IT
select * from t1 order by id1;
----
1 4
2 4

statement ok
update t1 set val1 = '5' where id1 < any(select id2 from t2);

query IT
select * from t1 order by id1;
----
1 5
2 4

statement ok
update t1 set val1 = '6' where id1 = all(select id2 from t2);

query IT
select * from t1 order by id1;
----
1 5
2 4

statement ok
update t1 set val1 = '7' where id1 in (select id2 from t2 where id1 + id2 > 2);

query IT
select * from t1 order by id1;
----
1 5
2 7

statement ok
update t1 set val1 = '8' where id1 = any(select id2 from t2 where t1.id1 = t2.id2) or id1 != any(select id2 from t2 where t1.id1 = t2.id2);

query IT
select * from t1 order by id1;
----
1 8
2 8

statement ok
update t1 set val1 = '9' where id1 = any(select id2 from t2 where t1.id1 = t2.id2) or id1 > 1;

query IT
select * from t1 order by id1;
----
1 9
2 9

onlyif mysql
statement ok
truncate table system.metrics

statement ok
update t1 set val1 = '10' where id1 = any(select id2 from t2 where t1.id1 = t2.id2) or id1 < any(select id2 from t2);

query IT
select * from t1 order by id1;
----
1 10
2 10

onlyif mysql
query T
SELECT COUNT() >= 1 FROM system.metrics where metric = 'created_lock_nums_total'
----
1

onlyif mysql
query T
SELECT COUNT() >= 1 FROM system.metrics where metric = 'acquired_lock_nums_total'
----
1

statement ok
drop table t1;

statement ok
drop table t2;

statement ok
drop table if exists t;

statement ok
create table t(a int);

statement ok
insert into t values(1),(2),(3);

statement ok
update t set a = 100 where 20 > any(select a from t);

query I
select * from t;
----
100
100
100

statement ok
update t set a = 101 where 200 > (select avg(a) from t);

query I
select * from t;
----
101
101
101

statement ok
delete from t where 200 > (select avg(a) from t);

query I
select * from t;
----

statement ok
DROP DATABASE db1

statement ok
use default;
