query I
select sum_distinct(number) from ( select number % 100 as number from numbers(100000))
----
4950

query I
select count_distinct(number) from ( select number % 100 as number from numbers(100000))
----
100

query I
select approx_count_distinct(number) between 80 and 113, approx_count_distinct(0.2)(number) between 80 and 113, approx_count_distinct(0.3)(number) between 80 and 113 from ( select number % 100 as number from numbers(100000))
----
1 1 1

query I
select approx_count_distinct(0.01625)(number) from ( select number % 100 as number from numbers(100000))
----
100

query I
select sum_distinct(number) /  count_distinct(number) = avg_distinct(number) from ( select number % 100 as number from numbers(100000))
----
1

query I
select sum_if(number, number >= 100000 - 1) from numbers(100000)
----
99999

query I
select sum_if(number, number > 100) /  count_if(number,  number > 100) = avg_if(number,  number > 100) from numbers(100000)
----
1



query I
select count_if(number, number>9) from numbers(10)
----
0

query I
select sum((number > 314)::uint32) from numbers(1000)
----
685

query I
select avg((number > 314)::uint32) from numbers(1000)
----
0.685

statement ok
DROP TABLE if EXISTS t

statement ok
CREATE TABLE t(a UInt64, b UInt64, c String) Engine = Fuse

statement ok
INSERT INTO t VALUES (1, 10000, 'J'), (1, 400, 'J'), (2, 4500, 'J'), (2, 35000, 'J'), (1, 5000, 'F'), (1, 3000, 'F'), (2, 200, 'F'), (2, 90500, 'F')

query III
select a, sum_if(b, c = 'J'), sum_if(b, c = 'F') from t group by a order by a
----
1 10400 8000
2 39500 90700
