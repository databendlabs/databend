statement ok
create or replace database test_procedure;

statement ok
use test_procedure;

query I
EXECUTE IMMEDIATE $$
BEGIN
    RETURN NULL;
END;
$$;
----
NULL

query I
EXECUTE IMMEDIATE $$
BEGIN
    LET RES RESULTSET := select  number % 3 a, number % 4 b from numbers(10);
    LET SUM := 0;
    CREATE OR REPLACE TABLE abc(a int, b int);
    for x in RES do
        LET A := x.a;
        LET B := x.b;
        INSERT INTO abc VALUES (:A, :B);
        SUM := SUM + A;
        SUM := SUM + B;
    end for;
    return SUM;
END;
$$;
----
22

query I
EXECUTE IMMEDIATE $$
BEGIN
    LET x := -1;
    LET sum := 0;
    FOR x IN x TO x + 3 DO
        sum := sum + x;
    END FOR;
    RETURN sum;
END;
$$;
----
2


query I
EXECUTE IMMEDIATE $$
BEGIN
    LET sum := 0;
    FOR x IN SELECT * FROM numbers(100) DO
        sum := sum + x.number;
    END FOR;
    RETURN sum;
END;
$$;
----
4950

query I
EXECUTE IMMEDIATE $$
BEGIN
    LET x RESULTSET := SELECT * FROM numbers(100);
    LET sum := 0;
    FOR x IN x DO
        sum := sum + x.number;
    END FOR;
    RETURN sum;
END;
$$;
----
4950

query error start must be less than or equal to end when step is positive
EXECUTE IMMEDIATE $$
BEGIN
    FOR x IN 1 TO -1 DO
        RETURN x;
    END FOR;
END;
$$;

query IRT
EXECUTE IMMEDIATE $$
BEGIN
    CREATE OR REPLACE TABLE t1 (a INT, b FLOAT, c STRING);
    INSERT INTO t1 VALUES (1, 2.0, '3');
    RETURN TABLE(select * from t1);
END;
$$;
----
1 2.0 3

query I
EXECUTE IMMEDIATE $$
BEGIN
    LET x := 1;
    LET y := x + 1;
    LET z RESULTSET := SELECT :y + 1;
    RETURN TABLE(z);
END;
$$;
----
3

query I
EXECUTE IMMEDIATE $$
BEGIN
    LET x := 1;
    RETURN TABLE(SELECT :x + 1);
END;
$$;
----
2

query error divided by zero
EXECUTE IMMEDIATE $$
BEGIN
    SELECT 0 / 0;
END;
$$;


query error divided by zero
EXECUTE IMMEDIATE $$
BEGIN
    RETURN 0 / 0;
END;
$$;

statement ok
set script_max_steps = 100;

query error exceeded the limit
EXECUTE IMMEDIATE $$
BEGIN
    LET sum := 0;
    WHILE sum < 100 DO
        sum := sum +1;
    END WHILE;
    RETURN sum;
END;
$$;

statement ok
set script_max_steps = 1000;

query
EXECUTE IMMEDIATE $$
BEGIN
    LET sum := 0;
    WHILE sum < 100 DO
        sum := sum +1;
    END WHILE;
    RETURN sum;
END;
$$;
----
100

query I
EXECUTE IMMEDIATE $$
BEGIN
    let x RESULTSET :=  EXECUTE IMMEDIATE 'select 333';
    RETURN TABLE(x);
END;
$$;
----
333

## cursors

query I
EXECUTE IMMEDIATE $$
BEGIN
  LET c1 CURSOR FOR SELECT number + 10 FROM numbers(10);
  OPEN c1;
  FETCH c1 INTO var_for_column_value;
  FETCH c1 INTO var_for_column_value;
  CLOSE c1;
  RETURN var_for_column_value;
END;
$$;
----
11


query I
EXECUTE IMMEDIATE $$
BEGIN
  LET S RESULTSET := (select number + 10 a, number + 20 b FROM numbers(10));
  LET c1 CURSOR FOR S;
  OPEN c1;
  FETCH c1 INTO var_for_column_value;
  FETCH c1 INTO var_for_column_value;
  CLOSE c1;
  RETURN var_for_column_value;
END;
$$;
----
11

query I
EXECUTE IMMEDIATE $$
BEGIN
  LET S RESULTSET := (select number + 10 a, number + 20 b FROM numbers(10));
  LET c1 CURSOR FOR S;
  LET sum := 0;
  for c in c1 do
    sum := sum + c.a + c.b;
  end for;
  RETURN sum;
END;
$$;
----
390

statement ok
drop database test_procedure;
