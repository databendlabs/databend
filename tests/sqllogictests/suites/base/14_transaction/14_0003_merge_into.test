statement ok
create or replace database test_txn_merge_into;

statement ok
use test_txn_merge_into;

statement ok
CREATE TABLE employees (
    employee_id INT,
    employee_name VARCHAR(255),
    department VARCHAR(255)
);

statement ok
CREATE TABLE salaries (
    employee_id INT,
    salary DECIMAL(10, 2)
);

statement ok
BEGIN;

statement ok
INSERT INTO employees VALUES
    (1, 'Alice', 'HR'),
    (2, 'Bob', 'IT'),
    (3, 'Charlie', 'Finance'),
    (4, 'David', 'HR');

query I
select count(*) from fuse_snapshot('test_txn_merge_into','employees');
----
1

statement ok
INSERT INTO salaries VALUES
    (1, 50000.00),
    (2, 60000.00);

query I
select count(*) from fuse_snapshot('test_txn_merge_into','salaries');
----
1

statement ok
MERGE INTO salaries
    USING (SELECT * FROM employees) AS employees
    ON salaries.employee_id = employees.employee_id
    WHEN MATCHED AND employees.department = 'HR' THEN
        UPDATE SET
            salaries.salary = salaries.salary + 1000.00
    WHEN MATCHED THEN
        UPDATE SET
            salaries.salary = salaries.salary + 500.00
    WHEN NOT MATCHED THEN
        INSERT (employee_id, salary)
            VALUES (employees.employee_id, 55000.00);

query I
select count(*) from fuse_snapshot('test_txn_merge_into','salaries');
----
1

query IF
SELECT employee_id, salary FROM salaries order by employee_id;
----
1   51000.00
2   60500.00
3   55000.00
4   55000.00

statement ok
COMMIT;

query I
select count(*) from fuse_snapshot('test_txn_merge_into','salaries');
----
1

query I
select count(*) from fuse_snapshot('test_txn_merge_into','employees');
----
1

query IF
SELECT employee_id, salary FROM salaries order by employee_id;
----
1   51000.00
2   60500.00
3   55000.00
4   55000.00


statement ok
drop database test_txn_merge_into;


statement ok
create or replace database test_txn_merge_into;

statement ok
use test_txn_merge_into;

statement ok
CREATE TABLE employees (
    employee_id INT,
    employee_name VARCHAR(255),
    department VARCHAR(255)
);

statement ok
CREATE TABLE salaries (
    employee_id INT,
    salary DECIMAL(10, 2)
);

statement ok
BEGIN TRANSACTION;

statement ok
INSERT INTO employees VALUES
    (1, 'Alice', 'HR'),
    (2, 'Bob', 'IT'),
    (3, 'Charlie', 'Finance'),
    (4, 'David', 'HR');

statement ok
INSERT INTO salaries VALUES
    (1, 50000.00),
    (2, 60000.00);

statement ok
MERGE INTO salaries
    USING (SELECT * FROM employees) AS employees
    ON salaries.employee_id = employees.employee_id
    WHEN MATCHED AND employees.department = 'HR' THEN
        UPDATE SET
            salaries.salary = salaries.salary + 1000.00
    WHEN MATCHED THEN
        UPDATE SET
            salaries.salary = salaries.salary + 500.00
    WHEN NOT MATCHED THEN
        INSERT (employee_id, salary)
            VALUES (employees.employee_id, 55000.00);

query IF
SELECT employee_id, salary FROM salaries order by employee_id;
----
1   51000.00
2   60500.00
3   55000.00
4   55000.00

statement ok
COMMIT;

query IF
SELECT employee_id, salary FROM salaries order by employee_id;
----
1   51000.00
2   60500.00
3   55000.00
4   55000.00


statement ok
drop database test_txn_merge_into;