statement ok
create or replace table t1(a int, b int);

query T
explain select a from (select * from t1 order by a) as t2 where a > 1;
----
Sort
├── output columns: [t1.a (#0)]
├── sort keys: [a ASC NULLS LAST]
├── estimated rows: 0.00
└── Filter
    ├── output columns: [t1.a (#0)]
    ├── filters: [is_true(t1.a (#0) > 1)]
    ├── estimated rows: 0.00
    └── TableScan
        ├── table: default.default.t1
        ├── output columns: [a (#0)]
        ├── read rows: 0
        ├── read size: 0
        ├── partitions total: 0
        ├── partitions scanned: 0
        ├── push downs: [filters: [is_true(t1.a (#0) > 1)], limit: NONE]
        └── estimated rows: 0.00

query T
explain select a from (select * from t1) where a > 1 order by a;
----
Sort
├── output columns: [t1.a (#0)]
├── sort keys: [a ASC NULLS LAST]
├── estimated rows: 0.00
└── Filter
    ├── output columns: [t1.a (#0)]
    ├── filters: [is_true(t1.a (#0) > 1)]
    ├── estimated rows: 0.00
    └── TableScan
        ├── table: default.default.t1
        ├── output columns: [a (#0)]
        ├── read rows: 0
        ├── read size: 0
        ├── partitions total: 0
        ├── partitions scanned: 0
        ├── push downs: [filters: [is_true(t1.a (#0) > 1)], limit: NONE]
        └── estimated rows: 0.00

query T
explain select a from (select * from t1) as t2 where t2.a > 1 order by a;
----
Sort
├── output columns: [t1.a (#0)]
├── sort keys: [a ASC NULLS LAST]
├── estimated rows: 0.00
└── Filter
    ├── output columns: [t1.a (#0)]
    ├── filters: [is_true(t2.a (#0) > 1)]
    ├── estimated rows: 0.00
    └── TableScan
        ├── table: default.default.t1
        ├── output columns: [a (#0)]
        ├── read rows: 0
        ├── read size: 0
        ├── partitions total: 0
        ├── partitions scanned: 0
        ├── push downs: [filters: [is_true(t1.a (#0) > 1)], limit: NONE]
        └── estimated rows: 0.00

query T
explain select a from t1 order by a::string limit 1;
----
Limit
├── output columns: [t1.a (#0), a::STRING (#2)]
├── limit: 1
├── offset: 0
├── estimated rows: 0.00
└── Sort
    ├── output columns: [t1.a (#0), a::STRING (#2)]
    ├── sort keys: [a::STRING ASC NULLS LAST]
    ├── estimated rows: 0.00
    └── EvalScalar
        ├── output columns: [t1.a (#0), a::STRING (#2)]
        ├── expressions: [CAST(t1.a (#0) AS String NULL)]
        ├── estimated rows: 0.00
        └── TableScan
            ├── table: default.default.t1
            ├── output columns: [a (#0)]
            ├── read rows: 0
            ├── read size: 0
            ├── partitions total: 0
            ├── partitions scanned: 0
            ├── push downs: [filters: [], limit: NONE]
            └── estimated rows: 0.00

statement ok
set max_threads = 4;

statement ok
set sort_spilling_memory_ratio = 0;

# Sort without pre-projection
query T
explain pipeline select a, b from t1 order by a;
----
digraph {
    0 [ label = "BlockPartitionSource" ]
    1 [ label = "SyncReadParquetDataTransform" ]
    2 [ label = "DeserializeDataTransform" ]
    3 [ label = "Resize" ]
    4 [ label = "SortPartialTransform" ]
    5 [ label = "SortPartialTransform" ]
    6 [ label = "SortPartialTransform" ]
    7 [ label = "SortPartialTransform" ]
    8 [ label = "TransformSortMerge" ]
    9 [ label = "TransformSortMerge" ]
    10 [ label = "TransformSortMerge" ]
    11 [ label = "TransformSortMerge" ]
    12 [ label = "KWayMergePartitioner" ]
    13 [ label = "KWayMergeWorker" ]
    14 [ label = "KWayMergeWorker" ]
    15 [ label = "KWayMergeWorker" ]
    16 [ label = "KWayMergeWorker" ]
    17 [ label = "KWayMergeCombiner" ]
    18 [ label = "CompoundBlockOperator(Project)" ]
    0 -> 1 [ label = "" ]
    1 -> 2 [ label = "" ]
    2 -> 3 [ label = "" ]
    3 -> 4 [ label = "from: 0, to: 0" ]
    3 -> 5 [ label = "from: 1, to: 0" ]
    3 -> 6 [ label = "from: 2, to: 0" ]
    3 -> 7 [ label = "from: 3, to: 0" ]
    4 -> 8 [ label = "" ]
    5 -> 9 [ label = "" ]
    6 -> 10 [ label = "" ]
    7 -> 11 [ label = "" ]
    8 -> 12 [ label = "from: 0, to: 0" ]
    9 -> 12 [ label = "from: 0, to: 1" ]
    10 -> 12 [ label = "from: 0, to: 2" ]
    11 -> 12 [ label = "from: 0, to: 3" ]
    12 -> 13 [ label = "from: 0, to: 0" ]
    12 -> 14 [ label = "from: 1, to: 0" ]
    12 -> 15 [ label = "from: 2, to: 0" ]
    12 -> 16 [ label = "from: 3, to: 0" ]
    13 -> 17 [ label = "from: 0, to: 0" ]
    14 -> 17 [ label = "from: 0, to: 1" ]
    15 -> 17 [ label = "from: 0, to: 2" ]
    16 -> 17 [ label = "from: 0, to: 3" ]
    17 -> 18 [ label = "" ]
}


# Sort spilling
statement ok
set sort_spilling_memory_ratio = 60;

query T
explain pipeline select a, b from t1 order by a;
----
digraph {
    0 [ label = "BlockPartitionSource" ]
    1 [ label = "SyncReadParquetDataTransform" ]
    2 [ label = "DeserializeDataTransform" ]
    3 [ label = "Resize" ]
    4 [ label = "SortPartialTransform" ]
    5 [ label = "SortPartialTransform" ]
    6 [ label = "SortPartialTransform" ]
    7 [ label = "SortPartialTransform" ]
    8 [ label = "TransformSortMerge" ]
    9 [ label = "TransformSortMerge" ]
    10 [ label = "TransformSortMerge" ]
    11 [ label = "TransformSortMerge" ]
    12 [ label = "KWayMergePartitioner" ]
    13 [ label = "KWayMergeWorker" ]
    14 [ label = "KWayMergeWorker" ]
    15 [ label = "KWayMergeWorker" ]
    16 [ label = "KWayMergeWorker" ]
    17 [ label = "KWayMergeCombiner" ]
    18 [ label = "CompoundBlockOperator(Project)" ]
    0 -> 1 [ label = "" ]
    1 -> 2 [ label = "" ]
    2 -> 3 [ label = "" ]
    3 -> 4 [ label = "from: 0, to: 0" ]
    3 -> 5 [ label = "from: 1, to: 0" ]
    3 -> 6 [ label = "from: 2, to: 0" ]
    3 -> 7 [ label = "from: 3, to: 0" ]
    4 -> 8 [ label = "" ]
    5 -> 9 [ label = "" ]
    6 -> 10 [ label = "" ]
    7 -> 11 [ label = "" ]
    8 -> 12 [ label = "from: 0, to: 0" ]
    9 -> 12 [ label = "from: 0, to: 1" ]
    10 -> 12 [ label = "from: 0, to: 2" ]
    11 -> 12 [ label = "from: 0, to: 3" ]
    12 -> 13 [ label = "from: 0, to: 0" ]
    12 -> 14 [ label = "from: 1, to: 0" ]
    12 -> 15 [ label = "from: 2, to: 0" ]
    12 -> 16 [ label = "from: 3, to: 0" ]
    13 -> 17 [ label = "from: 0, to: 0" ]
    14 -> 17 [ label = "from: 0, to: 1" ]
    15 -> 17 [ label = "from: 0, to: 2" ]
    16 -> 17 [ label = "from: 0, to: 3" ]
    17 -> 18 [ label = "" ]
}

statement ok
set sort_spilling_memory_ratio = 0;

# Sort with pre-projection
query T
explain pipeline select a + 1, b from t1 order by a + 1;
----
digraph {
    0 [ label = "BlockPartitionSource" ]
    1 [ label = "SyncReadParquetDataTransform" ]
    2 [ label = "DeserializeDataTransform" ]
    3 [ label = "CompoundBlockOperator(Map)" ]
    4 [ label = "Resize" ]
    5 [ label = "SortPartialTransform" ]
    6 [ label = "SortPartialTransform" ]
    7 [ label = "SortPartialTransform" ]
    8 [ label = "SortPartialTransform" ]
    9 [ label = "TransformSortMerge" ]
    10 [ label = "TransformSortMerge" ]
    11 [ label = "TransformSortMerge" ]
    12 [ label = "TransformSortMerge" ]
    13 [ label = "KWayMergePartitioner" ]
    14 [ label = "KWayMergeWorker" ]
    15 [ label = "KWayMergeWorker" ]
    16 [ label = "KWayMergeWorker" ]
    17 [ label = "KWayMergeWorker" ]
    18 [ label = "KWayMergeCombiner" ]
    19 [ label = "CompoundBlockOperator(Project)" ]
    0 -> 1 [ label = "" ]
    1 -> 2 [ label = "" ]
    2 -> 3 [ label = "" ]
    3 -> 4 [ label = "" ]
    4 -> 5 [ label = "from: 0, to: 0" ]
    4 -> 6 [ label = "from: 1, to: 0" ]
    4 -> 7 [ label = "from: 2, to: 0" ]
    4 -> 8 [ label = "from: 3, to: 0" ]
    5 -> 9 [ label = "" ]
    6 -> 10 [ label = "" ]
    7 -> 11 [ label = "" ]
    8 -> 12 [ label = "" ]
    9 -> 13 [ label = "from: 0, to: 0" ]
    10 -> 13 [ label = "from: 0, to: 1" ]
    11 -> 13 [ label = "from: 0, to: 2" ]
    12 -> 13 [ label = "from: 0, to: 3" ]
    13 -> 14 [ label = "from: 0, to: 0" ]
    13 -> 15 [ label = "from: 1, to: 0" ]
    13 -> 16 [ label = "from: 2, to: 0" ]
    13 -> 17 [ label = "from: 3, to: 0" ]
    14 -> 18 [ label = "from: 0, to: 0" ]
    15 -> 18 [ label = "from: 0, to: 1" ]
    16 -> 18 [ label = "from: 0, to: 2" ]
    17 -> 18 [ label = "from: 0, to: 3" ]
    18 -> 19 [ label = "" ]
}

# Sort spilling
statement ok
set sort_spilling_memory_ratio = 60;

query T
explain pipeline select a + 1, b from t1 order by a + 1;
----
digraph {
    0 [ label = "BlockPartitionSource" ]
    1 [ label = "SyncReadParquetDataTransform" ]
    2 [ label = "DeserializeDataTransform" ]
    3 [ label = "CompoundBlockOperator(Map)" ]
    4 [ label = "Resize" ]
    5 [ label = "SortPartialTransform" ]
    6 [ label = "SortPartialTransform" ]
    7 [ label = "SortPartialTransform" ]
    8 [ label = "SortPartialTransform" ]
    9 [ label = "TransformSortMerge" ]
    10 [ label = "TransformSortMerge" ]
    11 [ label = "TransformSortMerge" ]
    12 [ label = "TransformSortMerge" ]
    13 [ label = "KWayMergePartitioner" ]
    14 [ label = "KWayMergeWorker" ]
    15 [ label = "KWayMergeWorker" ]
    16 [ label = "KWayMergeWorker" ]
    17 [ label = "KWayMergeWorker" ]
    18 [ label = "KWayMergeCombiner" ]
    19 [ label = "CompoundBlockOperator(Project)" ]
    0 -> 1 [ label = "" ]
    1 -> 2 [ label = "" ]
    2 -> 3 [ label = "" ]
    3 -> 4 [ label = "" ]
    4 -> 5 [ label = "from: 0, to: 0" ]
    4 -> 6 [ label = "from: 1, to: 0" ]
    4 -> 7 [ label = "from: 2, to: 0" ]
    4 -> 8 [ label = "from: 3, to: 0" ]
    5 -> 9 [ label = "" ]
    6 -> 10 [ label = "" ]
    7 -> 11 [ label = "" ]
    8 -> 12 [ label = "" ]
    9 -> 13 [ label = "from: 0, to: 0" ]
    10 -> 13 [ label = "from: 0, to: 1" ]
    11 -> 13 [ label = "from: 0, to: 2" ]
    12 -> 13 [ label = "from: 0, to: 3" ]
    13 -> 14 [ label = "from: 0, to: 0" ]
    13 -> 15 [ label = "from: 1, to: 0" ]
    13 -> 16 [ label = "from: 2, to: 0" ]
    13 -> 17 [ label = "from: 3, to: 0" ]
    14 -> 18 [ label = "from: 0, to: 0" ]
    15 -> 18 [ label = "from: 0, to: 1" ]
    16 -> 18 [ label = "from: 0, to: 2" ]
    17 -> 18 [ label = "from: 0, to: 3" ]
    18 -> 19 [ label = "" ]
}

statement ok
drop table if exists t1;
