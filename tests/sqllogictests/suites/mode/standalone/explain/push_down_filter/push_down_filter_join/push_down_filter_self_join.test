statement ok
create or replace table t1 as select number as a, number as b from numbers(10);

statement ok
create or replace table t2 as select number as a, number as b from numbers(10);

query T
explain with A as  materialized (select * from t1 union all select * from t2),
B as (select * from A),
C as (select * from B as b1 left outer join B as b2 on b1.a = b2.a where b1.b < b2.b),
D as (select * from C)
select * from D;
----
Sequence
├── MaterializedCTE: b
│   └── TableScan
│       ├── table: default.default.a
│       ├── output columns: [a (#0), b (#1)]
│       ├── read rows: 20
│       ├── read size: < 1 KiB
│       ├── partitions total: 1
│       ├── partitions scanned: 1
│       ├── pruning stats: [segments: <range pruning: 1 to 1>, blocks: <range pruning: 1 to 1>]
│       ├── push downs: [filters: [], limit: NONE]
│       └── estimated rows: 20.00
└── HashJoin
    ├── output columns: [a.a (#2), a.b (#3), a.b (#5), a.a (#4)]
    ├── join type: INNER
    ├── build keys: [b2.a (#4)]
    ├── probe keys: [b1.a (#2)]
    ├── keys is null equal: [false]
    ├── filters: [d.b (#3) < d.b (#5)]
    ├── build join filters:
    │   └── filter id:0, build key:b2.a (#4), probe key:b1.a (#2), filter type:inlist,min_max
    ├── estimated rows: 40.00
    ├── MaterializeCTERef(Build)
    │   ├── cte_name: b
    │   ├── cte_schema: [a (#4), b (#5)]
    │   └── estimated rows: 20.00
    └── MaterializeCTERef(Probe)
        ├── cte_name: b
        ├── cte_schema: [a (#2), b (#3)]
        └── estimated rows: 20.00
