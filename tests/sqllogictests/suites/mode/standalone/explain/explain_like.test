statement ok
drop table if exists t1;

statement ok
create table t1 (s varchar);

statement ok
insert into t1 values('abcde'), ('abce'), ('abcd['), ('abcd'), ('ab%cd');

query T
select * from t1 where s like 'abcd%' order by s;
----
abcd
abcd[
abcde

query T
explain select * from t1 where s like 'abcd%' order by s;
----
Sort
├── output columns: [t1.s (#0)]
├── sort keys: [s ASC NULLS LAST]
├── estimated rows: 1.00
└── Filter
    ├── output columns: [t1.s (#0)]
    ├── filters: [is_true(t1.s (#0) >= 'abcd'), is_true(t1.s (#0) < 'abce')]
    ├── estimated rows: 1.00
    └── TableScan
        ├── table: default.default.t1
        ├── output columns: [s (#0)]
        ├── read rows: 5
        ├── read size: < 1 KiB
        ├── partitions total: 1
        ├── partitions scanned: 1
        ├── pruning stats: [segments: <range pruning: 1 to 1>, blocks: <range pruning: 1 to 1>]
        ├── push downs: [filters: [and_filters(t1.s (#0) >= 'abcd', t1.s (#0) < 'abce')], limit: NONE]
        └── estimated rows: 5.00

query T
select * from t1 where s like 'abcd' order by s;
----
abcd

query T
explain select * from t1 where s like 'abcd' order by s;
----
Sort
├── output columns: [t1.s (#0)]
├── sort keys: [s ASC NULLS LAST]
├── estimated rows: 1.00
└── Filter
    ├── output columns: [t1.s (#0)]
    ├── filters: [is_true(t1.s (#0) = 'abcd')]
    ├── estimated rows: 1.00
    └── TableScan
        ├── table: default.default.t1
        ├── output columns: [s (#0)]
        ├── read rows: 5
        ├── read size: < 1 KiB
        ├── partitions total: 1
        ├── partitions scanned: 1
        ├── pruning stats: [segments: <range pruning: 1 to 1>, blocks: <range pruning: 1 to 1, bloom pruning: 1 to 1>]
        ├── push downs: [filters: [is_true(t1.s (#0) = 'abcd')], limit: NONE]
        └── estimated rows: 5.00

query T
select * from t1 where s like any ('abc%');
----
abcde
abce
abcd[
abcd


query T
explain select * from t1 where s like any ('abc%');
----
Filter
├── output columns: [t1.s (#0)]
├── filters: [is_true(like_any(t1.s (#0), 'abc%'))]
├── estimated rows: 1.00
└── TableScan
    ├── table: default.default.t1
    ├── output columns: [s (#0)]
    ├── read rows: 5
    ├── read size: < 1 KiB
    ├── partitions total: 1
    ├── partitions scanned: 1
    ├── pruning stats: [segments: <range pruning: 1 to 1>, blocks: <range pruning: 1 to 1>]
    ├── push downs: [filters: [is_true(like_any(t1.s (#0), 'abc%'))], limit: NONE]
    └── estimated rows: 5.00

query T
select * from t1 where s like any ('abc%', '%bcd');
----
abcde
abce
abcd[
abcd

query T
explain select * from t1 where s like any ('abc%', '%bcd');
----
Filter
├── output columns: [t1.s (#0)]
├── filters: [is_true(like_any(t1.s (#0), ('abc%', '%bcd')))]
├── estimated rows: 1.00
└── TableScan
    ├── table: default.default.t1
    ├── output columns: [s (#0)]
    ├── read rows: 5
    ├── read size: < 1 KiB
    ├── partitions total: 1
    ├── partitions scanned: 1
    ├── pruning stats: [segments: <range pruning: 1 to 1>, blocks: <range pruning: 1 to 1>]
    ├── push downs: [filters: [is_true(like_any(t1.s (#0), ('abc%', '%bcd')))], limit: NONE]
    └── estimated rows: 5.00

query T
select * from t1 where s like '%b$%c%' escape '$';
----
ab%cd

query T
explain select * from t1 where s like '%b$%c%' escape '$';
----
Filter
├── output columns: [t1.s (#0)]
├── filters: [is_true(like(t1.s (#0), '%b$%c%', '$'))]
├── estimated rows: 2.50
└── TableScan
    ├── table: default.default.t1
    ├── output columns: [s (#0)]
    ├── read rows: 5
    ├── read size: < 1 KiB
    ├── partitions total: 1
    ├── partitions scanned: 1
    ├── pruning stats: [segments: <range pruning: 1 to 1>, blocks: <range pruning: 1 to 1>]
    ├── push downs: [filters: [is_true(like(t1.s (#0), '%b$%c%', '$'))], limit: NONE]
    └── estimated rows: 5.00

query T
select * from t1 where s like any ('%b$%c%') escape '$';
----
ab%cd

query T
explain select * from t1 where s like any ('%b$%c%') escape '$';
----
Filter
├── output columns: [t1.s (#0)]
├── filters: [is_true(like_any(t1.s (#0), '%b$%c%', '$'))]
├── estimated rows: 1.00
└── TableScan
    ├── table: default.default.t1
    ├── output columns: [s (#0)]
    ├── read rows: 5
    ├── read size: < 1 KiB
    ├── partitions total: 1
    ├── partitions scanned: 1
    ├── pruning stats: [segments: <range pruning: 1 to 1>, blocks: <range pruning: 1 to 1>]
    ├── push downs: [filters: [is_true(like_any(t1.s (#0), '%b$%c%', '$'))], limit: NONE]
    └── estimated rows: 5.00
