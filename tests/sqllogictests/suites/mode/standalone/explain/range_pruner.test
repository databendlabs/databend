statement ok
create or replace table range_t(c varchar, i int)

statement ok
insert into range_t values ('bcd', 1), ('efg', 10)

query T
explain select 1 from range_t where c > 'efg'
----
EvalScalar
├── output columns: [1 (#2)]
├── expressions: [1]
├── estimated rows: 0.40
└── Filter
    ├── output columns: []
    ├── filters: [is_true(range_t.c (#0) > 'efg')]
    ├── estimated rows: 0.40
    └── TableScan
        ├── table: default.default.range_t
        ├── output columns: [c (#0)]
        ├── read rows: 0
        ├── read size: 0
        ├── partitions total: 1
        ├── partitions scanned: 0
        ├── pruning stats: [segments: <range pruning: 1 to 0>]
        ├── push downs: [filters: [is_true(range_t.c (#0) > 'efg')], limit: NONE]
        └── estimated rows: 2.00


query T
explain select 1 from range_t where i > 3 and i = 2
----
EmptyResultScan

query T
explain select 1 from range_t where i > 20
----
EvalScalar
├── output columns: [1 (#2)]
├── expressions: [1]
├── estimated rows: 0.00
└── Filter
    ├── output columns: []
    ├── filters: [is_true(range_t.i (#1) > 20)]
    ├── estimated rows: 0.00
    └── TableScan
        ├── table: default.default.range_t
        ├── output columns: [i (#1)]
        ├── read rows: 0
        ├── read size: 0
        ├── partitions total: 1
        ├── partitions scanned: 0
        ├── pruning stats: [segments: <range pruning: 1 to 0>]
        ├── push downs: [filters: [is_true(range_t.i (#1) > 20)], limit: NONE]
        └── estimated rows: 2.00

query T
explain select number from numbers(10) where number > 5 and try_cast(get(try_parse_json(number::String),'xx') as varchar) < '10' and 1 = 0;
----
EmptyResultScan


query T
explain select number from numbers(10) where number > 5 and try_cast(get(try_parse_json(number::String),'xx') as varchar)   < '10' and 1 = 0;
----
EmptyResultScan

statement ok
drop table range_t
