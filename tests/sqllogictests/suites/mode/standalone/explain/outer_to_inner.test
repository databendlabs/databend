statement ok
drop table if exists t1;

statement ok
drop table if exists t2;

# table with string column
statement ok
create table t1(a string, b string);

statement ok
create table t2(a string, b string);

query T
explain  select * from t1 left join t2 on t1.b = t2.b where t2.a > 'a';
----
HashJoin
├── output columns: [t1.a (#0), t1.b (#1), t2.a (#2), t2.b (#3)]
├── join type: INNER
├── build keys: [t2.b (#3)]
├── probe keys: [t1.b (#1)]
├── keys is null equal: [false]
├── filters: []
├── estimated rows: 0.00
├── Filter(Build)
│   ├── output columns: [t2.a (#2), t2.b (#3)]
│   ├── filters: [is_true(t2.a (#2) > 'a')]
│   ├── estimated rows: 0.00
│   └── TableScan
│       ├── table: default.default.t2
│       ├── output columns: [a (#2), b (#3)]
│       ├── read rows: 0
│       ├── read size: 0
│       ├── partitions total: 0
│       ├── partitions scanned: 0
│       ├── push downs: [filters: [is_true(t2.a (#2) > 'a')], limit: NONE]
│       └── estimated rows: 0.00
└── TableScan(Probe)
    ├── table: default.default.t1
    ├── output columns: [a (#0), b (#1)]
    ├── read rows: 0
    ├── read size: 0
    ├── partitions total: 0
    ├── partitions scanned: 0
    ├── push downs: [filters: [], limit: NONE]
    └── estimated rows: 0.00


statement ok
drop table t1;

statement ok
drop table t2;

# table with date column
statement ok
create table t1(a date, b date);

statement ok
create table t2(a date, b date);

query T
explain  select * from t1 left join t2 on t1.b = t2.b where t2.a > '2022-01-01 02:00:11';
----
HashJoin
├── output columns: [t1.a (#0), t1.b (#1), t2.a (#2), t2.b (#3)]
├── join type: INNER
├── build keys: [t2.b (#3)]
├── probe keys: [t1.b (#1)]
├── keys is null equal: [false]
├── filters: []
├── estimated rows: 0.00
├── Filter(Build)
│   ├── output columns: [t2.a (#2), t2.b (#3)]
│   ├── filters: [is_true(t2.a (#2) > '2022-01-01')]
│   ├── estimated rows: 0.00
│   └── TableScan
│       ├── table: default.default.t2
│       ├── output columns: [a (#2), b (#3)]
│       ├── read rows: 0
│       ├── read size: 0
│       ├── partitions total: 0
│       ├── partitions scanned: 0
│       ├── push downs: [filters: [is_true(t2.a (#2) > '2022-01-01')], limit: NONE]
│       └── estimated rows: 0.00
└── TableScan(Probe)
    ├── table: default.default.t1
    ├── output columns: [a (#0), b (#1)]
    ├── read rows: 0
    ├── read size: 0
    ├── partitions total: 0
    ├── partitions scanned: 0
    ├── push downs: [filters: [], limit: NONE]
    └── estimated rows: 0.00

statement ok
drop table t1;

statement ok
drop table t2;

# table with decimal column
statement ok
create table t1(a decimal(4, 2), b decimal(4, 2));

statement ok
create table t2(a decimal(4, 2), b decimal(4, 2));

query T
explain  select * from t1 left join t2 on t1.b = t2.b where t2.a > 1.1;
----
HashJoin
├── output columns: [t1.a (#0), t1.b (#1), t2.a (#2), t2.b (#3)]
├── join type: INNER
├── build keys: [t2.b (#3)]
├── probe keys: [t1.b (#1)]
├── keys is null equal: [false]
├── filters: []
├── estimated rows: 0.00
├── Filter(Build)
│   ├── output columns: [t2.a (#2), t2.b (#3)]
│   ├── filters: [is_true(t2.a (#2) > 1.1)]
│   ├── estimated rows: 0.00
│   └── TableScan
│       ├── table: default.default.t2
│       ├── output columns: [a (#2), b (#3)]
│       ├── read rows: 0
│       ├── read size: 0
│       ├── partitions total: 0
│       ├── partitions scanned: 0
│       ├── push downs: [filters: [is_true(t2.a (#2) > 1.1)], limit: NONE]
│       └── estimated rows: 0.00
└── TableScan(Probe)
    ├── table: default.default.t1
    ├── output columns: [a (#0), b (#1)]
    ├── read rows: 0
    ├── read size: 0
    ├── partitions total: 0
    ├── partitions scanned: 0
    ├── push downs: [filters: [], limit: NONE]
    └── estimated rows: 0.00

statement ok
drop table t1;

statement ok
drop table t2;

# table with float column
statement ok
create table t1(a float, b float);

statement ok
create table t2(a float, b float);

query T
explain  select * from t1 left join t2 on t1.b = t2.b where t2.a > 1.1;
----
HashJoin
├── output columns: [t1.a (#0), t1.b (#1), t2.a (#2), t2.b (#3)]
├── join type: INNER
├── build keys: [t2.b (#3)]
├── probe keys: [t1.b (#1)]
├── keys is null equal: [false]
├── filters: []
├── estimated rows: 0.00
├── Filter(Build)
│   ├── output columns: [t2.a (#2), t2.b (#3)]
│   ├── filters: [is_true(t2.a (#2) > 1.1)]
│   ├── estimated rows: 0.00
│   └── TableScan
│       ├── table: default.default.t2
│       ├── output columns: [a (#2), b (#3)]
│       ├── read rows: 0
│       ├── read size: 0
│       ├── partitions total: 0
│       ├── partitions scanned: 0
│       ├── push downs: [filters: [is_true(t2.a (#2) > 1.1)], limit: NONE]
│       └── estimated rows: 0.00
└── TableScan(Probe)
    ├── table: default.default.t1
    ├── output columns: [a (#0), b (#1)]
    ├── read rows: 0
    ├── read size: 0
    ├── partitions total: 0
    ├── partitions scanned: 0
    ├── push downs: [filters: [], limit: NONE]
    └── estimated rows: 0.00

statement ok
drop table t1;

statement ok
drop table t2;
