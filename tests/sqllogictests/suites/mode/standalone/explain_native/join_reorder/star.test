statement ok
drop database if exists join_reorder

statement ok
create database join_reorder

statement ok
use join_reorder

statement ok
create table t as select number as a from numbers(1)

statement ok
create table t1 as select number as a from numbers(10)

statement ok
create table t2 as select number as a from numbers(100)

query T
explain select * from t, t1, t2 where t.a = t2.a and t1.a = t2.a
----
HashJoin
├── output columns: [t2.a (#2), t1.a (#1), t.a (#0)]
├── join type: INNER
├── build keys: [t.a (#0)]
├── probe keys: [t2.a (#2)]
├── keys is null equal: [false]
├── filters: []
├── build runtime filters:
│   └── rf_id:1, build_key:t.a (#0), probe_key:t2.a (#2), rf_type:inlist,min_max
├── estimated rows: 1.00
├── HashJoin(Build)
│   ├── output columns: [t1.a (#1), t.a (#0)]
│   ├── join type: INNER
│   ├── build keys: [t.a (#0)]
│   ├── probe keys: [t1.a (#1)]
│   ├── keys is null equal: [false]
│   ├── filters: []
│   ├── build runtime filters:
│   │   └── rf_id:0, build_key:t.a (#0), probe_key:t1.a (#1), rf_type:inlist,min_max
│   ├── estimated rows: 1.00
│   ├── TableScan(Build)
│   │   ├── table: default.join_reorder.t
│   │   ├── output columns: [a (#0)]
│   │   ├── read rows: 1
│   │   ├── read size: < 1 KiB
│   │   ├── partitions total: 1
│   │   ├── partitions scanned: 1
│   │   ├── pruning stats: [segments: <range pruning: 1 to 1>, blocks: <range pruning: 1 to 1>]
│   │   ├── push downs: [filters: [], limit: NONE]
│   │   └── estimated rows: 1.00
│   └── TableScan(Probe)
│       ├── table: default.join_reorder.t1
│       ├── output columns: [a (#1)]
│       ├── read rows: 10
│       ├── read size: < 1 KiB
│       ├── partitions total: 1
│       ├── partitions scanned: 1
│       ├── pruning stats: [segments: <range pruning: 1 to 1>, blocks: <range pruning: 1 to 1>]
│       ├── push downs: [filters: [], limit: NONE]
│       ├── apply runtime filters: [#0]
│       └── estimated rows: 10.00
└── TableScan(Probe)
    ├── table: default.join_reorder.t2
    ├── output columns: [a (#2)]
    ├── read rows: 100
    ├── read size: < 1 KiB
    ├── partitions total: 1
    ├── partitions scanned: 1
    ├── pruning stats: [segments: <range pruning: 1 to 1>, blocks: <range pruning: 1 to 1>]
    ├── push downs: [filters: [], limit: NONE]
    ├── apply runtime filters: [#1]
    └── estimated rows: 100.00

query T
explain select * from t, t2, t1 where t.a = t2.a and t1.a = t2.a
----
HashJoin
├── output columns: [t1.a (#2), t2.a (#1), t.a (#0)]
├── join type: INNER
├── build keys: [t.a (#0)]
├── probe keys: [t1.a (#2)]
├── keys is null equal: [false]
├── filters: []
├── build runtime filters:
│   └── rf_id:1, build_key:t.a (#0), probe_key:t1.a (#2), rf_type:inlist,min_max
├── estimated rows: 1.00
├── HashJoin(Build)
│   ├── output columns: [t2.a (#1), t.a (#0)]
│   ├── join type: INNER
│   ├── build keys: [t.a (#0)]
│   ├── probe keys: [t2.a (#1)]
│   ├── keys is null equal: [false]
│   ├── filters: []
│   ├── build runtime filters:
│   │   └── rf_id:0, build_key:t.a (#0), probe_key:t2.a (#1), rf_type:inlist,min_max
│   ├── estimated rows: 1.00
│   ├── TableScan(Build)
│   │   ├── table: default.join_reorder.t
│   │   ├── output columns: [a (#0)]
│   │   ├── read rows: 1
│   │   ├── read size: < 1 KiB
│   │   ├── partitions total: 1
│   │   ├── partitions scanned: 1
│   │   ├── pruning stats: [segments: <range pruning: 1 to 1>, blocks: <range pruning: 1 to 1>]
│   │   ├── push downs: [filters: [], limit: NONE]
│   │   └── estimated rows: 1.00
│   └── TableScan(Probe)
│       ├── table: default.join_reorder.t2
│       ├── output columns: [a (#1)]
│       ├── read rows: 100
│       ├── read size: < 1 KiB
│       ├── partitions total: 1
│       ├── partitions scanned: 1
│       ├── pruning stats: [segments: <range pruning: 1 to 1>, blocks: <range pruning: 1 to 1>]
│       ├── push downs: [filters: [], limit: NONE]
│       ├── apply runtime filters: [#0]
│       └── estimated rows: 100.00
└── TableScan(Probe)
    ├── table: default.join_reorder.t1
    ├── output columns: [a (#2)]
    ├── read rows: 10
    ├── read size: < 1 KiB
    ├── partitions total: 1
    ├── partitions scanned: 1
    ├── pruning stats: [segments: <range pruning: 1 to 1>, blocks: <range pruning: 1 to 1>]
    ├── push downs: [filters: [], limit: NONE]
    ├── apply runtime filters: [#1]
    └── estimated rows: 10.00

query T
explain select * from t1, t, t2 where t.a = t2.a and t1.a = t2.a
----
HashJoin
├── output columns: [t1.a (#0), t.a (#1), t2.a (#2)]
├── join type: INNER
├── build keys: [t2.a (#2)]
├── probe keys: [t1.a (#0)]
├── keys is null equal: [false]
├── filters: []
├── build runtime filters:
│   └── rf_id:1, build_key:t2.a (#2), probe_key:t1.a (#0), rf_type:inlist,min_max
├── estimated rows: 1.00
├── HashJoin(Build)
│   ├── output columns: [t2.a (#2), t.a (#1)]
│   ├── join type: INNER
│   ├── build keys: [t.a (#1)]
│   ├── probe keys: [t2.a (#2)]
│   ├── keys is null equal: [false]
│   ├── filters: []
│   ├── build runtime filters:
│   │   └── rf_id:0, build_key:t.a (#1), probe_key:t2.a (#2), rf_type:inlist,min_max
│   ├── estimated rows: 1.00
│   ├── TableScan(Build)
│   │   ├── table: default.join_reorder.t
│   │   ├── output columns: [a (#1)]
│   │   ├── read rows: 1
│   │   ├── read size: < 1 KiB
│   │   ├── partitions total: 1
│   │   ├── partitions scanned: 1
│   │   ├── pruning stats: [segments: <range pruning: 1 to 1>, blocks: <range pruning: 1 to 1>]
│   │   ├── push downs: [filters: [], limit: NONE]
│   │   └── estimated rows: 1.00
│   └── TableScan(Probe)
│       ├── table: default.join_reorder.t2
│       ├── output columns: [a (#2)]
│       ├── read rows: 100
│       ├── read size: < 1 KiB
│       ├── partitions total: 1
│       ├── partitions scanned: 1
│       ├── pruning stats: [segments: <range pruning: 1 to 1>, blocks: <range pruning: 1 to 1>]
│       ├── push downs: [filters: [], limit: NONE]
│       ├── apply runtime filters: [#0]
│       └── estimated rows: 100.00
└── TableScan(Probe)
    ├── table: default.join_reorder.t1
    ├── output columns: [a (#0)]
    ├── read rows: 10
    ├── read size: < 1 KiB
    ├── partitions total: 1
    ├── partitions scanned: 1
    ├── pruning stats: [segments: <range pruning: 1 to 1>, blocks: <range pruning: 1 to 1>]
    ├── push downs: [filters: [], limit: NONE]
    ├── apply runtime filters: [#1]
    └── estimated rows: 10.00

query T
explain select * from t1, t2, t where t.a = t2.a and t1.a = t2.a
----
HashJoin
├── output columns: [t1.a (#0), t2.a (#1), t.a (#2)]
├── join type: INNER
├── build keys: [t.a (#2)]
├── probe keys: [t1.a (#0)]
├── keys is null equal: [false]
├── filters: []
├── build runtime filters:
│   └── rf_id:1, build_key:t.a (#2), probe_key:t1.a (#0), rf_type:inlist,min_max
├── estimated rows: 1.00
├── HashJoin(Build)
│   ├── output columns: [t2.a (#1), t.a (#2)]
│   ├── join type: INNER
│   ├── build keys: [t.a (#2)]
│   ├── probe keys: [t2.a (#1)]
│   ├── keys is null equal: [false]
│   ├── filters: []
│   ├── build runtime filters:
│   │   └── rf_id:0, build_key:t.a (#2), probe_key:t2.a (#1), rf_type:inlist,min_max
│   ├── estimated rows: 1.00
│   ├── TableScan(Build)
│   │   ├── table: default.join_reorder.t
│   │   ├── output columns: [a (#2)]
│   │   ├── read rows: 1
│   │   ├── read size: < 1 KiB
│   │   ├── partitions total: 1
│   │   ├── partitions scanned: 1
│   │   ├── pruning stats: [segments: <range pruning: 1 to 1>, blocks: <range pruning: 1 to 1>]
│   │   ├── push downs: [filters: [], limit: NONE]
│   │   └── estimated rows: 1.00
│   └── TableScan(Probe)
│       ├── table: default.join_reorder.t2
│       ├── output columns: [a (#1)]
│       ├── read rows: 100
│       ├── read size: < 1 KiB
│       ├── partitions total: 1
│       ├── partitions scanned: 1
│       ├── pruning stats: [segments: <range pruning: 1 to 1>, blocks: <range pruning: 1 to 1>]
│       ├── push downs: [filters: [], limit: NONE]
│       ├── apply runtime filters: [#0]
│       └── estimated rows: 100.00
└── TableScan(Probe)
    ├── table: default.join_reorder.t1
    ├── output columns: [a (#0)]
    ├── read rows: 10
    ├── read size: < 1 KiB
    ├── partitions total: 1
    ├── partitions scanned: 1
    ├── pruning stats: [segments: <range pruning: 1 to 1>, blocks: <range pruning: 1 to 1>]
    ├── push downs: [filters: [], limit: NONE]
    ├── apply runtime filters: [#1]
    └── estimated rows: 10.00

query T
explain select * from t2, t1, t where t.a = t2.a and t1.a = t2.a
----
HashJoin
├── output columns: [t2.a (#0), t1.a (#1), t.a (#2)]
├── join type: INNER
├── build keys: [t.a (#2)]
├── probe keys: [t2.a (#0)]
├── keys is null equal: [false]
├── filters: []
├── build runtime filters:
│   └── rf_id:1, build_key:t.a (#2), probe_key:t2.a (#0), rf_type:inlist,min_max
├── estimated rows: 1.00
├── HashJoin(Build)
│   ├── output columns: [t1.a (#1), t.a (#2)]
│   ├── join type: INNER
│   ├── build keys: [t.a (#2)]
│   ├── probe keys: [t1.a (#1)]
│   ├── keys is null equal: [false]
│   ├── filters: []
│   ├── build runtime filters:
│   │   └── rf_id:0, build_key:t.a (#2), probe_key:t1.a (#1), rf_type:inlist,min_max
│   ├── estimated rows: 1.00
│   ├── TableScan(Build)
│   │   ├── table: default.join_reorder.t
│   │   ├── output columns: [a (#2)]
│   │   ├── read rows: 1
│   │   ├── read size: < 1 KiB
│   │   ├── partitions total: 1
│   │   ├── partitions scanned: 1
│   │   ├── pruning stats: [segments: <range pruning: 1 to 1>, blocks: <range pruning: 1 to 1>]
│   │   ├── push downs: [filters: [], limit: NONE]
│   │   └── estimated rows: 1.00
│   └── TableScan(Probe)
│       ├── table: default.join_reorder.t1
│       ├── output columns: [a (#1)]
│       ├── read rows: 10
│       ├── read size: < 1 KiB
│       ├── partitions total: 1
│       ├── partitions scanned: 1
│       ├── pruning stats: [segments: <range pruning: 1 to 1>, blocks: <range pruning: 1 to 1>]
│       ├── push downs: [filters: [], limit: NONE]
│       ├── apply runtime filters: [#0]
│       └── estimated rows: 10.00
└── TableScan(Probe)
    ├── table: default.join_reorder.t2
    ├── output columns: [a (#0)]
    ├── read rows: 100
    ├── read size: < 1 KiB
    ├── partitions total: 1
    ├── partitions scanned: 1
    ├── pruning stats: [segments: <range pruning: 1 to 1>, blocks: <range pruning: 1 to 1>]
    ├── push downs: [filters: [], limit: NONE]
    ├── apply runtime filters: [#1]
    └── estimated rows: 100.00

query T
explain select * from t2, t, t1 where t.a = t2.a and t1.a = t2.a
----
HashJoin
├── output columns: [t2.a (#0), t.a (#1), t1.a (#2)]
├── join type: INNER
├── build keys: [t1.a (#2)]
├── probe keys: [t2.a (#0)]
├── keys is null equal: [false]
├── filters: []
├── build runtime filters:
│   └── rf_id:1, build_key:t1.a (#2), probe_key:t2.a (#0), rf_type:inlist,min_max
├── estimated rows: 1.00
├── HashJoin(Build)
│   ├── output columns: [t1.a (#2), t.a (#1)]
│   ├── join type: INNER
│   ├── build keys: [t.a (#1)]
│   ├── probe keys: [t1.a (#2)]
│   ├── keys is null equal: [false]
│   ├── filters: []
│   ├── build runtime filters:
│   │   └── rf_id:0, build_key:t.a (#1), probe_key:t1.a (#2), rf_type:inlist,min_max
│   ├── estimated rows: 1.00
│   ├── TableScan(Build)
│   │   ├── table: default.join_reorder.t
│   │   ├── output columns: [a (#1)]
│   │   ├── read rows: 1
│   │   ├── read size: < 1 KiB
│   │   ├── partitions total: 1
│   │   ├── partitions scanned: 1
│   │   ├── pruning stats: [segments: <range pruning: 1 to 1>, blocks: <range pruning: 1 to 1>]
│   │   ├── push downs: [filters: [], limit: NONE]
│   │   └── estimated rows: 1.00
│   └── TableScan(Probe)
│       ├── table: default.join_reorder.t1
│       ├── output columns: [a (#2)]
│       ├── read rows: 10
│       ├── read size: < 1 KiB
│       ├── partitions total: 1
│       ├── partitions scanned: 1
│       ├── pruning stats: [segments: <range pruning: 1 to 1>, blocks: <range pruning: 1 to 1>]
│       ├── push downs: [filters: [], limit: NONE]
│       ├── apply runtime filters: [#0]
│       └── estimated rows: 10.00
└── TableScan(Probe)
    ├── table: default.join_reorder.t2
    ├── output columns: [a (#0)]
    ├── read rows: 100
    ├── read size: < 1 KiB
    ├── partitions total: 1
    ├── partitions scanned: 1
    ├── pruning stats: [segments: <range pruning: 1 to 1>, blocks: <range pruning: 1 to 1>]
    ├── push downs: [filters: [], limit: NONE]
    ├── apply runtime filters: [#1]
    └── estimated rows: 100.00

statement ok
drop database join_reorder
